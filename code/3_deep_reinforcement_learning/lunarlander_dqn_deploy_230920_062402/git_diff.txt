diff --git a/code/3_deep_reinforcement_learning/.ipynb_checkpoints/2_custom_env_gym-checkpoint.ipynb b/code/3_deep_reinforcement_learning/.ipynb_checkpoints/2_custom_env_gym-checkpoint.ipynb
deleted file mode 100644
index 175e93a..0000000
--- a/code/3_deep_reinforcement_learning/.ipynb_checkpoints/2_custom_env_gym-checkpoint.ipynb
+++ /dev/null
@@ -1,141 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "markdown",
-   "id": "7a84f747",
-   "metadata": {},
-   "source": [
-    "Our custom environment will inherit from the abstract class gym.Env. You shouldn’t forget to add the metadata attribute to your class. There, you should specify the render-modes that are supported by your environment (e.g. \"human\", \"rgb_array\", \"ansi\") and the framerate at which your environment should be rendered. Every environment should supportNone as render-mode; you don’t need to add it in the metadata. In GridWorldEnv, we will support the modes “rgb_array” and “human” and render at 4 FPS.\n",
-    "\n",
-    "The __init__ method of our environment will accept the integer size, that determines the size of the square grid. We will set up some variables for rendering and define self.observation_space and self.action_space. In our case, observations should provide information about the location of the agent and target on the 2-dimensional grid. We will choose to represent observations in the form of a dictionaries with keys \"agent\" and \"target\". An observation may look like {\"agent\": array([1, 0]), \"target\": array([0, 3])}. Since we have 4 actions in our environment (“right”, “up”, “left”, “down”), we will use Discrete(4) as an action space. Here is the declaration of GridWorldEnv and the implementation of __init__:\n",
-    "\n",
-    "The reset method will be called to initiate a new episode. You may assume that the step method will not be called before reset has been called. Moreover, reset should be called whenever a done signal has been issued. Users may pass the seed keyword to reset to initialize any random number generator that is used by the environment to a deterministic state. It is recommended to use the random number generator self.np_random that is provided by the environment’s base class, gym.Env. If you only use this RNG, you do not need to worry much about seeding, but you need to remember to call super().reset(seed=seed) to make sure that gym.Env correctly seeds the RNG. Once this is done, we can randomly set the state of our environment. In our case, we randomly choose the agent’s location and the randomly sample target positions, until it does not coincide with the agent’s position.\n",
-    "The reset method should return a tuple of the initial observation and some auxiliary information. We can use the methods _get_obs and _get_info that we implemented earlier for that:"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 3,
-   "id": "f17051e7",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gym\n",
-    "from gym import spaces\n",
-    "import pygame\n",
-    "import numpy as np\n",
-    "\n",
-    "class GridWorldEnv(gym.Env):\n",
-    "    metadata = {\"render_modes\": [\"human\", \"rgb_array\"], \"render_fps\": 4}\n",
-    "\n",
-    "    def __init__(self, render_mode=None, size=5):\n",
-    "        self.size = size  # The size of the square grid\n",
-    "        self.window_size = 512  # The size of the PyGame window\n",
-    "\n",
-    "        # Observations are dictionaries with the agent's and the target's location.\n",
-    "        # Each location is encoded as an element of {0, ..., `size`}^2, i.e. MultiDiscrete([size, size]).\n",
-    "        self.observation_space = spaces.Dict(\n",
-    "            {\n",
-    "                \"agent\": spaces.Box(0, size - 1, shape=(2,), dtype=int),\n",
-    "                \"target\": spaces.Box(0, size - 1, shape=(2,), dtype=int),\n",
-    "            }\n",
-    "        )\n",
-    "\n",
-    "        # We have 4 actions, corresponding to \"right\", \"up\", \"left\", \"down\"\n",
-    "        self.action_space = spaces.Discrete(4)\n",
-    "\n",
-    "        \"\"\"\n",
-    "        The following dictionary maps abstract actions from `self.action_space` to \n",
-    "        the direction we will walk in if that action is taken.\n",
-    "        I.e. 0 corresponds to \"right\", 1 to \"up\" etc.\n",
-    "        \"\"\"\n",
-    "        self._action_to_direction = {\n",
-    "            0: np.array([1, 0]),\n",
-    "            1: np.array([0, 1]),\n",
-    "            2: np.array([-1, 0]),\n",
-    "            3: np.array([0, -1]),\n",
-    "        }\n",
-    "\n",
-    "        \n",
-    "    def reset(self, seed=None, options=None):\n",
-    "        # We need the following line to seed self.np_random\n",
-    "        super().reset(seed=seed)\n",
-    "\n",
-    "        # Choose the agent's location uniformly at random\n",
-    "        self._agent_location = self.np_random.integers(0, self.size, size=2, dtype=int)\n",
-    "\n",
-    "        # We will sample the target's location randomly until it does not coincide with the agent's location\n",
-    "        self._target_location = self._agent_location\n",
-    "        while np.array_equal(self._target_location, self._agent_location):\n",
-    "            self._target_location = self.np_random.integers(\n",
-    "                0, self.size, size=2, dtype=int\n",
-    "            )\n",
-    "\n",
-    "        observation = self._get_obs()\n",
-    "        info = self._get_info()\n",
-    "\n",
-    "        return observation, info # initial state\n",
-    "    \n",
-    "    def step(self, action):\n",
-    "        # Map the action (element of {0,1,2,3}) to the direction we walk in\n",
-    "        direction = self._action_to_direction[action]\n",
-    "        # We use `np.clip` to make sure we don't leave the grid\n",
-    "        self._agent_location = np.clip(\n",
-    "            self._agent_location + direction, 0, self.size - 1\n",
-    "        )\n",
-    "        # An episode is done iff the agent has reached the target\n",
-    "        terminated = np.array_equal(self._agent_location, self._target_location)\n",
-    "        reward = 1 if terminated else 0  # Binary sparse rewards\n",
-    "        observation = self._get_obs()\n",
-    "        info = self._get_info()\n",
-    "\n",
-    "        return observation, reward, terminated, False, info # new state, reward\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 4,
-   "id": "0b717679",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "from gym.envs.registration import register\n",
-    "\n",
-    "register(\n",
-    "    id='gym_examples/GridWorld-v0',\n",
-    "    entry_point='gym_examples.envs:GridWorldEnv',\n",
-    "    max_episode_steps=300,\n",
-    ")"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "d24184ca",
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3 (ipykernel)",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.10.13"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 5
-}
diff --git a/code/3_deep_reinforcement_learning/.ipynb_checkpoints/3_custom_env_DQN-checkpoint.ipynb b/code/3_deep_reinforcement_learning/.ipynb_checkpoints/3_custom_env_DQN-checkpoint.ipynb
deleted file mode 100644
index 363fcab..0000000
--- a/code/3_deep_reinforcement_learning/.ipynb_checkpoints/3_custom_env_DQN-checkpoint.ipynb
+++ /dev/null
@@ -1,6 +0,0 @@
-{
- "cells": [],
- "metadata": {},
- "nbformat": 4,
- "nbformat_minor": 5
-}
diff --git a/code/3_deep_reinforcement_learning/.ipynb_checkpoints/4_DQN_monopoly-checkpoint.ipynb b/code/3_deep_reinforcement_learning/.ipynb_checkpoints/4_DQN_monopoly-checkpoint.ipynb
deleted file mode 100644
index bd46add..0000000
--- a/code/3_deep_reinforcement_learning/.ipynb_checkpoints/4_DQN_monopoly-checkpoint.ipynb
+++ /dev/null
@@ -1,2250 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "markdown",
-   "id": "759514f9",
-   "metadata": {},
-   "source": [
-    "# Trading Game"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 253,
-   "id": "62aa116f",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "from gymnasium import spaces\n",
-    "import numpy as np\n",
-    "from functions import *\n",
-    "from itertools import count\n",
-    "buyer_strategies = ['Honest']\n",
-    "seller_strategies = ['Honest','Honest','Honest','Honest','Honest']\n",
-    "nbuyers, nsellers = len(buyer_strategies), len(seller_strategies)\n",
-    "nrounds, nperiods, ntokens, nsteps, gametype, nbuyers, nsellers = 1, 100, 5, 5, '1234', len(buyer_strategies), len(seller_strategies)\n",
-    "R1, R2, R3, R4 = gametype_to_ran(gametype)\n",
-    "game_metadata = [nrounds, nperiods, ntokens, nbuyers, nsellers, nsteps, R1, R2, R3, R4]\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "rnd = 0\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "period = 0\n",
-    "num_actions = 11\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.1\n",
-    "max_frac = 1.0\n",
-    "action_to_bid_frac = np.linspace(0,1,num_actions)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 254,
-   "id": "eebbf694",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "class TradingEnv(gym.Env):\n",
-    "    def __init__(self, db, nsteps, render_mode = None):\n",
-    "        self.db = db\n",
-    "        self.action_space = spaces.Discrete(num_actions)\n",
-    "        self.observation_space = spaces.Discrete(num_states)\n",
-    "\n",
-    "    def reset(self, rnd):\n",
-    "        self.db.reset_period(rnd)\n",
-    "        observation = np.array([0])\n",
-    "        return observation, None\n",
-    "\n",
-    "    def step(self, action, timestep, period, rnd, seed = None, options = None):\n",
-    "        bid_frac = action_to_bid_frac[action]\n",
-    "        # convert action to bid\n",
-    "        self.db.buyers[0].next_token()\n",
-    "        min_bid = self.db.buyers[0].value*min_frac\n",
-    "        max_bid = self.db.buyers[0].value*max_frac\n",
-    "        bid = np.round(min_bid * bid_frac + (1-bid_frac)*max_bid,1)\n",
-    "        \n",
-    "        # simulate market\n",
-    "        bids = [bid]\n",
-    "        asks = [seller.ask(self.db) for seller in self.db.sellers]\n",
-    "        current_ask, current_ask_idx, current_bid, current_bid_idx = current_bid_ask(bids, asks) \n",
-    "        sale, price, bprofit, sprofit, buy, sell = buy_sell(db, current_bid, current_bid_idx, current_ask, current_ask_idx)\n",
-    "        step_data = [rnd,period,timestep,bids,asks,current_bid,current_bid_idx,current_ask,current_ask_idx,buy,sell,price,sale,bprofit,sprofit]\n",
-    "        self.db.add_step(step_data)\n",
-    "        \n",
-    "        # compute reward, new state\n",
-    "        reward = np.array([0])\n",
-    "        if (sale == 1) and (current_bid_idx == 0):\n",
-    "            reward = np.array([bprofit])\n",
-    "        observation = np.array([timestep + 1])\n",
-    "        \n",
-    "        # check termination \n",
-    "        if timestep == nsteps-1:\n",
-    "            terminated = True\n",
-    "        else:\n",
-    "            terminated = False\n",
-    "        return observation, reward, terminated, False, None"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 255,
-   "id": "b00d629a",
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 0, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 1, New State: [1], Action:3, Reward: [42.9], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 2, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [2], Action:8, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 3, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [3], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [5], Action:9, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 4, New State: [1], Action:9, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [2], Action:7, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [3], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [5], Action:1, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 5, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [4], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 6, New State: [1], Action:8, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [2], Action:8, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [4], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 7, New State: [1], Action:5, Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [2], Action:3, Reward: [26.9], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 8, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [3], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 9, New State: [1], Action:2, Reward: [39.], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [2], Action:1, Reward: [20.9], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [3], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [5], Action:1, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 10, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [3], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [4], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [5], Action:4, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 11, New State: [1], Action:3, Reward: [42.9], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [5], Action:8, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 12, New State: [1], Action:7, Reward: [58.5], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [3], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [4], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [5], Action:8, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 13, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [2], Action:1, Reward: [20.9], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [4], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [5], Action:1, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 14, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [2], Action:4, Reward: [29.9], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [3], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 15, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [2], Action:4, Reward: [29.9], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 16, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 17, New State: [1], Action:8, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [4], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 18, New State: [1], Action:7, Reward: [58.5], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [4], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 19, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [5], Action:9, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 20, New State: [1], Action:3, Reward: [42.9], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 21, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [3], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [4], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 22, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 23, New State: [1], Action:3, Reward: [42.9], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [2], Action:3, Reward: [26.9], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 24, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [2], Action:3, Reward: [26.9], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [4], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 25, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [3], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 26, New State: [1], Action:5, Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [2], Action:4, Reward: [29.9], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [4], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [5], Action:1, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 27, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [2], Action:4, Reward: [29.9], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [4], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 28, New State: [1], Action:7, Reward: [58.5], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [2], Action:1, Reward: [20.9], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [3], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 29, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [4], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 30, New State: [1], Action:6, Reward: [54.6], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [4], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 31, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [2], Action:1, Reward: [20.9], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 32, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [3], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 33, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [3], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [4], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 34, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [5], Action:4, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 35, New State: [1], Action:8, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [4], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [5], Action:4, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 36, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [3], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [5], Action:9, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 37, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [2], Action:8, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [3], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 38, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [3], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [5], Action:9, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 39, New State: [1], Action:5, Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [2], Action:1, Reward: [20.9], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [5], Action:4, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 40, New State: [1], Action:6, Reward: [54.6], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [3], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 41, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [2], Action:7, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 42, New State: [1], Action:5, Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [2], Action:1, Reward: [20.9], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [4], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [5], Action:8, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 43, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 44, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [3], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 45, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [4], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 46, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [3], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 47, New State: [1], Action:3, Reward: [42.9], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [3], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 48, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [3], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 49, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [3], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 50, New State: [1], Action:6, Reward: [54.6], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [2], Action:4, Reward: [29.9], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [3], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 51, New State: [1], Action:8, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [3], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [4], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 52, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [3], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [4], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [5], Action:1, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 53, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [2], Action:8, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 54, New State: [1], Action:5, Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [2], Action:7, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [4], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 55, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [2], Action:10, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [4], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 56, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [2], Action:3, Reward: [26.9], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [3], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [4], Action:7, Reward: [0], Period End: False\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 56, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 57, New State: [1], Action:6, Reward: [54.6], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [4], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 58, New State: [1], Action:2, Reward: [39.], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [2], Action:4, Reward: [29.9], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [5], Action:8, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 59, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [3], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 60, New State: [1], Action:9, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [2], Action:8, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [3], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 61, New State: [1], Action:3, Reward: [42.9], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [3], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 62, New State: [1], Action:6, Reward: [54.6], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [3], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [4], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 63, New State: [1], Action:8, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [3], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [5], Action:9, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 64, New State: [1], Action:9, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [2], Action:3, Reward: [26.9], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [5], Action:1, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 65, New State: [1], Action:9, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [2], Action:10, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 66, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [3], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [4], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 67, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [3], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 68, New State: [1], Action:8, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 69, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 70, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 71, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [3], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 72, New State: [1], Action:9, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [2], Action:3, Reward: [26.9], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [3], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 73, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 74, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [2], Action:1, Reward: [20.9], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 75, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [3], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 76, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [2], Action:10, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [3], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [4], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [5], Action:8, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 77, New State: [1], Action:6, Reward: [54.6], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [2], Action:7, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 78, New State: [1], Action:5, Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [2], Action:7, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 79, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [2], Action:7, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [4], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 80, New State: [1], Action:5, Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 81, New State: [1], Action:10, Reward: [62.4], Period End: False\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 81, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 82, New State: [1], Action:5, Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [2], Action:7, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [5], Action:1, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 83, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [3], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [4], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 84, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [4], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [5], Action:1, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 85, New State: [1], Action:3, Reward: [42.9], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [2], Action:10, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 86, New State: [1], Action:8, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [3], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 87, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [3], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [4], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 88, New State: [1], Action:2, Reward: [39.], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [3], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [4], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 89, New State: [1], Action:9, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [5], Action:8, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 90, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [2], Action:3, Reward: [26.9], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 91, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [2], Action:8, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [3], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 92, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 93, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [2], Action:1, Reward: [20.9], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [4], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 94, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 95, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [3], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 96, New State: [1], Action:7, Reward: [58.5], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [2], Action:4, Reward: [29.9], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 97, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [4], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 98, New State: [1], Action:6, Reward: [54.6], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 99, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [3], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [4], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 100, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [3], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [4], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [5], Action:8, Reward: [0], Period End: True\n",
-      "done\n"
-     ]
-    }
-   ],
-   "source": [
-    "env = TradingEnv(db, nsteps)\n",
-    "rnd = 0\n",
-    "observation, info = env.reset(rnd)\n",
-    "for period in count():\n",
-    "    for timestep in count(): \n",
-    "        action = env.action_space.sample()\n",
-    "        observation, reward, done, info, reset_info = env.step(action, timestep, period, rnd)\n",
-    "        print(f\"Rnd: {rnd}, Period: {period}, New State: {observation}, Action:{np.round(action,1)}, Reward: {np.round(reward,1)}, Period End: {done}\")\n",
-    "\n",
-    "        if done:\n",
-    "            # If the episode is done, reset the environment\n",
-    "            print('done')\n",
-    "            observation, info = env.reset(rnd)\n",
-    "            timestep += 1\n",
-    "            break\n",
-    "    if period == nperiods:\n",
-    "        break\n",
-    "\n",
-    "# Close the environment when done\n",
-    "env.close()"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "dd2ff437",
-   "metadata": {},
-   "source": [
-    "# DQN"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 256,
-   "id": "c76c48b1",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "import math\n",
-    "import random\n",
-    "import matplotlib\n",
-    "import matplotlib.pyplot as plt\n",
-    "from collections import namedtuple, deque\n",
-    "from itertools import count\n",
-    "import torch\n",
-    "import torch.nn as nn\n",
-    "import torch.optim as optim\n",
-    "import torch.nn.functional as F\n",
-    "\n",
-    "# set up matplotlib\n",
-    "is_ipython = 'inline' in matplotlib.get_backend()\n",
-    "if is_ipython:\n",
-    "    from IPython import display\n",
-    "plt.ion()\n",
-    "\n",
-    "# if GPU is to be used\n",
-    "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 257,
-   "id": "28e8f271",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "Transition = namedtuple('Transition',('state', 'action', 'next_state', 'reward'))\n",
-    "class ReplayMemory(object):\n",
-    "\n",
-    "    def __init__(self, capacity):\n",
-    "        self.memory = deque([], maxlen=capacity)\n",
-    "\n",
-    "    def push(self, *args):\n",
-    "        \"\"\"Save a transition\"\"\"\n",
-    "        self.memory.append(Transition(*args))\n",
-    "\n",
-    "    def sample(self, batch_size):\n",
-    "        return random.sample(self.memory, batch_size)\n",
-    "\n",
-    "    def __len__(self):\n",
-    "        return len(self.memory)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 258,
-   "id": "6322f7db",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "class DQN(nn.Module):\n",
-    "    def __init__(self, n_observations, n_actions):\n",
-    "        super(DQN, self).__init__()\n",
-    "        self.layer1 = nn.Linear(n_observations, 256)\n",
-    "        self.layer2 = nn.Linear(256, 256)\n",
-    "        self.layer3 = nn.Linear(256, n_actions)\n",
-    "\n",
-    "    # Called with either one element to determine next action, or a batch\n",
-    "    # during optimization. Returns tensor([[left0exp,right0exp]...]).\n",
-    "    def forward(self, x):\n",
-    "        x = F.relu(self.layer1(x))\n",
-    "        x = F.relu(self.layer2(x))\n",
-    "        return self.layer3(x)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 259,
-   "id": "708bda54",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "def select_action(state):\n",
-    "    global steps_done\n",
-    "    sample = random.random()\n",
-    "    eps_threshold = EPS_END + (EPS_START - EPS_END) * \\\n",
-    "        math.exp(-1. * steps_done / EPS_DECAY)\n",
-    "    steps_done += 1\n",
-    "    if sample > eps_threshold:\n",
-    "        with torch.no_grad():\n",
-    "            return policy_net(state).max(1)[1].view(1, 1)\n",
-    "    else:\n",
-    "        return torch.tensor([[env.action_space.sample()]], device=device, dtype=torch.long)\n",
-    "\n",
-    "def plot_durations(show_result=False):\n",
-    "    plt.figure(1)\n",
-    "    durations_t = torch.tensor(episode_durations, dtype=torch.float)\n",
-    "    if show_result:\n",
-    "        plt.title('Result')\n",
-    "    else:\n",
-    "        plt.clf()\n",
-    "        plt.title('Training...')\n",
-    "    plt.xlabel('Episode')\n",
-    "    plt.ylabel('Duration')\n",
-    "    plt.plot(durations_t.numpy())\n",
-    "    if len(durations_t) >= 100:\n",
-    "        means = durations_t.unfold(0, 100, 1).mean(1).view(-1)\n",
-    "        means = torch.cat((torch.zeros(99), means))\n",
-    "        plt.plot(means.numpy())\n",
-    "    plt.pause(0.001)\n",
-    "    if is_ipython:\n",
-    "        if not show_result:\n",
-    "            display.display(plt.gcf())\n",
-    "            display.clear_output(wait=True)\n",
-    "        else:\n",
-    "            display.display(plt.gcf())"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 260,
-   "id": "0c832be2",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "def optimize_model():\n",
-    "    if len(memory) < BATCH_SIZE:\n",
-    "        return\n",
-    "    transitions = memory.sample(BATCH_SIZE)\n",
-    "    batch = Transition(*zip(*transitions))\n",
-    "    non_final_mask = torch.tensor(tuple(map(lambda s: s is not None,\n",
-    "                                          batch.next_state)), device=device, dtype=torch.bool)\n",
-    "    non_final_next_states = torch.cat([s for s in batch.next_state\n",
-    "                                                if s is not None])\n",
-    "    state_batch = torch.cat(batch.state)\n",
-    "    action_batch = torch.cat(batch.action)\n",
-    "    reward_batch = torch.cat(batch.reward)\n",
-    "    state_action_values = policy_net(state_batch).gather(1, action_batch)\n",
-    "    next_state_values = torch.zeros(BATCH_SIZE, device=device)\n",
-    "    with torch.no_grad():\n",
-    "        next_state_values[non_final_mask] = target_net(non_final_next_states).max(1)[0]\n",
-    "    expected_state_action_values = (next_state_values * GAMMA) + reward_batch\n",
-    "    criterion = nn.SmoothL1Loss()\n",
-    "    loss = criterion(state_action_values, expected_state_action_values.unsqueeze(1))\n",
-    "    optimizer.zero_grad()\n",
-    "    loss.backward()\n",
-    "    torch.nn.utils.clip_grad_value_(policy_net.parameters(), 100)\n",
-    "    optimizer.step()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 261,
-   "id": "e196c240",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "rnd = 0\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "period = 0\n",
-    "num_actions = 11\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.1\n",
-    "max_frac = 1.0\n",
-    "action_to_bid_frac = np.linspace(0,1,num_actions)\n",
-    "rnd = 0\n",
-    "env = TradingEnv(db, nsteps)\n",
-    "BATCH_SIZE = 256\n",
-    "GAMMA = 0\n",
-    "EPS_START = 0.9\n",
-    "EPS_END = 0.05\n",
-    "EPS_DECAY = 1000\n",
-    "TAU = 0.005\n",
-    "LR = 1e-4\n",
-    "n_actions = env.action_space.n\n",
-    "state, info = env.reset(rnd)\n",
-    "n_observations = len(state)\n",
-    "policy_net = DQN(n_observations, n_actions).to(device)\n",
-    "target_net = DQN(n_observations, n_actions).to(device)\n",
-    "target_net.load_state_dict(policy_net.state_dict())\n",
-    "optimizer = optim.AdamW(policy_net.parameters(), lr=LR, amsgrad=True)\n",
-    "memory = ReplayMemory(30000)\n",
-    "steps_done = 0\n",
-    "episode_durations = []"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 262,
-   "id": "c35ac7c5",
-   "metadata": {
-    "scrolled": false
-   },
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "0 114.55 [5, 3, 5, 1, 0] 0.89576060731378\n",
-      "1 112.35000000000001 [3, 4, 7, 10, 7] 0.8915423586867929\n",
-      "2 110.7 [2, 8, 2, 5, 9] 0.8873451486626033\n",
-      "3 114.525 [8, 5, 2, 3, 7] 0.883168872310742\n",
-      "4 119.64000000000001 [8, 9, 7, 10, 0] 0.8790134252240828\n",
-      "5 121.45 [7, 7, 3, 3, 5] 0.874878703516232\n",
-      "6 119.80714285714286 [2, 10, 3, 10, 4] 0.8707646038189315\n",
-      "7 116.59375 [0, 7, 0, 1, 7] 0.8666710232794748\n",
-      "8 116.94444444444444 [5, 9, 2, 3, 7] 0.862597859558135\n",
-      "9 118.455 [10, 4, 7, 10, 3] 0.858545010825607\n",
-      "10 116.81818181818181 [0, 5, 5, 0, 7] 0.8545123757604612\n",
-      "11 116.59166666666665 [8, 3, 0, 1, 1] 0.8504998535466114\n",
-      "12 116.7576923076923 [6, 7, 0, 8, 1] 0.846507343870793\n",
-      "13 115.21428571428571 [1, 2, 9, 6, 5] 0.842534746920056\n",
-      "14 113.40333333333334 [0, 5, 0, 7, 0] 0.8385819633792699\n",
-      "15 112.24375 [0, 4, 4, 3, 1] 0.8346488944286404\n",
-      "16 112.43235294117648 [2, 10, 7, 6, 1] 0.8307354417412388\n",
-      "17 112.37222222222222 [1, 9, 7, 5, 7] 0.826841507480544\n",
-      "18 112.62105263157896 [8, 0, 8, 9, 7] 0.8229669942979967\n",
-      "19 112.41000000000001 [1, 8, 4, 7, 7] 0.8191118053305656\n",
-      "20 113.48249999999999 [10, 7, 3, 6, 5] 0.8152758441983258\n",
-      "21 113.295 [3, 3, 7, 0, 10] 0.811459015002049\n",
-      "22 114.06750000000002 [7, 7, 0, 7, 7] 0.8076612223208066\n",
-      "23 112.61250000000003 [1, 5, 2, 0, 6] 0.8038823712095838\n",
-      "24 111.595 [5, 8, 2, 10, 7] 0.8001223671969062\n",
-      "25 112.14500000000001 [9, 7, 10, 7, 7] 0.7963811162824771\n",
-      "26 111.98000000000002 [7, 2, 0, 2, 2] 0.7926585249348292\n",
-      "27 113.255 [3, 7, 7, 7, 7] 0.788954500088985\n",
-      "28 112.26750000000001 [3, 1, 7, 1, 7] 0.7852689491441301\n",
-      "29 111.93000000000002 [10, 2, 7, 7, 7] 0.7816017799612992\n",
-      "30 112.70750000000001 [7, 1, 5, 6, 4] 0.7779529008610715\n",
-      "31 114.00750000000001 [8, 7, 6, 4, 3] 0.7743222206212796\n",
-      "32 114.17999999999999 [5, 6, 4, 4, 10] 0.7707096484747286\n",
-      "33 115.6875 [10, 2, 9, 5, 3] 0.7671150941069261\n",
-      "34 117.42749999999998 [7, 7, 0, 1, 7] 0.7635384676538263\n",
-      "35 117.12249999999999 [1, 4, 0, 2, 3] 0.7599796796995812\n",
-      "36 118.35499999999999 [8, 8, 7, 10, 5] 0.7564386412743068\n",
-      "37 118.63499999999999 [3, 6, 8, 3, 7] 0.7529152638518579\n",
-      "38 118.52749999999999 [5, 3, 7, 9, 7] 0.7494094593476157\n",
-      "39 118.46999999999998 [0, 8, 6, 7, 0] 0.7459211401162845\n",
-      "40 117.15 [4, 5, 2, 6, 7] 0.7424502189497024\n",
-      "41 118.63000000000002 [7, 7, 7, 2, 10] 0.738996609074659\n",
-      "42 118.98499999999999 [7, 5, 7, 7, 10] 0.7355602241507279\n",
-      "43 120.93999999999998 [7, 8, 7, 8, 0] 0.7321409782681068\n",
-      "44 120.75500000000002 [7, 1, 7, 0, 1] 0.7287387859454705\n",
-      "45 118.80750000000003 [6, 2, 0, 4, 3] 0.725353562127834\n",
-      "46 119.86500000000004 [5, 7, 7, 1, 8] 0.7219852221844253\n",
-      "47 118.33000000000001 [0, 3, 3, 8, 8] 0.7186336819065705\n",
-      "48 117.71250000000002 [0, 1, 9, 7, 4] 0.715298857505588\n",
-      "49 118.21000000000001 [7, 7, 5, 0, 6] 0.7119806656106942\n",
-      "50 119.21000000000001 [7, 9, 7, 7, 10] 0.7086790232669189\n",
-      "51 118.80750000000003 [10, 4, 8, 6, 5] 0.7053938479330314\n",
-      "52 119.29250000000002 [6, 7, 7, 7, 1] 0.7021250574794774\n",
-      "53 119.1 [10, 4, 1, 7, 7] 0.6988725701863252\n",
-      "54 119.55250000000001 [6, 8, 7, 4, 8] 0.6956363047412232\n",
-      "55 120.40500000000002 [7, 1, 1, 3, 3] 0.6924161802373666\n",
-      "56 119.58500000000001 [4, 7, 10, 7, 7] 0.6892121161714753\n",
-      "57 120.5375 [7, 7, 7, 6, 8] 0.6860240324417806\n",
-      "58 121.59 [7, 7, 9, 7, 7] 0.682851849346023\n",
-      "59 122.55500000000002 [7, 4, 7, 5, 7] 0.6796954875794602\n",
-      "60 123.05500000000002 [3, 8, 6, 5, 7] 0.6765548682328837\n",
-      "61 121.92500000000003 [7, 4, 0, 9, 2] 0.6734299127906459\n",
-      "62 121.845 [10, 8, 0, 5, 4] 0.6703205431286983\n",
-      "63 120.97 [9, 0, 7, 3, 0] 0.6672266815126373\n",
-      "64 121.76250000000002 [6, 7, 7, 7, 8] 0.6641482505957614\n",
-      "65 123.05250000000001 [10, 7, 0, 7, 4] 0.6610851734171372\n",
-      "66 121.57250000000002 [1, 9, 0, 8, 2] 0.6580373733996759\n",
-      "67 123.285 [7, 3, 8, 1, 8] 0.6550047743482182\n",
-      "68 123.51000000000002 [1, 5, 0, 3, 9] 0.65198730044763\n",
-      "69 122.1025 [4, 2, 5, 9, 7] 0.6489848762609065\n",
-      "70 121.2825 [3, 7, 7, 6, 8] 0.6459974267272867\n",
-      "71 121.00750000000001 [7, 4, 7, 1, 6] 0.6430248771603764\n",
-      "72 120.58 [4, 7, 7, 0, 7] 0.640067153246282\n",
-      "73 120.98500000000001 [7, 5, 5, 7, 4] 0.6371241810417515\n",
-      "74 119.91750000000002 [4, 9, 0, 7, 3] 0.6341958869723264\n",
-      "75 121.28000000000002 [7, 7, 4, 2, 7] 0.6312821978305024\n",
-      "76 121.89500000000002 [7, 9, 9, 4, 2] 0.6283830407738995\n",
-      "77 121.89500000000001 [7, 7, 6, 2, 7] 0.62549834332344\n",
-      "78 121.89500000000001 [7, 10, 7, 7, 4] 0.6226280333615375\n",
-      "79 122.51000000000002 [10, 6, 7, 3, 0] 0.6197720391302934\n",
-      "80 123.60499999999999 [9, 7, 7, 8, 7] 0.6169302892297033\n",
-      "81 124.73500000000001 [7, 7, 6, 7, 8] 0.6141027126158716\n",
-      "82 125.11749999999999 [7, 7, 7, 7, 7] 0.6112892385992355\n",
-      "83 125.15500000000002 [3, 7, 9, 0, 3] 0.6084897968427982\n",
-      "84 123.7125 [3, 2, 7, 0, 7] 0.6057043173603702\n",
-      "85 124.09500000000003 [7, 8, 9, 6, 7] 0.6029327305148191\n",
-      "86 125.58250000000001 [7, 9, 2, 4, 8] 0.6001749670163294\n",
-      "87 126.225 [7, 7, 10, 7, 7] 0.5974309579206702\n",
-      "88 126.96 [0, 7, 5, 4, 3] 0.5947006346274709\n",
-      "89 128.385 [7, 7, 5, 4, 7] 0.5919839288785074\n",
-      "90 128.32999999999998 [9, 0, 7, 7, 7] 0.589280772755994\n",
-      "91 128.27249999999998 [7, 7, 1, 7, 7] 0.5865910986808871\n",
-      "92 128.88750000000002 [7, 7, 10, 0, 7] 0.5839148394111947\n",
-      "93 128.7375 [7, 4, 7, 5, 3] 0.5812519280402957\n",
-      "94 129.48000000000005 [7, 7, 1, 7, 9] 0.5786022979952672\n",
-      "95 129.8325 [8, 7, 8, 3, 7] 0.5759658830352198\n",
-      "96 130.10750000000002 [10, 7, 7, 7, 7] 0.5733426172496424\n",
-      "97 129.07999999999998 [2, 7, 7, 2, 0] 0.5707324350567538\n",
-      "98 128.54500000000002 [7, 6, 2, 7, 9] 0.5681352712018629\n",
-      "99 128.6775 [9, 7, 7, 5, 7] 0.5655510607557385\n",
-      "100 128.6775 [9, 10, 9, 7, 4] 0.5629797391129845\n",
-      "101 128.24 [8, 3, 7, 5, 5] 0.5604212419904261\n",
-      "102 128.51500000000001 [10, 7, 7, 5, 7] 0.5578755054255019\n",
-      "103 129.35250000000002 [7, 7, 7, 5, 7] 0.5553424657746653\n",
-      "104 128.7525 [0, 2, 7, 7, 8] 0.5528220597117929\n",
-      "105 128.7525 [7, 7, 9, 7, 4] 0.5503142242266019\n",
-      "106 129.15500000000003 [7, 7, 7, 10, 5] 0.5478188966230747\n",
-      "107 128.49500000000003 [7, 3, 7, 0, 3] 0.5453360145178912\n",
-      "108 129.825 [10, 7, 2, 7, 9] 0.5428655158388694\n",
-      "109 129.845 [7, 7, 7, 7, 7] 0.5404073388234136\n",
-      "110 128.8825 [2, 2, 7, 3, 1] 0.5379614220169706\n",
-      "111 127.94500000000001 [7, 2, 0, 4, 8] 0.5355277042714927\n",
-      "112 126.91750000000002 [7, 3, 2, 3, 2] 0.5331061247439095\n",
-      "113 126.85500000000002 [7, 6, 2, 3, 1] 0.5306966228946065\n",
-      "114 125.91750000000002 [7, 2, 0, 2, 3] 0.5282991384859124\n",
-      "115 123.26750000000001 [1, 2, 2, 2, 9] 0.5259136115805917\n",
-      "116 121.86499999999998 [7, 1, 4, 5, 2] 0.5235399825403478\n",
-      "117 121.4675 [4, 2, 7, 2, 2] 0.521178192024331\n",
-      "118 120.44999999999997 [7, 0, 2, 7, 4] 0.5188281809876554\n",
-      "119 117.8975 [1, 3, 2, 2, 1] 0.5164898906799226\n",
-      "120 117.60249999999999 [7, 8, 5, 2, 7] 0.514163262643753\n",
-      "121 116.40500000000002 [1, 8, 2, 9, 2] 0.5118482387133249\n",
-      "122 113.68500000000002 [1, 2, 2, 8, 1] 0.5095447610129191\n",
-      "123 112.87500000000003 [7, 2, 9, 2, 2] 0.5072527719554734\n",
-      "124 112.88250000000001 [2, 2, 2, 4, 2] 0.5049722142411417\n",
-      "125 110.6425 [2, 2, 2, 10, 2] 0.5027030308558627\n",
-      "126 108.40249999999999 [2, 2, 2, 3, 6] 0.5004451650699333\n",
-      "127 108.03500000000001 [2, 7, 6, 2, 2] 0.4981985604365912\n",
-      "128 106.4775 [2, 7, 0, 8, 10] 0.49596316079060393\n",
-      "129 104.10500000000002 [3, 0, 2, 2, 6] 0.4937389102468636\n",
-      "130 104.575 [5, 2, 4, 2, 2] 0.49152575319899094\n",
-      "131 103.86500000000001 [2, 0, 10, 2, 2] 0.4893236343179443\n",
-      "132 103.48000000000002 [2, 7, 2, 6, 6] 0.4871324985506371\n",
-      "133 101.605 [2, 1, 2, 2, 4] 0.48495229111856103\n",
-      "134 101.04 [3, 2, 2, 2, 2] 0.48278295751641676\n",
-      "135 100.83500000000001 [0, 2, 2, 2, 2] 0.48062444351075106\n",
-      "136 99.3125 [0, 2, 2, 2, 2] 0.4784766951386017\n",
-      "137 99.75750000000001 [7, 1, 8, 2, 3] 0.4763396587061472\n",
-      "138 100.09750000000001 [7, 2, 2, 7, 10] 0.4742132807873656\n",
-      "139 101.1625 [7, 2, 2, 4, 9] 0.4720975082226981\n",
-      "140 99.97 [7, 2, 2, 2, 7] 0.4699922881177204\n",
-      "141 101.07 [7, 6, 2, 2, 2] 0.4678975678418203\n",
-      "142 102.3025 [7, 2, 2, 2, 2] 0.4658132950268818\n",
-      "143 101.64500000000001 [7, 2, 0, 8, 2] 0.4637394175659759\n",
-      "144 103.75750000000001 [9, 8, 2, 2, 2] 0.4616758836120581\n",
-      "145 105.9775 [7, 8, 5, 9, 2] 0.45962264157667204\n",
-      "146 107.40750000000003 [7, 2, 8, 2, 2] 0.45757964012866\n",
-      "147 107.60499999999999 [7, 2, 5, 2, 2] 0.4555468281928792\n",
-      "148 108.07749999999999 [7, 2, 2, 2, 2] 0.4535241549489255\n",
-      "149 109.2375 [7, 2, 2, 2, 3] 0.45151156982986246\n",
-      "150 109.30750000000003 [7, 0, 4, 2, 5] 0.44950902252095726\n",
-      "151 111.465 [7, 9, 5, 2, 2] 0.44751646295842284\n",
-      "152 112.49249999999999 [7, 10, 2, 6, 0] 0.44553384132816637\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "153 112.93999999999998 [5, 0, 2, 2, 0] 0.44356110806454385\n",
-      "154 114.56999999999998 [7, 7, 2, 2, 9] 0.4415982138491209\n",
-      "155 116.8175 [7, 7, 2, 2, 3] 0.43964510960944\n",
-      "156 119.4675 [7, 9, 9, 7, 0] 0.4377017465177933\n",
-      "157 120.045 [7, 7, 2, 2, 9] 0.43576807599000245\n",
-      "158 120.43749999999997 [3, 7, 7, 5, 0] 0.43384404968420337\n",
-      "159 121.65 [7, 7, 10, 7, 8] 0.4319296194996383\n",
-      "160 122.20250000000001 [7, 3, 7, 0, 0] 0.43002473757545295\n",
-      "161 122.7375 [7, 7, 7, 4, 4] 0.42812935628949994\n",
-      "162 123.95 [7, 7, 7, 5, 0] 0.42624342825714845\n",
-      "163 124.57000000000002 [6, 3, 7, 5, 1] 0.4243669063300994\n",
-      "164 123.26000000000002 [0, 7, 7, 7, 2] 0.4224997435952068\n",
-      "165 122.70250000000001 [7, 5, 3, 7, 6] 0.42064189337330526\n",
-      "166 122.3625 [7, 0, 7, 7, 0] 0.41879330921804225\n",
-      "167 121.7625 [2, 7, 2, 7, 0] 0.41695394491471777\n",
-      "168 122.975 [7, 7, 7, 6, 0] 0.41512375447912825\n",
-      "169 122.14500000000001 [1, 2, 7, 6, 5] 0.4133026921564177\n",
-      "170 123.4425 [7, 7, 7, 7, 5] 0.411490712419933\n",
-      "171 123.4625 [7, 7, 7, 7, 3] 0.4096877699700865\n",
-      "172 123.39250000000001 [7, 4, 7, 7, 6] 0.407893819733223\n",
-      "173 125.20750000000002 [7, 7, 4, 7, 5] 0.4061088168604931\n",
-      "174 122.87250000000002 [0, 3, 0, 7, 10] 0.4043327167267321\n",
-      "175 123.27500000000002 [7, 7, 7, 10, 5] 0.40256547492934414\n",
-      "176 123.275 [7, 7, 7, 3, 4] 0.40080704728719224\n",
-      "177 122.84 [3, 7, 7, 0, 7] 0.3990573898394937\n",
-      "178 122.42749999999998 [1, 7, 7, 7, 2] 0.39731645884472117\n",
-      "179 121.785 [7, 3, 7, 7, 6] 0.3955842107795092\n",
-      "180 121.57000000000001 [10, 0, 7, 7, 9] 0.393860602337566\n",
-      "181 120.3375 [1, 7, 7, 7, 10] 0.39214559042859054\n",
-      "182 120.3375 [7, 7, 7, 7, 7] 0.39043913217719595\n",
-      "183 121.39000000000001 [8, 7, 7, 2, 7] 0.388741184921837\n",
-      "184 122.82749999999999 [7, 7, 7, 7, 6] 0.3870517062137439\n",
-      "185 123.405 [7, 7, 10, 1, 3] 0.3853706538158609\n",
-      "186 123.40500000000002 [7, 0, 7, 7, 0] 0.3836979857017906\n",
-      "187 123.07250000000002 [1, 7, 1, 1, 10] 0.38203366005474293\n",
-      "188 122.6625 [5, 9, 7, 5, 10] 0.38037763526649004\n",
-      "189 123.19750000000002 [1, 7, 3, 4, 7] 0.378729869936326\n",
-      "190 123.19750000000002 [7, 7, 7, 7, 7] 0.37709032287003175\n",
-      "191 123.47250000000001 [9, 8, 7, 7, 2] 0.37545895307884525\n",
-      "192 123.94500000000001 [7, 7, 7, 8, 8] 0.37383571977843666\n",
-      "193 124.0925 [7, 7, 7, 7, 2] 0.37222058238788897\n",
-      "194 124.6525 [2, 0, 7, 9, 2] 0.37061350052868336\n",
-      "195 124.65249999999999 [7, 8, 7, 7, 2] 0.3690144340236896\n",
-      "196 123.215 [0, 7, 7, 2, 7] 0.3674233428961618\n",
-      "197 123.8475 [6, 7, 7, 7, 7] 0.36584018736873886\n",
-      "198 125.06250000000003 [7, 7, 7, 0, 9] 0.3642649278624501\n",
-      "199 125.98000000000002 [10, 7, 7, 7, 4] 0.36269752499572594\n",
-      "Complete\n"
-     ]
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/plain": [
-       "<Figure size 1000x800 with 0 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/plain": [
-       "<Figure size 1000x800 with 0 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "if torch.cuda.is_available():\n",
-    "    num_episodes = 600\n",
-    "else:\n",
-    "    num_episodes = 200\n",
-    "rnd = 0\n",
-    "period_reward_history = []\n",
-    "for period in range(num_episodes):\n",
-    "    state, info = env.reset(rnd)\n",
-    "    state = torch.tensor(state, dtype=torch.float32, device=device).unsqueeze(0)\n",
-    "    period_reward = np.array([0.0])\n",
-    "    actions_taken = []\n",
-    "    for timestep in count():\n",
-    "        action = select_action(state)\n",
-    "        actions_taken.append(action.item())\n",
-    "        observation, reward, terminated, truncated, _ = env.step(action.item(), timestep, period, rnd)\n",
-    "        period_reward += reward\n",
-    "        reward = torch.tensor([reward], device=device)\n",
-    "        done = terminated or truncated\n",
-    "        if terminated:\n",
-    "            next_state = None\n",
-    "        else:\n",
-    "            next_state = torch.tensor(observation, dtype=torch.float32, device=device).unsqueeze(0)\n",
-    "        memory.push(state, action, next_state, reward)\n",
-    "        state = next_state\n",
-    "        optimize_model()\n",
-    "        target_net_state_dict = target_net.state_dict()\n",
-    "        policy_net_state_dict = policy_net.state_dict()\n",
-    "        for key in policy_net_state_dict:\n",
-    "            target_net_state_dict[key] = policy_net_state_dict[key]*TAU + target_net_state_dict[key]*(1-TAU)\n",
-    "        target_net.load_state_dict(target_net_state_dict)\n",
-    "        if done:\n",
-    "            eps = EPS_END + (EPS_START - EPS_END) * math.exp(-1. * steps_done / EPS_DECAY)\n",
-    "            #episode_durations.append(t + 1)\n",
-    "            #plot_durations()\n",
-    "            break\n",
-    "    period_reward_history.append(period_reward.item())\n",
-    "    print(period, np.mean(period_reward_history[-20:]), actions_taken, eps)\n",
-    "print('Complete')\n",
-    "plot_durations(show_result=True)\n",
-    "plt.ioff()\n",
-    "plt.show()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 173,
-   "id": "39985728",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "env.db.step_data = env.db.step_data.drop_duplicates(subset=['rnd','period','step'], keep='last')"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 263,
-   "id": "9a979c2c",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[50.2]</td>\n",
-       "      <td>[29.3, 36.8, 52.0, 66.9, 22.8]</td>\n",
-       "      <td>50.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.8</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>36.50</td>\n",
-       "      <td>1</td>\n",
-       "      <td>54.80</td>\n",
-       "      <td>13.70</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[55.0]</td>\n",
-       "      <td>[29.3, 36.8, 52.0, 66.9, 30.4]</td>\n",
-       "      <td>55.0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>29.3</td>\n",
-       "      <td>0</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>42.15</td>\n",
-       "      <td>1</td>\n",
-       "      <td>33.15</td>\n",
-       "      <td>12.85</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[31.2]</td>\n",
-       "      <td>[33.8, 36.8, 52.0, 66.9, 30.4]</td>\n",
-       "      <td>31.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>30.4</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>30.80</td>\n",
-       "      <td>1</td>\n",
-       "      <td>25.90</td>\n",
-       "      <td>0.40</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[31.4]</td>\n",
-       "      <td>[33.8, 36.8, 52.0, 66.9, 44.8]</td>\n",
-       "      <td>31.4</td>\n",
-       "      <td>0</td>\n",
-       "      <td>33.8</td>\n",
-       "      <td>0</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>33.80</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0.70</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[32.8]</td>\n",
-       "      <td>[61.8, 36.8, 52.0, 66.9, 44.8]</td>\n",
-       "      <td>32.8</td>\n",
-       "      <td>0</td>\n",
-       "      <td>36.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>5</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[66.6]</td>\n",
-       "      <td>[29.3, 36.8, 52.0, 66.9, 22.8]</td>\n",
-       "      <td>66.6</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.8</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>44.70</td>\n",
-       "      <td>1</td>\n",
-       "      <td>46.60</td>\n",
-       "      <td>21.90</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>6</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[48.2]</td>\n",
-       "      <td>[29.3, 36.8, 52.0, 66.9, 30.4]</td>\n",
-       "      <td>48.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>29.3</td>\n",
-       "      <td>0</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>38.75</td>\n",
-       "      <td>1</td>\n",
-       "      <td>36.55</td>\n",
-       "      <td>9.45</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>7</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[21.0]</td>\n",
-       "      <td>[33.8, 36.8, 52.0, 66.9, 30.4]</td>\n",
-       "      <td>21.0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>30.4</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>30.40</td>\n",
-       "      <td>1</td>\n",
-       "      <td>26.30</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[3.4]</td>\n",
-       "      <td>[33.8, 36.8, 52.0, 66.9, 44.8]</td>\n",
-       "      <td>3.4</td>\n",
-       "      <td>0</td>\n",
-       "      <td>33.8</td>\n",
-       "      <td>0</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>33.80</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0.70</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>9</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[12.1]</td>\n",
-       "      <td>[61.8, 36.8, 52.0, 66.9, 44.8]</td>\n",
-       "      <td>12.1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>36.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "   rnd  period  step    bids                            asks  current_bid  \\\n",
-       "0    0       0     0  [50.2]  [29.3, 36.8, 52.0, 66.9, 22.8]         50.2   \n",
-       "1    0       0     1  [55.0]  [29.3, 36.8, 52.0, 66.9, 30.4]         55.0   \n",
-       "2    0       0     2  [31.2]  [33.8, 36.8, 52.0, 66.9, 30.4]         31.2   \n",
-       "3    0       0     3  [31.4]  [33.8, 36.8, 52.0, 66.9, 44.8]         31.4   \n",
-       "4    0       0     4  [32.8]  [61.8, 36.8, 52.0, 66.9, 44.8]         32.8   \n",
-       "5    0       1     0  [66.6]  [29.3, 36.8, 52.0, 66.9, 22.8]         66.6   \n",
-       "6    0       1     1  [48.2]  [29.3, 36.8, 52.0, 66.9, 30.4]         48.2   \n",
-       "7    0       1     2  [21.0]  [33.8, 36.8, 52.0, 66.9, 30.4]         21.0   \n",
-       "8    0       1     3   [3.4]  [33.8, 36.8, 52.0, 66.9, 44.8]          3.4   \n",
-       "9    0       1     4  [12.1]  [61.8, 36.8, 52.0, 66.9, 44.8]         12.1   \n",
-       "\n",
-       "   current_bid_idx  current_ask  current_ask_idx    buy   sell  price  sale  \\\n",
-       "0                0         22.8                4   True   True  36.50     1   \n",
-       "1                0         29.3                0   True   True  42.15     1   \n",
-       "2                0         30.4                4   True   True  30.80     1   \n",
-       "3                0         33.8                0   True  False  33.80     1   \n",
-       "4                0         36.8                1  False  False    NaN     0   \n",
-       "5                0         22.8                4   True   True  44.70     1   \n",
-       "6                0         29.3                0   True   True  38.75     1   \n",
-       "7                0         30.4                4   True  False  30.40     1   \n",
-       "8                0         33.8                0   True  False  33.80     1   \n",
-       "9                0         36.8                1  False  False    NaN     0   \n",
-       "\n",
-       "   bprofit  sprofit  \n",
-       "0    54.80    13.70  \n",
-       "1    33.15    12.85  \n",
-       "2    25.90     0.40  \n",
-       "3     0.70     0.00  \n",
-       "4     0.00     0.00  \n",
-       "5    46.60    21.90  \n",
-       "6    36.55     9.45  \n",
-       "7    26.30     0.00  \n",
-       "8     0.70     0.00  \n",
-       "9     0.00     0.00  "
-      ]
-     },
-     "execution_count": 263,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.head(10)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 124,
-   "id": "1985b17e",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>demand_schedule</th>\n",
-       "      <th>supply_schedule</th>\n",
-       "      <th>P_grid</th>\n",
-       "      <th>redemption_values</th>\n",
-       "      <th>token_costs</th>\n",
-       "      <th>p_eqbm</th>\n",
-       "      <th>q_eqbm</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>[10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1...</td>\n",
-       "      <td>[1, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 5, 5, 6, 6, ...</td>\n",
-       "      <td>[12.3, 13.054545454545455, 13.80909090909091, ...</td>\n",
-       "      <td>[[87.0, 76.7, 70.5, 66.3, 55.5, 50.3, 42.1, 40...</td>\n",
-       "      <td>[[40.9, 54.0, 55.2, 57.8, 58.7, 61.9, 62.8, 73...</td>\n",
-       "      <td>26.636364</td>\n",
-       "      <td>9</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "   rnd                                    demand_schedule  \\\n",
-       "0    0  [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1...   \n",
-       "\n",
-       "                                     supply_schedule  \\\n",
-       "0  [1, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 5, 5, 6, 6, ...   \n",
-       "\n",
-       "                                              P_grid  \\\n",
-       "0  [12.3, 13.054545454545455, 13.80909090909091, ...   \n",
-       "\n",
-       "                                   redemption_values  \\\n",
-       "0  [[87.0, 76.7, 70.5, 66.3, 55.5, 50.3, 42.1, 40...   \n",
-       "\n",
-       "                                         token_costs     p_eqbm  q_eqbm  \n",
-       "0  [[40.9, 54.0, 55.2, 57.8, 58.7, 61.9, 62.8, 73...  26.636364       9  "
-      ]
-     },
-     "execution_count": 124,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.get_round(rnd)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 241,
-   "id": "a09d4970",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>[77.1]</td>\n",
-       "      <td>[22.3, 17.5, 22.4, 19.2, 30.9]</td>\n",
-       "      <td>77.1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>17.5</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>47.30</td>\n",
-       "      <td>46.70</td>\n",
-       "      <td>29.80</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>1</td>\n",
-       "      <td>[17.6]</td>\n",
-       "      <td>[22.3, 22.9, 22.4, 19.2, 30.9]</td>\n",
-       "      <td>17.6</td>\n",
-       "      <td>0</td>\n",
-       "      <td>19.2</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>19.20</td>\n",
-       "      <td>73.30</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>2</td>\n",
-       "      <td>[6.9]</td>\n",
-       "      <td>[22.3, 22.9, 22.4, 26.6, 30.9]</td>\n",
-       "      <td>6.9</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.3</td>\n",
-       "      <td>0</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>22.30</td>\n",
-       "      <td>46.30</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>3</td>\n",
-       "      <td>[61.0]</td>\n",
-       "      <td>[31.2, 22.9, 22.4, 26.6, 30.9]</td>\n",
-       "      <td>61.0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.4</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>41.70</td>\n",
-       "      <td>25.30</td>\n",
-       "      <td>19.30</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>4</td>\n",
-       "      <td>[42.2]</td>\n",
-       "      <td>[31.2, 22.9, 25.7, 26.6, 30.9]</td>\n",
-       "      <td>42.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.9</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>32.55</td>\n",
-       "      <td>33.35</td>\n",
-       "      <td>9.65</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>5</th>\n",
-       "      <td>5</td>\n",
-       "      <td>[42.2]</td>\n",
-       "      <td>[31.2, 48.3, 25.7, 26.6, 30.9]</td>\n",
-       "      <td>42.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>25.7</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>33.95</td>\n",
-       "      <td>17.55</td>\n",
-       "      <td>8.25</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>6</th>\n",
-       "      <td>6</td>\n",
-       "      <td>[42.1]</td>\n",
-       "      <td>[31.2, 48.3, 30.0, 26.6, 30.9]</td>\n",
-       "      <td>42.1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>26.6</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>34.35</td>\n",
-       "      <td>16.95</td>\n",
-       "      <td>7.75</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>7</th>\n",
-       "      <td>7</td>\n",
-       "      <td>[14.9]</td>\n",
-       "      <td>[31.2, 48.3, 30.0, 38.7, 30.9]</td>\n",
-       "      <td>14.9</td>\n",
-       "      <td>0</td>\n",
-       "      <td>30.0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>30.00</td>\n",
-       "      <td>10.30</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8</th>\n",
-       "      <td>8</td>\n",
-       "      <td>[35.2]</td>\n",
-       "      <td>[31.2, 48.3, 41.0, 38.7, 30.9]</td>\n",
-       "      <td>35.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>30.9</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>33.05</td>\n",
-       "      <td>5.65</td>\n",
-       "      <td>2.15</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>9</th>\n",
-       "      <td>9</td>\n",
-       "      <td>[28.9]</td>\n",
-       "      <td>[31.2, 48.3, 41.0, 38.7, 36.9]</td>\n",
-       "      <td>28.9</td>\n",
-       "      <td>0</td>\n",
-       "      <td>31.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>31.20</td>\n",
-       "      <td>0.60</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "   step    bids                            asks  current_bid  current_bid_idx  \\\n",
-       "0     0  [77.1]  [22.3, 17.5, 22.4, 19.2, 30.9]         77.1                0   \n",
-       "1     1  [17.6]  [22.3, 22.9, 22.4, 19.2, 30.9]         17.6                0   \n",
-       "2     2   [6.9]  [22.3, 22.9, 22.4, 26.6, 30.9]          6.9                0   \n",
-       "3     3  [61.0]  [31.2, 22.9, 22.4, 26.6, 30.9]         61.0                0   \n",
-       "4     4  [42.2]  [31.2, 22.9, 25.7, 26.6, 30.9]         42.2                0   \n",
-       "5     5  [42.2]  [31.2, 48.3, 25.7, 26.6, 30.9]         42.2                0   \n",
-       "6     6  [42.1]  [31.2, 48.3, 30.0, 26.6, 30.9]         42.1                0   \n",
-       "7     7  [14.9]  [31.2, 48.3, 30.0, 38.7, 30.9]         14.9                0   \n",
-       "8     8  [35.2]  [31.2, 48.3, 41.0, 38.7, 30.9]         35.2                0   \n",
-       "9     9  [28.9]  [31.2, 48.3, 41.0, 38.7, 36.9]         28.9                0   \n",
-       "\n",
-       "   current_ask  current_ask_idx   buy   sell  price  bprofit  sprofit  \n",
-       "0         17.5                1  True   True  47.30    46.70    29.80  \n",
-       "1         19.2                3  True  False  19.20    73.30     0.00  \n",
-       "2         22.3                0  True  False  22.30    46.30     0.00  \n",
-       "3         22.4                2  True   True  41.70    25.30    19.30  \n",
-       "4         22.9                1  True   True  32.55    33.35     9.65  \n",
-       "5         25.7                2  True   True  33.95    17.55     8.25  \n",
-       "6         26.6                3  True   True  34.35    16.95     7.75  \n",
-       "7         30.0                2  True  False  30.00    10.30     0.00  \n",
-       "8         30.9                4  True   True  33.05     5.65     2.15  \n",
-       "9         31.2                0  True  False  31.20     0.60     0.00  "
-      ]
-     },
-     "execution_count": 241,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "db.get_period(rnd, 0)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 243,
-   "id": "9b83cc07",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>1990</th>\n",
-       "      <td>0</td>\n",
-       "      <td>[77.1]</td>\n",
-       "      <td>[22.3, 17.5, 22.4, 19.2, 30.9]</td>\n",
-       "      <td>77.1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>17.5</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>47.30</td>\n",
-       "      <td>46.70</td>\n",
-       "      <td>29.80</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1991</th>\n",
-       "      <td>1</td>\n",
-       "      <td>[34.2]</td>\n",
-       "      <td>[22.3, 22.9, 22.4, 19.2, 30.9]</td>\n",
-       "      <td>34.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>19.2</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>26.70</td>\n",
-       "      <td>65.80</td>\n",
-       "      <td>7.50</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1992</th>\n",
-       "      <td>2</td>\n",
-       "      <td>[37.7]</td>\n",
-       "      <td>[22.3, 22.9, 22.4, 26.6, 30.9]</td>\n",
-       "      <td>37.7</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.3</td>\n",
-       "      <td>0</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>30.00</td>\n",
-       "      <td>38.60</td>\n",
-       "      <td>7.70</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1993</th>\n",
-       "      <td>3</td>\n",
-       "      <td>[36.8]</td>\n",
-       "      <td>[31.2, 22.9, 22.4, 26.6, 30.9]</td>\n",
-       "      <td>36.8</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.4</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>29.60</td>\n",
-       "      <td>37.40</td>\n",
-       "      <td>7.20</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1994</th>\n",
-       "      <td>4</td>\n",
-       "      <td>[36.2]</td>\n",
-       "      <td>[31.2, 22.9, 25.7, 26.6, 30.9]</td>\n",
-       "      <td>36.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.9</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>29.55</td>\n",
-       "      <td>36.35</td>\n",
-       "      <td>6.65</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1995</th>\n",
-       "      <td>5</td>\n",
-       "      <td>[28.3]</td>\n",
-       "      <td>[31.2, 48.3, 25.7, 26.6, 30.9]</td>\n",
-       "      <td>28.3</td>\n",
-       "      <td>0</td>\n",
-       "      <td>25.7</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>27.00</td>\n",
-       "      <td>24.50</td>\n",
-       "      <td>1.30</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1996</th>\n",
-       "      <td>6</td>\n",
-       "      <td>[28.2]</td>\n",
-       "      <td>[31.2, 48.3, 30.0, 26.6, 30.9]</td>\n",
-       "      <td>28.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>26.6</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>27.40</td>\n",
-       "      <td>23.90</td>\n",
-       "      <td>0.80</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1997</th>\n",
-       "      <td>7</td>\n",
-       "      <td>[22.2]</td>\n",
-       "      <td>[31.2, 48.3, 30.0, 38.7, 30.9]</td>\n",
-       "      <td>22.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>30.0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>30.00</td>\n",
-       "      <td>10.30</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1998</th>\n",
-       "      <td>8</td>\n",
-       "      <td>[24.8]</td>\n",
-       "      <td>[31.2, 48.3, 41.0, 38.7, 30.9]</td>\n",
-       "      <td>24.8</td>\n",
-       "      <td>0</td>\n",
-       "      <td>30.9</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>30.90</td>\n",
-       "      <td>7.80</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1999</th>\n",
-       "      <td>9</td>\n",
-       "      <td>[26.1]</td>\n",
-       "      <td>[31.2, 48.3, 41.0, 38.7, 36.9]</td>\n",
-       "      <td>26.1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>31.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>31.20</td>\n",
-       "      <td>0.60</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "      step    bids                            asks  current_bid  \\\n",
-       "1990     0  [77.1]  [22.3, 17.5, 22.4, 19.2, 30.9]         77.1   \n",
-       "1991     1  [34.2]  [22.3, 22.9, 22.4, 19.2, 30.9]         34.2   \n",
-       "1992     2  [37.7]  [22.3, 22.9, 22.4, 26.6, 30.9]         37.7   \n",
-       "1993     3  [36.8]  [31.2, 22.9, 22.4, 26.6, 30.9]         36.8   \n",
-       "1994     4  [36.2]  [31.2, 22.9, 25.7, 26.6, 30.9]         36.2   \n",
-       "1995     5  [28.3]  [31.2, 48.3, 25.7, 26.6, 30.9]         28.3   \n",
-       "1996     6  [28.2]  [31.2, 48.3, 30.0, 26.6, 30.9]         28.2   \n",
-       "1997     7  [22.2]  [31.2, 48.3, 30.0, 38.7, 30.9]         22.2   \n",
-       "1998     8  [24.8]  [31.2, 48.3, 41.0, 38.7, 30.9]         24.8   \n",
-       "1999     9  [26.1]  [31.2, 48.3, 41.0, 38.7, 36.9]         26.1   \n",
-       "\n",
-       "      current_bid_idx  current_ask  current_ask_idx   buy   sell  price  \\\n",
-       "1990                0         17.5                1  True   True  47.30   \n",
-       "1991                0         19.2                3  True   True  26.70   \n",
-       "1992                0         22.3                0  True   True  30.00   \n",
-       "1993                0         22.4                2  True   True  29.60   \n",
-       "1994                0         22.9                1  True   True  29.55   \n",
-       "1995                0         25.7                2  True   True  27.00   \n",
-       "1996                0         26.6                3  True   True  27.40   \n",
-       "1997                0         30.0                2  True  False  30.00   \n",
-       "1998                0         30.9                4  True  False  30.90   \n",
-       "1999                0         31.2                0  True  False  31.20   \n",
-       "\n",
-       "      bprofit  sprofit  \n",
-       "1990    46.70    29.80  \n",
-       "1991    65.80     7.50  \n",
-       "1992    38.60     7.70  \n",
-       "1993    37.40     7.20  \n",
-       "1994    36.35     6.65  \n",
-       "1995    24.50     1.30  \n",
-       "1996    23.90     0.80  \n",
-       "1997    10.30     0.00  \n",
-       "1998     7.80     0.00  \n",
-       "1999     0.60     0.00  "
-      ]
-     },
-     "execution_count": 243,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "db.get_period(rnd, 199)"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "0a56182c",
-   "metadata": {},
-   "source": [
-    "# Graph"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 264,
-   "id": "f958b2e9",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "def graph(demand_schedule, supply_schedule, P_grid, p_eqbm, q_eqbm, \n",
-    "                        period_bids, period_asks, period_prices, period_sales, \n",
-    "                        redemption_values, token_costs, ntokens, nbuyers, nsellers, nsteps):\n",
-    "    plt.plot(demand_schedule, P_grid, label = 'Demand Curve')\n",
-    "    plt.plot(supply_schedule, P_grid, label = 'Supply Curve')\n",
-    "    plt.plot(period_prices, color='green', linestyle='--', label='Mean Real Prices')\n",
-    "    plt.axhline(y=np.nanmean(p_eqbm), color='black', linestyle='--', label='Mean Eqbm Prices')\n",
-    "    prices = []\n",
-    "    for i in range(nsteps):\n",
-    "        if (period_prices[i] > 0):\n",
-    "            plt.scatter([period_sales[i]]*len(period_bids[i]), period_bids[i], s = 10, marker = 'x', c = 'red')\n",
-    "            plt.scatter([period_sales[i]]*len(period_asks[i]), period_asks[i], s = 10, marker = 'o', c = 'blue')\n",
-    "        else:\n",
-    "            pass  \n",
-    "    plt.legend()\n",
-    "    text_content = f'q*={q_eqbm}, mean(q)={np.round(np.nanmax(period_sales),1)},p*={np.round(p_eqbm,1)}, mean(p)={np.round(np.nanmean(period_prices),1)}'\n",
-    "    plt.title(text_content)\n",
-    "    plt.xlim(0,q_eqbm*1.2)\n",
-    "    plt.ylim(0,p_eqbm*3.0)\n",
-    "    plt.show()\n",
-    "    \n",
-    "    plt.plot(period_bids, c = 'r', linestyle='--')\n",
-    "    plt.plot(period_asks, c = 'b', linestyle='--')\n",
-    "    plt.scatter(range(nsteps), period_prices, c = 'g')\n",
-    "    plt.title('Bids (red), Asks (blue) and Prices (green) over trading steps')\n",
-    "    plt.show()\n",
-    "\n",
-    "def graph_period(db, rnd, period):\n",
-    "    period_bids = list(db.get_period(rnd, period).bids)\n",
-    "    period_asks = list(db.get_period(rnd, period).asks)\n",
-    "    period_prices = list(db.get_period(rnd, period).price)\n",
-    "    period_sales = np.cumsum(np.where(db.get_period(rnd, period).price > 0,1,0))\n",
-    "    [_, demand_schedule, supply_schedule, P_grid, redemption_values, token_costs, p_eqbm, q_eqbm] = db.get_round(rnd).iloc[0].tolist()\n",
-    "    graph(demand_schedule, supply_schedule, P_grid, p_eqbm, q_eqbm, period_bids, period_asks, period_prices, period_sales, redemption_values, token_costs, db.ntokens, db.nbuyers, db.nsellers, db.nsteps)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 265,
-   "id": "4f957991",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAz8AAAKrCAYAAADf1TOiAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjYuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8o6BhiAAAACXBIWXMAAA9hAAAPYQGoP6dpAACKPUlEQVR4nOzdd3gU1eLG8Xc2uyENEhISUqSG3nsRKWLBDiiCIgqCXr2IgtgrqPBTroKKlXuligqIgBUsICoiSpcqHZEaSgKm7mbn90fIypJCEpJswnw/z5OH3TNnZs9uzi775pw5Y5imaQoAAAAALnA2XzcAAAAAAEoD4QcAAACAJRB+AAAAAFgC4QcAAACAJRB+AAAAAFgC4QcAAACAJRB+AAAAAFgC4QcAAACAJRB+AAAAAFgC4QcAStCoUaMUEBCgffv2nddxJkyYIIfDoa1btxZTy4ALB+8zAAVF+AHKkW7dumnatGml9nimaeqKK66QYRgyDEMul6vUHvtCsG/fPr388sv617/+pWrVqp3Xsf79738rMjJSDz/8cDG17ty2bdum4OBgGYahAQMGlNrjjh49WoMGDSqx4588eVIjRoxQ586dFRsbq4CAAEVFRaldu3Z67bXXlJycnGOfDRs26K677lLLli0VGRmpChUqqFq1arr88ss1b948maZZqDYcPnxY999/v2rVqqUKFSooMjJSvXv31po1a4rraVpGeXufTZkyRb169VKdOnVUqVIlBQcHq2HDhrr77rv1xx9/5LpPzZo1PZ/DZ/9ER0cXug1ffvmlrrzySl100UUKDAxU7dq1dfPNN+uXX34536cHlHl2XzcAQN5SUlKUkpKiKlWq5Lp97969qlGjRok9/ptvvqnvv/9eAQEBSktLK7HHuVC98MILSk9P16OPPnrexwoMDNSIESP02GOPafny5br44ouLoYV5c7lcuv3222Wzlc7fyPLry/v27VNcXFyxteX48eP673//q3bt2unaa69VZGSkkpKStGTJEj344IP63//+p19++UWVKlXy7LN69WotWLBAHTp00MUXX6zQ0FAdOnRIn3/+uW666SbdfvvtmjFjRoEef8+ePbr44ot18OBBtWvXTjfeeKMSEhI0b948ffnll/r888/Vo0ePYnmuVlDe3mczZ87UwYMH1b59e0VHR8tms2nTpk2aOnWqZsyYoQULFujqq6/OsV9oaKhGjBiRozwkJKRQj//YY4/pP//5jyIiItSrVy9VqVJFO3bs0KeffqpPPvlEM2bMKNU/dgClzgRQZn344YdmeHi4+dZbb5mZmZlm165dzalTp5oHDhwwb7vtNjMyMtI8efJkiTz21q1bzcDAQPOxxx4za9SoYUoynU5niTzWhSgxMdEMCgoyr7jiimI75v79+02bzWbedtttxXbMvDz33HOmv7+/+frrr5uSSvQxd+3aZYaEhJjDhw83ExMTzVGjRpkDBw40U1NTzeeee86sWLGi+dNPPxXb47lcLjMjIyPXbbfddpspyRw3bpxXeVpaWq71k5KSzIYNG5qSzF9//bVAj3/DDTeYkswHHnjAdLvdnvI//vjDrFixohkTE2P+/fffBXw21lYe32epqam5ln/zzTemJLNhw4Y5ttWoUcOsUaPGeT/2wYMHTZvNZlatWtU8fPiw17YlS5aYksxatWqd9+MAZRnT3oBSZpqm3nzzTTVu3FgBAQGKi4vTsGHDlJSUpJo1a6pmzZqeurfeequ++uorffzxx2rdurX++usvffTRR2rRooViYmK0detWVaxYsdjbmP1X/9q1a+u5554r1mPv2bNHhmFo0KBB2rlzp/r06aOIiAhVrFhRV155pTZu3ChJSkhI0L/+9S/FxMQoICBAbdu21ffff59ne99++2116NBBlSpVUlBQkFq2bKk333xTbrc7R/1p06bppptuUu3atRUYGKhKlSqpU6dOmjlzZq7H79atm2fa3//93/+pbt26nmlPjz32mDIyMnLs89FHHyklJUX9+vXL9ZiF6QfZYmNj1aVLF82dO1cnT57M6yU+b6tWrdILL7ygZ555Rs2aNSvSMbKfQ1JSkoYNG6a4uDgFBASoUaNGmjhxotc0sVq1amnLli06deqUGjVqpMWLF+v3339XkyZNtG7dOv3222+65JJLiuvpyc/PTw6HI9dtN998syRp+/btXuUVKlTItX6lSpU8ozRn75ObtLQ0LVy4UDabTWPGjJFhGJ5t9erV0+DBg3Xw4EF98sknBXoueeF95v0abN26Vb169VJ4eLiCg4N1ySWX6Jtvvsm1HSX9PgsICMi1/IorrlBYWJh27NhR7I+Zbe/evXK73Wrfvr2ioqK8tl166aWqWLGiEhISSuzxgTLBx+ELsJwHHnjAlGTGxMSY999/vzly5EgzPj7ebNOmjRkTE5PnX/dGjBhhSjKDgoLMn3/+uUTbOGrUKNNut5srV640TdMs1pGf3bt3m5LMrl27mhEREeYll1xijhw50rzxxhtNwzDMiIgIc9u2bWbt2rXNFi1amMOHDzdvv/120+FwmBUqVDD37t3rdbyMjAyzR48epiSzfv365j333GMOHz7cbNasmSnJHDBgQI42BAQEmK1btzYHDhxoPv744+bdd99txsXFmZLMp59+Okf9rl27mpLMm2++2YyOjjbvvPNOc/jw4WbdunVNSeagQYNy7HPTTTeZksytW7fm+joUtR889dRTpiTz888/L8CrXXgpKSlmgwYNzDZt2phOp9P8/vvvizTyU6NGDTMmJsZs06aNWadOHXPkyJHmsGHDzJiYGFOSOXTo0Fz3++STT0w/Pz9Tkvn6668Xx1MqlCFDhpiSzIkTJxaofnJysqevrV+//pz19+/fb0oyo6Kict2ePdJ2xx13FKrdZ+N99s9r0KVLFzMsLMzs3Lmz+fjjj5sDBw40AwICTJvNZs6aNSvX16+k32e5+emnn0xJZqtWrXJsq1GjhhkdHW2+//775tixY83XXnvNXLJkielyuQr1GMeOHTP9/f3N6OhoMyEhwWvbDz/8YEoye/XqdV7PAyjrDNMs5FmaAIps+fLl6tSpk+Lj4/Xbb78pPDxcUtZfgy+99FKtWLFCNWrU0J49ezz7/Pbbb3r88cd14sQJnTp1SrVr19b69es1cOBAPf74455jSFknihdGt27d1K1bN6+ylStX6uKLL9bjjz+uF154QVLWX/H37t0rp9Mpu/38ThXcs2ePatWqJUkaM2aMnnrqKc+2F154Qc8++6wqV66svn376u233/ac5/H+++/rjjvu0IgRI/Tqq6969hk9erSee+45DRs2TK+99pr8/PwkSZmZmfrXv/6lKVOmaMGCBerZs6dnn507dyo+Pt6rXRkZGbr66qv1448/as+ePYqLi/N6nX744Qe1atVK3377rec1T05OVvPmzbV7927t37/f68Tj6OhopaamKjEx0euv+1LR+kG2Tz/9VL169dIjjzyi//znP57ydevWacGCBef+BZxhxIgRCgsL8yobPny4Jk2apDVr1qhRo0ZaunSpLr30Ut122215/sU+N9l9plOnTlq8eLFn5OT48eNq27atdu3apR9++EFdunSRJP31118aPXq0Fi5cqNq1ays5OVlJSUlq0aKF/u///k/169f3HHvatGm5vjb5tSW3BRRcLpfGjBnjaddPP/2kdevW6dJLL9VXX32V61/od+zYoZkzZyozM1OHDx/Wl19+qQMHDuiJJ57Q//3f/52zLampqapYsaJM01RSUlKO8zVGjBih119/Xe3bt9eKFSsK/BzPxvvM+zV4+OGH9fLLL3u2rVq1Sh07dlRISIj27t3rdX6XVPLvM0maO3euNm7cqNTUVG3btk1fffWVQkJC9MUXX6hjx45edbPfT2erVauWpk6dqq5duxa4Pa+99ppGjhypKlWqqFevXoqIiNDOnTv12WefqUuXLpo5c2aOUSHgguLj8AVYyl133WVKMqdMmZJjW/Zf2M/8i3/2OT9vvvmm6XK5vM756d+/f45zfiQV6mfUqFFebUhJSTHr169vNm/e3OuciJIY+alZs2aOv1ru3bvXM7p19rlMLpfLtNvtZrdu3TxlmZmZZnh4uBkdHZ1r206cOGEahmHefPPNBWrbJ598Ykoyp0+f7lWe/Rfpb7/9Nsc+zz77bI6/EKenp5uSzLp16+b6OIXtB2dasWKFKcns16+fV/nUqVML/fvfvXu31zG+++470zAMr/NdzmfkR5L5448/5tiW3dbsv+Rnn/PzwAMP5DjnZ/To0TnO+cn+fRT0p2vXrrm2MTU1NUfd22+/3Tx16lSez2vhwoVe9f39/c2XX37Z69ydc7n88stNSeaDDz7oVb59+3azYsWKpiSzXr16BT5ebnif/fMahIaG5npu5MCBA01J5rRp03JsK8n3WbZ+/fp51atbt65ntP1so0ePNhcvXmweOnTITE5ONjds2GDec889pmEYZmBgoLlu3bpc98vL/PnzzcqVK3s9fp06dcwPPvigUMcByiNWewNKUfYytrn9le6SSy7x/DU1W8+ePXXFFVfkWO0tJiZGH3zwgfbu3et1zo95ngO5jz76qHbt2qWVK1fmeU5EcWnRokWO5xsbGysp69yHs89l8vPzU9WqVfXXX395yrZt26bjx4+rbt26nr/gny0wMFBbtmzxKvvzzz81btw4LV68WH/++adSU1O9tu/fvz/XY7Vp0yZHWfbSuidOnPCUHTt2TJJUuXLlXI9T2H5wpuy/hh89etSrfNCgQee1PHRiYqIGDRqk9u3b66GHHirycc5kt9tzXS0re7Rx7dq1krL+er1x48Ycq70FBARo1KhRGjx4sNcIwdKlS4ulfQEBATJNU6Zp6sCBA/ruu+/0xBNPqE2bNlq0aFGu511dddVVMk1TTqdTf/75pz744AM9+eST+uGHH/TJJ5/I39//nI/72muvqVOnTnr11Vf1yy+/qFOnTkpISNAnn3yiunXrat26dcW2sp2V32fZWrVqleu5kd26ddP06dO1du1aDRw40GtbSb3PzjRr1izNmjVLJ0+e1MaNG/Xcc8+pU6dOmjRpUo7HGDVqlNf9Jk2a6N1331VISIjGjx+v0aNHa/78+QV63P/85z968skn9cADD2jYsGGKjo7W1q1b9cQTT+i2227TunXrvEa7gAsN4QcoRUlJSZKkqlWr5thmt9tzhJygoCAFBQXlebziXOb6hx9+0FtvvaXRo0erefPmxXbcvISGhuYoy55Sl9u27O1Op9NzP/vLz/bt2/NdmOHvv//23N61a5fatWunEydOqHPnzrryyisVGhoqPz8/7dmzR9OnT1d6enqux8lt6kp2mzMzMz1lgYGBkpTn8uCF7Qdnyv4Cmf0YxWXkyJE6duyYvvvuu3zDV2FUqVIl12NlT1vKfh2k/Pvy+V675VwMw1BcXJwGDhyo+vXrq2PHjho2bJi++OKLPPdxOByKj4/Xs88+K39/fz3xxBOaOHFiga4P07hxY61evVrPP/+8vv32W61evVqxsbF68MEH1aNHD3Xu3LnYph1Z+X2WLbf3mZR7P8xWUu+z3FSqVEkXX3yxPv/8c7Vp00b//ve/dfnll+uiiy4657733nuvxo8frx9//LFAj7V06VI99thj6t27tyZMmOApb9WqlebPn6969epp/Pjxuvfee1W7du0iPyegLCP8AKUo+8vG4cOHc/zH4nK5dPTo0Xz/wzvXX7zP55yftWvXyjRNjRo1KsdfGbNljwatXbtWLVq0KNRjlYTs17N3796aN29egfaZMGGCjh07pqlTp+b46+pHH32k6dOnn3e7wsLC5O/v7/nSeLbz6QfZxzz7y/H5nouwZs0apaamqkGDBrnW/eCDD/TBBx+oefPmWrduXYGOf/ToUWVmZuYIQIcOHZKU95fvc/Xj4jrnJzcdOnRQWFhYoUaXrr76aj3xxBNaunRpgS+OGR8fn2tfmzJliiSpbdu2BX78klZe32fZDh8+nGt5fv2wpN5n+fH399dll12mDRs2aMWKFerTp88594mMjJSkXC/Mm5vsQH/ppZfm2BYUFKR27dpp/vz5Wrt2LeEHFyzCD1CKWrVqpTVr1uiHH37I8R/LsmXLvP6qWRRFWZY6O/w0adJEQ4YMybXO7Nmz9ffff2vw4MEyDEMRERHn08xi06BBA4WFhWnFihVyOp0FmqqXvYzsTTfdlGPbDz/8UGxta9q0qdauXauTJ0/mOJn6fPrB1q1bJSlH+Fy3bl2hf/+DBg3yfCm78cYbc51udPDgQX311VeKj49Xt27dVL169QIf3+Vyafny5ercubNXeXawaNmyZaHam23atGmF+l117dq1wOHn1KlTOnnyZKGWkM+evnW+i4FIWQsOSFL//v3P+1jFpby+z7KtWbNGp06dyvE7za8fltT77FwK25eyF8UoaFDJHm3Laznr7PKCTN8Eyi2fnnEEWMyyZctMSWZ8fLx57NgxT3lqaqrZoUOHfE9096X8FjzIPgF44MCBBTpW9knIedVXPieo53ahv2eeecaUZN57771mSkpKjn0OHDhgbtq0yXP/nnvuMSWZn332mVe9RYsWeZZYPnshiOwTsXOT/fynTp3qVf7QQw/lefL2+fSDO+64w5RkbtiwIdftxe1cCx5kvzbff/+9V3l2n+nUqZPXBUKPHTtmxsfHm5LMH374oSSbnqfff/891wtNpqene17f/v37e23L60T0I0eOmE2bNjUlmf/973+9tiUkJJhbtmzJsaRwWlpajoumut1uc8yYMbmeZG+avM+K8j7Lfg0kmQ8//LDXtpUrV5p2u90MDQ01k5KScuxbUu+zo0ePmjt37sx12+eff27a7XYzJCTEPH78uKd88+bNuV70dvfu3WadOnVMSebYsWO9tmVkZJhbtmwxd+zY4VU+e/ZsU5JZtWpV86+//vLa9tVXX5mGYZgBAQHm0aNHi/oUgTKPkR+gFHXq1En333+/3njjDTVp0kR9+vSRw+HQp59+qsqVKysmJsbXTSy07IsbFsdfvYvimWee0fr16/Xuu+/q888/V/fu3RUXF6cjR45o+/bt+vnnnzV27Fg1atRIkjR06FBNnTpVN998s/r06aPY2Fht3LhRixYtUt++fTV79uxiaddNN92k8ePH6+uvv9bll1/uta2o/cDtduu7775T/fr11aRJk2Jp5/nK7/cfExOj9PR0NWnSRDfccIOcTqfmzp2rgwcPaujQoZ5lrkvb5MmTNXXqVHXq1Ek1atRQWFiYDhw4oG+++UaHDh1S/fr19corr3jtc9ddd+nYsWNq166dqlev7jl35auvvlJqaqp69eqlwYMHe+3z5ptv6rnnntOoUaO8pvJt375dnTt31hVXXKGaNWvK6XRq8eLF2rBhgy655BL997//zdFm3me5y+99lq1Lly5677339Ouvv6pTp046ePCgZs+eLbfbrUmTJuUYMSrJ99m+ffvUunVrtWnTRvXr11dcXJwSExO1bt06rVixQg6HQ++9957XIg6zZ8/W+PHj1aVLF9WoUUMVK1bUzp079eWXXyotLU3XXHNNjumW+/fvV8OGDXMsmd+nTx9dfvnl+u6779SwYUP17t1b0dHR2rJli7744guZpqmXXnqpzIzuAyXC1+kLsBq3222+8cYbZoMGDUx/f38zJibGHDp0qJmYmJjrX1zLgvxGfrIvvprbX15zU9x/kTbNrNd0xowZZvfu3c3KlSubDofDjI2NNTt16mSOHTvW/PPPP73q//zzz+all15qhoWFmSEhIWanTp3M+fPne0Y5iuMv0qZpmi1atDBjYmJyvRBhUfrB119/bUoyX3311VzbUhLyG/lxu91meHi4WbNmzRx9I/s5JCYmmkOHDjVjY2NNf39/s0GDBubrr79eqKWhi9uyZcvMIUOGmI0aNTLDwsJMPz8/s3LlymanTp3Ml19+2UxOTs6xz/vvv2/edNNNZq1atczg4GDT4XCYMTEx5rXXXmvOmjUr1+czatSoXPvTkSNHzP79+5u1atUyAwICzIoVK5rt27c333zzzTyXk+d9Vvj32ZmvwebNm80bbrjBDAsLMwMDA82LL77YXLRoUa6PVZLvs+PHj5tPPfWUeckll5jR0dGmw+Ewg4KCzAYNGpj33HOPuXnz5hz7LF261LzlllvM+vXrm6GhoabdbjerVKliXn755eb06dNz7XvZzz2332NGRob56quvmu3btzcrVqxo+vn5mZGRkea1115rfv3118X+nIGyhoucAmVI9tK6hTmZ29datWolh8OhX3/91ddNKXM++ugj9e/fX/PmzVPv3r0LvF9e/eCmm27SDz/8oJ07d+a5WEBp+v3339W8eXO99dZbGjp0qNe28tiXyzLeZ3nL632WfZHTgQMHatq0aQU+Xll7nwEoXsVzIQEAlpSUlKT169friSee8HVTyqRbbrlF7du31+jRo8/7Gkxr167V/PnzNXr06DLzheyHH35Q1apVc0z3QvHifZa/C/19BqB4cc4PgCILDQ097xXqLmSGYei///2v5s2bpwMHDnhdqLOwDh06pBdeeEH33ntvMbbw/Nx///26//77fd2MCx7vs/xd6O8zAMWLaW9AGcJUIUgXRj+4EJ4DyreiTnsDcGEj/AAAAACwBM75AQAAAGAJhB8AAAAAlkD4AQAAAGAJhB8AAAAAllCul7o+ceKEXC6Xr5sBC4uMjFRCQoKvmwELow/C1+iDKAvoh9Zmt9tVuXLlgtUt4baUKJfLJafT6etmwKIMw5CU1Q9ZNBG+QB+Er9EHURbQD1EYTHsDAAAAYAmEHwAAAACWQPgBAAAAYAmFPudn8+bN+uyzz7R7926dOHFCDz/8sNq1a+fZbpqm5syZo8WLFys5OVkNGjTQXXfdpZiYGE+dv//+W1OmTNHq1atlGIbat2+vO++8UwEBAcXzrAAAAADgLIUOP+np6apZs6a6d++uV155Jcf2Tz/9VAsXLtR9992nqKgozZ49W2PHjtWECRPk7+8vSZo4caJOnDihp59+WpmZmXr77bc1adIkDR8+/PyfEQAAAHKVnJwsl8vlWSTgQpGamqqMjAxfNwMlKCgoSHb7+a/VVugjtGzZUi1btsx1m2ma+uqrr3TjjTeqbdu2kqRhw4bp7rvv1sqVK9WpUyf99ddfWrdunV588UXFx8dLkgYPHqwXX3xRt99+u8LDw8/j6QAAACA36enpMgxDoaGhvm5KsXM4HKwAfAFzu906deqUgoODzzsAFetS10eOHFFiYqKaNWvmKQsKClKdOnW0bds2derUSdu2bVNwcLAn+EhS06ZNZRiGduzY4TWFLpvT6fTq0IZhKDAwUIZhXHB/uUD5kd336IPwFfogfI0+WL6kp6erYsWKvm4GUGg2m00VK1bU33//fd7hvVjDT2JioiTlaFRoaKhnW2JioipVquS13c/PTyEhIZ46Z5s/f77mzp3ruV+rVi2NGzdOVapUKba2A0UVHR3t6ybA4uiD8DX6YPmQmprqOQXhQuRwOHzdBJQwp9PptY5AUZSLi5z27t1b1113ned+9l+Yjh49yhAnfMYwDEVHR+vQoUNcVA0+QR+Er9EHy5eMjIwL9nsT096sIT09XQcPHsxRbrfbFRkZWaBjFGv4CQsLkyQlJSWpcuXKnvKkpCTVrFnTU+fkyZNe+2VmZurvv//27H82h8ORa5o3TZMPW/gc/RC+Rh+Er9EHAZSW8/2sKdbr/ERFRSksLEwbNmzwlKWkpGjHjh2qV6+eJKlevXpKTk7Wrl27PHU2btwo0zRVp06d4mwOAAAAUCaNGDFCgwcP9nUzLKfQIz9paWk6dOiQ5/6RI0e0Z88ehYSEqEqVKrrmmms0b948xcTEKCoqSrNmzVLlypU9q79ddNFFatGihSZNmqS7775bLpdLU6ZM0cUXX8xKbwAAAPAYMWKEPv74Y0lZU5vCwsLUsGFD9erVS3379pXNVqx/xy9zTNPUBx98oFmzZumPP/6Q3W5XzZo1deONN2rAgAEKDAz0dRPLnUKHn507d+q5557z3J8xY4YkqWvXrrrvvvvUs2dPpaena9KkSUpJSVGDBg305JNPep1g98ADD2jy5Ml6/vnnPRc5JfkCAADgbJdeeqkmTJigzMxMHT16VN9//72effZZffnll5o6dWqxXPulrHrggQf01Vdfafjw4RozZowiIiK0efNm/e9//1O1atV01VVXFem4GRkZF/TiF/kpdG9p3Lix5syZk+d2wzDUr18/9evXL886ISEhXNAUAAAA5+Tv76+oqChJUkxMjJo2bapWrVqpX79+mjNnjvr37y8p6xzzF154QV9//bUyMjLUrFkzjR49Wo0bN5YkjR8/XosWLdKQIUM0fvx4JSYmqk+fPhozZowmTZqk//73v3K73RoyZIjX99RJkyZpzpw52rt3r8LCwnTFFVfo6aefVnBwsCRp9uzZGj16tN555x2NGjVKBw4cULt27TRhwgRVrVpVUtb57S+88IJmz54tm82mW2+99Zznrnz22WeaN2+epkyZoh49enjKq1WrpiuvvFKnTp2SJPXp00eNGjXS888/76kzePBgVapUSa+99pokqX379rrlllu0e/duff3117r66qu1a9cutW/fXk899ZRnv2PHjqlVq1aaPXu2OnTooPT0dI0bN06ffvqpkpKSPIMaF198cZF+l2XBhT1WCAAAgBxM05SZnuabn2JYHOOSSy5Ro0aNtHDhQk/ZPffco6NHj2rmzJlauHChmjZtqn79+unEiROeOnv37tWSJUv0wQcf6K233tKsWbN0xx136ODBg5o7d66eeuop/ec//9GaNWs8+9hsNj3//PP6/vvv9dprr+nnn3/WmDFjvNqTmpqqd999VxMnTtS8efO0f/9+vfDCC57tkyZN0scff6zx48drwYIFSkxM1KJFi/J9jvPnz1d8fLxX8MlmGEaOS8ecy6RJk9SoUSN9/fXXGjFihG688UZ9+umnXr+Pzz77TFWrVlX79u0lSU8//bRWr16tt99+W999952uu+46DRgwwOvc/fLmwh0nBAAAQO4y0uUe1tcnD217c45UIeC8j1OnTh1t2bJFkrRixQqtW7dO69evV4UKFSRJzz77rL7++mt9+eWXGjBggCTJ7XZrwoQJCgkJUb169XTxxRdr586dev/992Wz2VSnTh299dZbWr58uVq1aiVJuvvuuz2PWa1aNT366KN6/PHH9eKLL3rKnU6nXnrpJc/qxoMGDfKMukjSe++9p2HDhumaa66RJL300ktaunRpvs9v9+7dio+PP6/X6EydOnXSvffe67l//fXXa9SoUfrtt988YWf+/Pnq1auXDMPQ/v37NXv2bP3222+ea3nde++9+v777zV79mw98cQTxda20kT4AQAAQLljmqbn2o+bNm1ScnKymjRp4lUnLS1Ne/fu9dyvVq2aQkJCPPerVKkim83mtXBCZGSkjh496rn/448/6s0339TOnTt16tQpZWZmKi0tTampqZ4FBwIDAz3BR5KqVq3qOcbJkyd1+PBhtWzZ0rPdbrerefPm+Y6CFffy8c2aNfO6HxERoS5dumjevHlq3769/vzzT61evVrjxo2TJG3ZskWZmZnq3Lmz134ZGRlel7Qpbwg/AAAAVuNfIWsExkePXRx27NihatWqSZKSk5MVFRWluXPn5qgXGhrquX324giGYeS4lqRhGHK73ZKkffv2adCgQbr99tv12GOPKSwsTCtXrtRDDz2kjIwMT/jJ7RjnG15q166tHTt2nLNedgA8U24XfA0KCspRduONN+qZZ57RmDFjNH/+fDVs2FANGzaUlPWa+vn5aeHChfLz8/PaL/t8p/KIc34AAAAsxjAMGRUCfPOTy5f1wlq2bJm2bNmia6+9VlLWqEZCQoLsdrtq1arl9XM+l1L5/fff5Xa7NWrUKLVu3Vrx8fFel3wpiEqVKqlq1apau3atp8zlcun333/Pd79evXpp165d+vrrr3NsM01TJ0+elJQ1gnP48GHPtszMTP3xxx8FaluPHj2Unp6u77//XgsWLFDv3r0925o0aaLMzEwdO3Ysx2uavQBFeUT4AQAAQJmVkZGhI0eO6ODBg9qwYYMmTpyowYMH6/LLL1efPn0kZV1ypXXr1ho8eLB++OEH7du3TytXrtRLL72k9evXF/mxa9asKafTqSlTpmjv3r2aO3eu3n///UIfZ8iQIXrzzTe1aNEi7dixQ08++aQnvOTlhhtu0A033KChQ4dq4sSJWr9+vf766y99++236tevn5YvXy4p61yexYsX67vvvtOOHTv0xBNPnPPY2YKCgnTVVVfp5Zdf1vbt29WrVy/Ptvj4eN14440aPny4vvrqK/35559au3at3njjDX333XeFfg3KCqa9AQAAoMz6/vvv1bJlS9ntdoWGhqpRo0Z64YUXdPPNN3vO1TEMQ++//77GjRunkSNH6tixY4qMjFSHDh1UpUqVIj9248aNNWrUKL399tt68cUX1aFDBz3xxBOFvmTLPffco8OHD2vEiBGy2Wzq16+frrrqKs9y1bkxDENvvfWWZs6cqdmzZ2vixImeka0+ffqoa9eukqRbbrlFmzdv1vDhw2W323X33XcXainq3r176/bbb1eHDh0UFxfntW3ChAl6/fXX9fzzz+vQoUMKDw9Xq1atdPnllxfq+ZclhlncZ1OVooSEhFznNAKlwTAMxcTE6ODBg8V+UiJQEPRB+Bp9sHw5efJkoZdHLi8cDgffCS0grz7scDgUGRlZoGMw7Q0AAACAJRB+AAAAAFgC4QcAAACAJRB+AAAAAFgC4QcAAACAJRB+AAAAAFgC4QcAAACAJRB+AAAAAFgC4QcAAACAJRB+AAAAgHMYP368rrjiCl83A+eJ8AMAAIAy6dixY3r88cfVtm1b1apVSy1atFD//v21cuVKXzetyDZu3Kh//etfat68uWrXrq1OnTrpkUce0c6dO33dNEuw+7oBAAAAQG7uvvtuZWRk6LXXXlONGjWUkJCgZcuW6cSJE75uWpF8++23+te//qWuXbvqjTfeUM2aNXX06FF98cUXevnll/Xuu+8W6bgZGRny9/cv5tZemBj5AQAAQJmTlJSkX3/9VU899ZQ6deqkiy66SC1bttT999+vK6+8UpK0b98+xcXFacOGDV77xcXFafny5ZKk5cuXKy4uTt99950uv/xy1a5dW9ddd522bt3q2Wf27Nlq2LChFi1apE6dOql27drq37+/9u/fn2vbVqxYoRo1aujIkSNe5c8++6x69+6d6z6pqakaOXKkunfvrmnTpqlLly6qXr26WrVqpWeffVbjxo3zasuZFi1apLi4OM/97Cl4H374oTp06KDatWtr5syZatWqldxut9e+d955p0aOHOm5//XXX6tHjx6qXbu2OnbsqAkTJsjlcuX+S7gAEX4AAAAsxjRNpbncPvkxTbNAbQwODlZwcLAWLVqk9PT0837OY8aM0bPPPqsvv/xSERERGjRokJxOp2d7amqqJk6cqNdff10LFizQyZMnNXTo0FyP1aFDB1WvXl2ffPKJp8zpdGr+/Pm65ZZbct1n6dKlOn78uP7973/nuj00NLRQz2fPnj366quv9N577+mbb77RddddpxMnTujnn3/21Dlx4oSWLl3qCWS//vqrhg8friFDhuj777/XuHHjNGfOHE2cOLFQj12eMe0NAADAYtIzTfWbvc0njz27Xz0F2I1z1rPb7Xr11Vf16KOPaubMmWrSpIk6dOignj17qlGjRoV+3AcffFBdunSRJL322mtq06aNFi5cqBtuuEFSVngZM2aMWrVq5anTtWtXrV27Vi1btsxxvFtvvVWzZ8/2hJlvv/1W6enpuv7663N9/N27d0uS6tSpU+i258bpdOr1119XRESEp+zSSy/VggUL1LlzZ0nSl19+qfDwcHXq1EmSNGHCBN13333q27evJKlGjRp65JFHNHbsWK/RoQsZIz8AAAAok6699lqtXr1aU6dOVbdu3fTLL7/oqquu0uzZswt9rDZt2nhuV65cWfHx8dqxY4enzG63q0WLFp77derUUWhoqLZv357r8fr27as9e/Zo9erVkqQ5c+bo+uuvV1BQUK71CzriVVBxcXFewUeSevfura+++sozUjZ//nzdcMMNstmyvvJv3rxZr732murWrev5efTRR3X48GGlpqYWa/vKKkZ+AAAALKaCn6HZ/er57LELIyAgQF26dFGXLl304IMP6uGHH9b48ePVr18/z5f6M5XW+StVqlTRFVdcodmzZ6t69er6/vvvNXfu3Dzr165dW5K0Y8cOryB2NpvNliMonTk9L1tuIeuKK66QaZpavHixmjdvrl9//VWjR4/2bE9JSdFDDz2kq6++Ose+FSpUyLNNFxLCDwAAgMUYhlGgqWdlUd26dbVo0SJJUnh4uCTp8OHDatCggSRp06ZNue63evVqz6IBiYmJ2rVrl9cUNJfLpfXr13umuO3YsUNJSUmqW7dunm259dZbdd999ykmJkY1atRQ27Zt86zbtWtXhYeH65133tHkyZNzbE9KSlJoaKgiIiL0999/KyUlxRNw8npOZwsICNDVV1+t+fPna8+ePYqPj1fTpk0925s0aaKdO3eqVq1aBTrehYjwAwAAgDLn+PHjuueee3TLLbeoYcOGCgkJ0fr16/XOO++oR48ekqTAwEC1atVKEydOVGxsrI4ePar//Oc/uR7vtddeU+XKlRUZGalx48YpPDxcV111lWe7w+HQM888o+eff152u11PPfWUWrVqlev5Ptm6deumkJAQTZw4UQ8//HC+zycoKEivvPKK7rnnHg0aNEiDBw9WrVq1dPz4cX3++efav3+/3nnnHbVs2VKBgYF66aWXNHjwYK1du1Yff/xxgV+33r17a9CgQfrjjz904403em178MEHNXDgQMXFxenaa6+VzWbT5s2btXXrVj322GMFfozyjHN+AAAAUOYEBwerVatW+t///qebbrpJ3bt318svv6z+/ftrzJgxnnrZSzVfddVVGjVqlB599NFcj/fEE09o1KhRuvrqq5WQkKBp06Z5XRsnMDBQQ4cO1bBhw9SrVy8FBwef87o7NptNffv2VWZmpvr06XPO59SjRw99+umncjgcGjZsmLp27aqhQ4fq5MmTnnZXrlxZb7zxhhYvXqzLLrtMCxYsKNRiBJdcconCwsK0c+fOHMtud+vWTdOnT9cPP/yga665Rtdff73+97//6aKLLirw8cs7wyzus69KUUJCQq5zIIHSYBiGYmJidPDgwWI/iREoCPogfI0+WL6cPHlSlSpV8nUzSoTD4cjzO+Hy5ct18803a/PmzXkuJz179myNHj1aW7ZsKfRjP/TQQzp27JimTZtW6H1ROHn1YYfDocjIyAIdg2lvAAAAQCGdPHlSW7du1YIFCzR16lRfNwcFRPgBAAAACin7fJwBAwZ4rh+Eso9pb0ARMd0DvkYfhK/RB8sXq057w4WjOKa9seABAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAUA7Mnj1bDRs2LPbjLl++XHFxcUpKSir2Y5c1hB8AAACUSSNGjFBcXJwee+yxHNuefPJJxcXFacSIEaXfsLPMnj1bcXFxiouL00UXXaSWLVvq3nvv1f79+0u9LdntiIuLU4MGDdSzZ08tW7Ys333atGmjtWvXXrDXgToT4QcAAABlVmxsrD777DOlpqZ6ytLS0rRgwQLFxcX5sGXeKlasqLVr12r16tX673//q507d+qee+7xSVsmTJigtWvXasGCBQoPD9fAgQO1d+/eXOs6nU75+/srKipKhmGUcktLH+EHAAAAZVbTpk0VGxurhQsXesoWLlyo2NhYNWnSxKuu2+3WG2+8oQ4dOig+Pl6XX365vvjiC8/2zMxMPfTQQ57tnTt31nvvved1jBEjRmjw4MF699131bJlSzVu3FhPPvmknE5nvu00DENRUVGqWrWq2rZtq1tvvVVr167VqVOnPHW+/vpr9ejRQ7Vr11bHjh01YcIEuVwuz/ZJkybpsssuU506ddSmTRs98cQTSk5OLvRrFhoaqqioKDVo0EAvvvii0tLS9OOPP0rKGhmaPn26Bg0apDp16mjixIm5TntbuXKl+vTpo/j4eDVq1Ej9+/dXYmJigV7nxMREDRs2TE2bNlV8fLw6deqk2bNnF/p5lAS7rxsAAAAA30hxpuS5zWbYFGAPKFBdwzAUaA88Z90gR1ARWin169dPs2fP1o033ihJmjVrlvr166dffvnFq94bb7yhefPm6aWXXlKtWrW0YsUKPfDAA4qIiFDHjh3ldrsVExOjSZMmqXLlylq1apUeffRRRUVF6YYbbvAcZ/ny5YqKitLHH3+s3bt369///rcaN26s2267rUDtPXr0qBYuXCg/Pz/5+flJkn799VcNHz5czz//vNq3b6+9e/fq0UcflSSNHDlSkmSz2fT888+revXq2rt3r5588kmNGTNGL774YpFeN0kKCMj6HZ4Z3iZMmKAnn3xSzz33nOx2e45RoY0bN6pfv37q16+fp87y5cvldrslnft1fvnll7Vt2zbNnDlT4eHh2r17t9LS0or8HIoT4QcAAMCi6k6rm+e27tW66/2r3vfcbzazmVJdqbnW7RjTUXOvm+u5335Wex1PO56j3v67i3YOzE033aSXXnpJf/31lyRp1apVeuedd7zCT3p6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du2qVatWaffu3erTp4/q1KmjG264QXv27DnnaxsaGqqoqCg1aNBAL774otLS0vTjjz96Hmf69OkaNGiQ6tSpo4kTJ+Y67W3lypXq06eP4uPj1ahRI/Xv31+JiYkF+n0kJiZq2LBhatq0qeLj49WpUyfNnj37nO0+H4QfAAAAi0pJScnzJy0trcB1zxyVya9uUfXr18/rS/GsWbPUr1+/HPXeeOMNzZ07Vy+99JKWLFmiu+++Ww888IB++eUXSVlfxmNiYjRp0iR9//33evDBB/XSSy/ps88+8zrO8uXLtWfPHn388cd67bXXNGfOHM2ZM6fI7ZekF154QStWrNCUKVP04Ycf6pdfftGGDRty1Hv33XfVqFEjff3117rvvvv07LPPegJJttdee019+vTRN998ozp16mjYsGF67LHHNGzYMC1cuFCmaerpp58uVPsCAgIkySvkTZgwQVdffbUWL16sW265Jcc+GzduVL9+/VS3bl199tlnmj9/vq644gq53W5J5/59vPzyy9q2bZtmzpyppUuX6sUXX1TlypUL1e7Cspfo0QEAAFBm1a1bN89t3bt31/vvv++536xZsxwhJ1vHjh01d+5cz/327dvr+PHjOert37+/SO286aab9NJLL+mvv/6SJK1atUrvvPOO50u0JKWnp+uNN97QrFmz1KZNG0lSjRo1tHLlSs2cOVMdO3aUw+HQww8/7NmnevXqWr16tT7//HPdcMMNnvLQ0FCNHTtWfn5+qlOnji677DItW7ZMt912W55tPHnyZI7Xs3379po5c6aSk5M1a9YsTZw4UZ07d5aUFWCy23mmtm3batiwYZKk+Ph4rVy5Uv/73//UpUsXT51+/fp52jt06FDdcMMNGjFihLp16yZJuuuuuzRy5Mhzv7Cnpaam6j//+Y/8/PzUoUMHT3mvXr28QubZU+LeeecdNWvWTC+++KKnrH79+pIK9vvYv3+/mjRpoubNm0uSqlWrVuA2FxXhBwAAAGVaRESELrvsMs2ZM0emaap79+4KDw/3qrNnzx6lpqbq1ltv9Sp3Op1e0+OmTZumWbNmaf/+/UpLS5PT6VTjxo299qlXr578/Pw896tWraotW7bk28aQkBAtWrTIqyx7NGXPnj3KyMhQq1atPNsqV66s+Pj4HMdp3bp1jvtnT81r2LCh53b21LoGDRp4yqpUqaK0tDSdOnVKFStWzLPN9913n2w2m9LS0hQREaFXXnlFjRo18mzPDiV52bRpk6677rpctxXk93HHHXfo7rvv1oYNG9S1a1f16NFDbdu2zfcxzxfhBwAAwKK2b9+e5zabzfvsiN9//z3PumefAF8SJ/r369fPM5Vr7NixObYnJydLkmbMmKHo6Givbf7+/pKkTz/9VC+88IKeeeYZtWnTRsHBwXrnnXe0du1ar/oOhyPH8U3TzLd9NptNtWrVKvgTOg9nti/7tbfb7TnKsqef5WXUqFHq3LmzKlWqpIiIiBzbg4KC8t0/O9zlpiC/j+7du+u3337T4sWL9dNPP+mWW27RwIEDc5wHVZwIPwAAABZ1ri+3pVG3oC699FLP+SjZ07vOVK9ePVWoUEH79+9Xx44dcz3GypUr1bp1aw0aNMhTltfqZsWpZs2acjgcWrNmjWeFusTERO3atctrmpkkrVmzJsf9/KYnno+oqKjzCmwNGzbUsmXLvKYSZivI70PKGtXr27ev+vbtq3bt2mnMmDGEHwAAAFibn5+fli5d6rl9tpCQEN1zzz0aPXq03G632rVrp1OnTmnlypUKCQlR3759VatWLc2dO1dLly5VtWrV9Mknn2j9+vXFcq6JaZo6cuRIjvIqVaooODhYt9xyi8aMGaPKlSurSpUqGjduXI7RNSkroL399tvq0aOHfvrpJ33xxReaMWPGebevJAwbNkyXX365nnjiCd1+++3y9/fXzz//rOuvv17h4eHn/H28/PLLatasmerVq6eMjAx99913JRb0shF+AAAAUC7kd/6KJD366KOKiIjQm2++qT///FOVKlVS06ZNdf/990uSBgwYoI0bN+rf//63DMNQz549NXDgQC1ZsuS823bq1Cm1bNkyR/natWsVFRWlZ555RsnJyRo0aJAnqJ06dSpH/XvuuUfr16/XhAkTVLFiRY0aNSrXka6yID4+Xh9++KFeeuklXXfddQoICFDLli3Vq1cvSef+fTgcDr344ovat2+fAgIC1L59e7399tsl2mbDPNcExjIsISHhnGuuAyXB/cVsmZ9+oOCreiu9z+BzzgMGSoJhGIqJidHBgwfpg/AJ+mD5cvLkSVWqVMnXzSgRDoejXH4n7NOnjxo1aqTnn3/e100pF/Lqww6Hw+uaSvnhOj8AAAAALIHwAwAAAMASOOcHAAAA8IEzLwyL0sHIDwAAAABLIPwAAAAAsATCDwAAgEWwKh/KK7fbXSzHIfwAAABYQIUKFZSamurrZgCF5na7derUKQUFBZ33sVjwAAAAwAIqVKig5ORkJSUlyTAMXzenWPn7+ysjI8PXzUAJCg4Olt1+/tGF8AMAAGARwcHBvm5CseNiuygMpr0BAAAAsATCDwAAAABLIPwAAAAAsATCDwAAAABLIPwAAAAAsATCDwAAAABLIPwAAAAAsATCDwAAAABLIPwAAAAAsATCDwAAAABLIPwAAAAAsATCDwAAAABLIPwAAAAAsATCDwAAAABLIPwAAAAAsATCDwAAAABLIPwAAAAAsATCDwAAAABLIPwAAAAAsATCDwAAAABLIPwAAAAAsATCDwAAAABLIPwAAAAAsATCDwAAAABLIPwAAAAAsATCDwAAAABLIPwAAAAAsATCDwAAAABLIPwAAAAAsATCDwAAAABLsBf3Ad1ut+bMmaOffvpJiYmJCg8PV9euXXXTTTfJMAxJkmmamjNnjhYvXqzk5GQ1aNBAd911l2JiYoq7OQAAAAAgqQRGfhYsWKBvv/1WQ4YM0auvvqrbbrtNn332mRYuXOip8+mnn2rhwoW6++679X//93+qUKGCxo4dq4yMjOJuDgAAAABIKoHws23bNrVp00atWrVSVFSUOnTooGbNmmnHjh2SskZ9vvrqK914441q27atatSooWHDhunEiRNauXJlcTcHAAAAACSVwLS3evXqafHixTpw4IBiY2O1Z88e/fHHH7rjjjskSUeOHFFiYqKaNWvm2ScoKEh16tTRtm3b1KlTpxzHdDqdcjqdnvuGYSgwMFCGYXim0gGlyTAMmWfcBnwhu+/RB+Er9EGUBfRDFEaxh59evXopNTVVDz74oGw2m9xut2655RZ17txZkpSYmChJCg0N9dovNDTUs+1s8+fP19y5cz33a9WqpXHjxqlKlSrF3XygQJIqhujk6dvR0dE+bQtAH4Sv0QdRFtAPURDFHn5++eUXLVu2TA888ICqVaumPXv2aNq0aapcubK6detWpGP27t1b1113ned+drI/evSo14gQUFrcp/723D506JBM08ynNlAyDMNQdHQ0fRA+Qx9EWUA/hN1uV2RkZMHqFveDz5w5Uz179vRMX6tevboSEhK0YMECdevWTWFhYZKkpKQkVa5c2bNfUlKSatasmesxHQ6HHA5HjnLTNOnk8Ikz+x39EL5GH4Sv0QdRFtAPURDFvuBBenq6bDbvw9psNk9njIqKUlhYmDZs2ODZnpKSoh07dqhevXrF3RwAAAAAkFQCIz+tW7fWvHnzVKVKFV100UXas2ePvvjiC1166aWSsoYmr7nmGs2bN08xMTGKiorSrFmzVLlyZbVt27a4mwMAAAAAkkog/AwePFizZ8/We++9p6SkJIWHh+uKK65Qnz59PHV69uyp9PR0TZo0SSkpKWrQoIGefPJJ+fv7F3dzAAAAAEBSCYSfwMBADRo0SIMGDcqzjmEY6tevn/r161fcDw8AAAAAuSr2c34AAAAAoCwi/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBLuvGwCUZ6m//STzz90y7Q7Jbpdhd0inbyvf2/+UGQ675He6zOHIup1Xmd0h+dllGIavnzoAAEC5Q/gBiqJyhCTJffyodPyop9gswqGKsk9uISq/2zlD2bnDmWef/IJYdv3TZYbNryjPBgAAoFQQfoAiMDp2l1Glqirb/XQi4YhMZ4aU6ZJcTsnpkjJP/+tyZpU7nZ4y88yys2+7Tu9z9m2327sBLlfWTwGVWiiz2QocyDwjX+cYGSvUaNnpkTE5ztqX0TIAACDCD1Akhs0mo0EzBcXEKOngQZlmkaJCgZnuzDPC0Nn/5n7bdDpzCWSnt+cazlxZ+xQ0kGXfPpPbLWVkZP0U9LkV5fUowj7nP1p27nBWqNGy7H0YLQMAoNQQfoBywLD5Sf5+kn+Fgu9Tgu3JZprm6YCVW0DKOzSZLqcncOU7WnZm/Qt6tKwwUxLPGC1zOJTSvrNUr1lRHhkAAMsh/AAoMsMw/vlyrsCC71dyTfLIfbQs/3BW6NEyl1OmK/fAVrjRsvSsn4I+tzNuH1v2rfzemC05/IvnhQMA4AJG+AFwQSqfo2V5h7Mco2Xp6TIXzJQyM7N+HKXQeAAAyjnCDwCUouIaLTOdzqzwAwAACoyLnAIAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/AAAAACwBMIPAAAAAEsg/ADnweXydQsAwLf4HERZQD9EQRF+gCLYts2uSy6JVI0a0iWXRGrbNruvmwSL2b79nz7Xo0cV+iBKHZ+DKAvohygswzRN09eNKKqEhAQ5nU5fNwMW1LlzlHbt+ucDtnZtl3766YgPWwSr6d4lTN/W7yJJavTNUkVVD6APolTxOYiygH4ISXI4HIqMjCxQXUZ+gEJyuaTkZMOrLDnZYMgdpYY+CF+jD6IsoB+iKAg/QCHZ7VJwsPeAaXCwKTsj7Sgl9EH4Gn0QZQH9EEVB+AGKYPLk46pd26XY2Kwh9smTj/u6SbCYd9894blds2YmfRCljs9BlAX0QxQW5/wARWQYhiIjY5SQcFDl+G2Ecsp0OuUeepMkye+N2VJAoI9bBCvicxBlAf0QnPMDlBKG1gFYHZ+DKAvohygowg8AAAAASyD8AAAAALAEwg8AAAAASyD8AAAAALAEwg8AAAAASyD8AAAAALAEwg8AAAAASyD8AAAAALAEwg8AAAAASyD8AAAAALAEwg8AAAAASyD8AAAAALAEwg8AAAAASyD8AAAAALAEwg8AAAAASyD8AAAAALAEwg8AAAAASyD8AAAAALAEwg8AAAAASyD8AAAAALAEwg8AAAAASyD8AAAAALAEwg8AAAAASyD8AAAAALAEwg8AAAAASyD8AAAAALAEwg8AAAAASyD8AAAAALAEwg8AAAAASyD8AAAAALAEwg8AAAAASyD8AAAAALAEe0kc9Pjx45o5c6bWrVun9PR0RUdHa+jQoYqPj5ckmaapOXPmaPHixUpOTlaDBg101113KSYmpiSaAwAAAADFH37+/vtvPfPMM2rcuLGefPJJVapUSQcPHlRwcLCnzqeffqqFCxfqvvvuU1RUlGbPnq2xY8dqwoQJ8vf3L+4mAQAAAEDxT3v79NNPFRERoaFDh6pOnTqKiopS8+bNFR0dLSlr1Oerr77SjTfeqLZt26pGjRoaNmyYTpw4oZUrVxZ3cwAAAABAUgmM/KxatUrNmzfXhAkTtHnzZoWHh+vKK6/U5ZdfLkk6cuSIEhMT1axZM88+QUFBqlOnjrZt26ZOnToVd5MAAAAAoPjDz5EjR/Ttt9/q2muvVe/evbVz505NnTpVdrtd3bp1U2JioiQpNDTUa7/Q0FDPtrM5nU45nU7PfcMwFBgYKMMwZBhGcT8FoECy+x59ED5xRr8zDMPrPlBa+BxEWUA/RGEUe/hxu92Kj49X//79JUm1atXSn3/+qW+//VbdunUr0jHnz5+vuXPneu7XqlVL48aNU5UqVYqjycB5yZ7SCZQm05mhv07frlo1SragEJ+2B9bG5yDKAvohCqLYw0/lypV10UUXeZVddNFF+vXXXyVJYWFhkqSkpCRVrlzZUycpKUk1a9bM9Zi9e/fWdddd57mfneyPHj3qNSIElCbDMBQdHa1Dhw7JNE1fNwcWY57x2Xf48BEp4JQPWwOr4nMQZQH9EHa7XZGRkQWrW9wPXr9+fR04cMCr7MCBA54GRUVFKSwsTBs2bPCEnZSUFO3YsUNXXnllrsd0OBxyOBw5yk3TpJPD5+iH8IUz+5xpmhJ9ED7E5yDKAvohCqLYV3u79tprtX37ds2bN0+HDh3SsmXLtHjxYvXo0UNSVjq/5pprNG/ePK1atUp//vmn3nzzTVWuXFlt27Yt7uYAAAAAgKQSGPmpU6eOHn74YX344Yf65JNPFBUVpYEDB6pz586eOj179lR6eromTZqklJQUNWjQQE8++STX+AEAAABQYoo9/EhS69at1bp16zy3G4ahfv36qV+/fiXx8AAAAACQQ7FPewMAAACAsojwAwAAAMASCD8AAAAALIHwAwAAAMASCD8AAAAALIHwAwAAAMASCD8AAAAALIHwAwAAAMASCD8AAAAALIHwAwAAAMASCD8AAAAALIHwAwAAAMAS7L5uAADg/Li/nicFBEp+dsnukBwOyc8uw+HIuu9nzyqzOyT76Tp53Db8/Hz9dAAAKDGEHwAoj2y2rNDicsr8YnauVcyiHNewnRGKzvVv1m3j7DB1Onx53T6rzDgzkBUwnBmGcV4vGQAAhB8AKIcMPz/Z7nlEQXt3KPlkkuTMkFwumS6n5HJJLufpH9c5/nVK5hkxyXRnHcuZUeC2FCVkFSmY+RU0lJ0exSpIILN7hzNGywDgwkb4AYByytayoypfc6PSDh6UaRYpTmTt53bnDEtOp5TpyrPMzL7tPL3fmbdzCV9mgYLYWftlurwbm3m6LL2Az60or0cR9inR0bIzghijZQBw/gg/AGBhhmFIfn5ZPxUCCr5fCbYpm+l2nw5buQSyPMKXWYhAln2b0bKij5YZDofSqteSGXVR1lRMACjjCD8AgDLJsNkkm7/k8C/4PiXYnmwFGi3LJZxdiKNlpqQESbbb/i2j29WF3BsASh/hBwCAQrjgRsvODFGFHS3bv0c6flRm4rFSeX4AcL4IPwAAXCBKe7TM/dF/ZS754jyOAACliwm6AAAAACyB8AMA5ZDt+HHZ9u/Pur1/v2zHj/u4RQAAlH1MewOAcsZ2/Lgi+vaVkZIiffihIvr3lxkUpGNz5sgdHu7r5gEAUGYRfgCgvElNlZGSIvvevVKnTrJLctWoIaWm+rplAACUaUx7A4Byxh0XpxOvv+5VduL11+WOi/NRiwAAKB8IPwBQztj271fl4cO9yioPH+45BwgAAOSO8AMA5U1goMygoKypbj//LFeNGjKDgqTAQF+3DACAMo1zfgCgnHGHh+vYnDky0tJUtU0bHZs7V2ZAAIsdAABwDoQfACiH3OHhMoysy1O64+JkmqaPWwQAQNnHtDcAAAAAlkD4AQAAAGAJhB8AAAAAlkD4AQAAAGAJhB8AAAAAlkD4AQAAAGAJhB8AAAAAlkD4AQAAAGAJhB8AAAAAlkD4AQAAAGAJhB/gPLhcvm4BrI4+CAB8FqLgCD9AEWzbZtcll0SqRg3pkksitW2b3ddNgsXQB+Fr27bZNXduoCRpxvQg+iB8gs9CFBbhByiCIUPCtWuXXQcOSLt22TVkSLivmwSLoQ/C14YMCdfJk1lfI04k2uiD8Ak+C1FYhB+gkFwuKTnZ8CpLTjYYckepoQ/C1+iDKAvohygKwg9QSHa7FBxsepUFB5uyM9KOUkIfhK/RB1EW0A9RFIQfoAgmTz6u2rVdio2Vatd2afLk475uEiyGPghfmzz5uCpVckuSKoe56YPwCT4LUViGaZrmuauVTQkJCXI6nb5uBizKMAxFRsYoIeGgyvHbCOUYfRC+5v7ovzKXfCHj2r6y9Rrg6+bAovgshMPhUGRkZIHqMvIDnAeG1uFr9EEA4LMQBUf4AQAAAGAJhB8AAAAAlkD4AQAAAGAJhB+gCGzHj8u2f3/W7f37ZTvO6jIAAABlHaeHAYVkO35cEX37ykhJkT78UBH9+8sMCtKxOXPkDufK0gAAAGUV4QcorNRUGSkpsu/dK3XqJLskV40aUmqqr1sGAACAfDDtDSgkd1ycTrz+ulfZiddflzsuzkctAgAAQEEQfoBCsu3fr8rDh3uVVR4+3HMOEAAAAMomwg9QWIGBMoOCsqa6/fyzXDVqyAwKkgIDfd0yAAAA5INzfoBCcoeH69icOTLS0lS1TRsdmztXZkAAix0AAACUcYQfoAjc4eEyDCPrdlycTNP0cYsAAABwLkx7AwAAAGAJhB8AAAAAlkD4AQAAAGAJhB8AAAAAlkD4AQAAAGAJhB8AAAAAlkD4AQAAAGAJhB8AAAAAlkD4AQAAAGAJhB8AAAAAlkD4AQAAAGAJhB8AAAAAlkD4AQAAAGAJhB8AAAAAlkD4AQAAAGAJhB8AAAAAlkD4AQAAAGAJhB8AAAAAlkD4AQAAAGAJhB8AAAAAlkD4AQAAAGAJhB8AAAAAlkD4AQAAAGAJhB8AAAAAlkD4AQAAAGAJhB8AAACUay6Xr1uA8oLwAwAAgHJp2za7LrkkUjVqSJdcEqlt2+y+bhLKOMIPAAAAyqUhQ8K1a5ddBw5Iu3bZNWRIuK+bhDKO8AMAAIByx+WSkpMNr7LkZIMpcMgX4QcAAADljt0uBQebXmXBwabszHxDPgg/AAAAKJcmTz6u2rVdio2Vatd2afLk475uEso4sjEAAADKpXr1XFq2LEGRkTFKSEiQaZrn3gmWxsgPAAAAyjWmuqGgCD8AAAAALIHwAwAAAMASCD8AAAAALIHwAwAAAMASCD8AAAAALIHwAwAAAMASCD8AAAAALIHwAwAAAMASCD8AAAAALIHwAwAAAMAS7L5uAFDWpThT9PvR37UuYZ0k6d5m93q29f+kvyoaFTWw0UDVrFTTNw0EAABAgRB+gLNsPb5Vq4+s1roj67Q2Ya3+OPGH3KZbkhQdHO0JP7uTduujjR9Jkv634X+6rPplGtx4sLrEdZFhGD5rPwAAAHJH+IFlmaap/X/v1/bE7bq02qWe8kd+ekRrjqzxqhsTHKOWkS3VIrKFXG6X7Da7alSqoS/7f6lXfnpF3+/7Xt/9+Z2++/M7xYfG687Gd+rmujcrxD+ktJ8WAAAA8kD4gWUkpidqfcJ6rT2yVusS1mldwjolpCbIZtj0x8A/FOQIkiRdEnuJAu2BahnZUi2jsgJPdHB0juPZDJuuqXuNWoa01I4TOzR983TN3jZbO5N26unlTyvAL0C3Nri1tJ8mAAAA8kD4wQUpPTNdDptDNiNrTY/nVjyn/274b456dsOuRhGNdCT1iGo6akqSHmv7WKEfLz4sXs9f/LwebfOo5m6fq/k756tXnV6e7d/u/VaGYah7te6eNgEAAKB0EX5Q7rlNt3Yl7coazTl9ns6mY5v0zY3fqF7lepKki0IukiTVrFQza/paVAu1iGyhxhGNFWgPLLa2hPiHaFDjQRrUeJBX+1749QXtTNqpmpVqamCjgepXr59CK4QW2+MCAADg3Ag/KLd+2v+T3l7/ttYnrFdSRlKO7esT1nvCT5+6fdS7Tm+FB4SXdjOVnpmuy6pfpoQ/ErTn5B49t+I5vbzqZfWp20d3Nr7T00YAAACULMIPyrRkZ7I2HN2gdQnrtObIGt3R8A5dEneJpKxQ8eP+HyVJAX4BalqlqVpEtlDLqJZqGdlS1SpW8xzHl6MsgfZAjeowSo+0fkSf7PhEUzdN1R8n/tCMLTM0Y8sMjWw1Ug+1fshn7QMAALAKwg/KlONpx7VozyKtPbI2xzLTkhQfGu8JP22qttGLnV5Uq6hWqh9eXw6bw1fNLpAgR5Bub3i7BjQYoOUHl2vqpqn6eu/Xah/d3lPneNpxGTJUOaCyD1sKAABwYSrx8LNgwQJ9+OGHuuaaazRo0CBJUkZGhmbMmKHly5fL6XSqefPmuuuuuxQWFlbSzUEZkb3M9NqEtYoKjFL7mKwAcDztuB756RGvutHB0Vkrr0W2VNeLunrKwyqE6Y5Gd5Rqu4uDYRjqFNtJnWI7af/f+xUbHOvZ9ua6NzV983TdWOdG3dn4TjWKaOTDlgIAAFxYSjT87NixQ99++61q1KjhVT59+nStWbNGI0eOVFBQkCZPnqzx48frhRdeKMnmwIfyWmZaknrG9/SEn9qhtXVZtcvUMLyhWkS2UIuoFooJjvFl00tUXEic57ZpmtpwdIPSMtP04R8f6sM/PlSH6A66s/GduqrmVbLbGKgFAAA4HyX2bSotLU1vvPGG7rnnHs2bN89TnpKSoiVLlmj48OFq0qSJJGno0KF68MEHtW3bNtWrx8nf5V16ZrqOph71fLFPc6WpxcwWcrqdXvXshl0NIxqqTmgdT5nNsGnGVTNKtb1lhWEYmnPtHP126DdN2TRFC/cs1IpDK7Ti0ArFBMdoaLOhGtxksK+bCQAAUG6VWPh577331LJlSzVr1swr/OzatUuZmZlq2rSppywuLk5VqlQh/JRDbtOt3Um7tTZhrdYdyRrR2XRskxpFNNKXvb6UJAXYA9QgvIFOZZzKGs05vShBcS8zfSEwDEPtY9qrfUx7Hfj7gN7f8r4+2PqBDiYf1N5Te33dPAAAgHKtRMLPzz//rN27d+vFF1/MsS0xMVF2u13BwcFe5aGhoUpMTMz1eE6nU07nP6MGhmEoMDBQhmHIMIxibTsKbsTSEfp6z9e5LjN9KPmQ3KZbfjY/SdKnN3yqAHtAaTexRGX3vZLqg3EV4/R4u8c1otUIfbbrM7WPbu95rF8O/KIXV76oIU2G6Jpa15T5xR5QMkq6DwLnYhiGTEmG+P8YvsNnIQqj2MPP0aNHNW3aND399NPy9/cvlmPOnz9fc+fO9dyvVauWxo0bpypVqhTL8ZG75IxkrT64Wr/t/02/7f9N249v15p/rfF8uLjtbiVlJCnAHqBWMa3UPq692sW1U7u4dqoVVssyH0LR0dEl/hjDqw33uv/Rso+06vAqrTq8SrEVY3Vv63v1r9b/UtWQqiXeFpQ9pdEHgdycCArS35JCQoIVGnPhnp+J8oHPQhREsYefXbt2KSkpSY899pinzO12a8uWLVq0aJGeeuopuVwuJScne43+JCUl5bnaW+/evXXdddd57md/qT569KjXiBDO35I/l2jhnoVae2Sttp7Y6rXMtCSt2LZCNSvVlCT9q8G/dFeDu9QwvKH3yEOadOjQoVJstW8YhqHo6GgdOnRIpmmW6mM/1eopVQ+orplbZurAqQN6dumzGvPjGF1f+3oNbjJYLaNalmp74Bu+7IOAJLlTUiRJf/+drJSDB33cGlgVn4Ww2+2KjIwsWN3ifvCmTZvqlVde8Sp75513FBsbq549e6pKlSry8/PThg0b1KFDB0nSgQMHdPTo0TzP93E4HHI4ck7rMU2TTl4EpmnqQPIBrTmyRusS1un+FvcrrEKYJOmXg7/og60feOpGB0erVWQrz8prVQOrel7zxhGNvY5pVb7oh1GBUXqo9UO6v8X9+nL3l5qyaYrWHFmjT3Z8ojVH1ujHvj/KZthKtU3wHT4L4SvZ/c4UfRC+x2chCqLYw09gYKCqV6/uVVahQgVVrFjRU969e3fNmDFDISEhCgoK0pQpU1SvXj0WOyghJzNOZl00NJdlpiWpc2xndavWTZJ0WbXLZBiGWka2VPPI5hf0MtMXAn8/f/Wu01u96/TW+oT1mrJpilpHtfYEn1RXqib9Pkm31L9F0cFMBwAAANbmkwuHDBw4UIZhaPz48XK5XJ6LnOL8pWema/OxzYoLiVNUUJQk6bOdn+mxZY951bMbdjWKaKQWkS1UJeifc6eyVxpD+dM8srle7/a6V9lnOz/Ty6tf1qtrXtU1ta7R4CaD1SaqjWXOxwIAADhTqYSf0aNHe9339/fXXXfdReA5T3ktM53hztD/dfo/DWw0UJLUMqqlalaq6VliukVkC5aZtoiYkBi1j26vXw/9qs92fabPdn2mplWa6s5Gd6pnfM8LbgU+AACA/HDJ+HLE5XbJbsv6lW08ulF9v+yb6zLTlStUVporzXO/cURj/dzv51JrJ8qOLnFd1CWuizYe26ipG6dqwc4F2nB0g0b+OFJjfhujn/r+5DnfCwAA4EJH+CmjUpwp+v3o71qXsM5zrs61ta7Vsx2elSRVr1RdJzNOKsAvQE2qNFGLyBZqFZW1MEH1itWZ1gQvTSKaaHzX8Xqq/VP6aOtHmr5luuJD472Cz47EHYoPjafvAACACxbhpwxJdaXq2eXPam3CWv1x4o8cy0yvS1jnuV3Jv5K+u+k7xYfFc4FLFFh4QLjua3Gf7ml2j46nHfeUH0o+pMvmXqa6letqcOPB6l2nN9MiAQDABYfwU8qyl5lee2St1iasVQW/Cnq0zaOSpAC/AH3z5zc6mnpUUtYy0y0jW3rO1WlWpZnXsRqENyj19uPCYLfZPQtiSNLvR3+X3WbXluNb9MhPj2jsb2N1a/1bNbDRQFWrWM2HLQUAACg+hJ9S8POBn7Xq8CrP9LUzl5mODor2hB/DMPRUu6dU0VFRLaJasMw0Ss2VNa7U6ttWa9YfszR983T9eepPvfP7O5q0YZKuqH6Fnuv4HCEIAACUe4SfYpS9zPSupF26qe5NnvJxK8dp9ZHVnvt2w66GEQ2zRnWiWijTnSk/m58kqW+9vqXebkCSwiqE6d5m9+ruJndr8b7Fmrppqn7c/6N+3P+jKvpX9NQzTZPzggAAQLlE+Cki0zS1K2mX14IE2ctM2wybrqp5lYIdwZKy/qperWI1tYhsoRZRLdQkognnU6DM8rP56coaV+rKGldqR+IObTy60WthhAGLBqhOWB0NajRItUJr+a6hAAAAhUT4KaCElASFB4R7Rmge/elRffjHhznqVa5QWS2jWioxPdETfoa1GFaqbQWKS52wOqoTVsdzf8PRDVr611It/WupJm+crEurXaohjYeoy0VdZDNsPmwpAADAuRF+cpHiTNGGoxu0NmGtZ1Tnr7//0uKbFnsWGWgU0YhlpmE5jSMa6/2r3tfUTVO1ZN8Sz0/t0Nq6s9GdurnezV5T5AAAAMoSws8Zvtn7jf6z6j+5LjNtyND2xO2e8HNL/Vs0oOEAlpmGpdgMm7pX667u1bprV9IuTds8TXP+mKNdSbv0zC/PqGpwVV1b61pfNxMAAFxAMt2mXG5TzszT/551O6BCpiIjC3YsS4Wf7GWm1xxZo3UJ67TuyDrd1+I+da/WXZI8S/1K/ywznb0oQbMqzbz+os05O5Akl8vXLfCd2qG19XzH5/Vo60c1d8dcfb3na/Wo0cOz/dOdnyrIHqTu1bp7poui+Fm5DwJANj4Lz59pmnK5JafbLVdmVqjIM3CctT2v29n7eY6XaWYdv5DHcJv5t71+VIhm1i3YqrQXfPg5lHxIs7fNznWZaUlqe6itJ/y0qdpG713+HstM45y2bbNryJBwpaVJAQGRmjz5uOrVs+Ynb4h/iAY1GqRBjQZ5ypxup55f8bwOpRxSjYo1NLDRQN1S/xaFVgj1XUMvMPRB+Nq2bXatmxuom8KlGdODdHEjO30Qpa48fhZ6RjHODAV5BQdPWJCcme78w8LZ/+YzUpJrMDlXwihD7DZDDpshh58hu81QRFDBI41hmmb5eaZnSUhIkNPplJS1zPSW41u09sha1axUU5dWu1SStDNxp7p83MWzT/Yy09kXDu0Q3UE1KtXwSftRfnXuHKVdu/55o9Wu7dJPPx3xYYvKllMZp/Tqmlc1649ZSspIkpQ1Wtqnbh/d2ehO1Q+v7+MWln/0Qfha585RGhjwqu6sOVsTdwzWPNe/6IModXl9FnqNYpwODrmPQhQsIOQ9imHK5XYX6hjlJWPYDMlhM2T3Ox00zrx9OnRkldnksEl2m82rzrn2y+v22fvbbYYcfjbZbZLDlvXv2efXOxwORRZw3lu5HvlZsm+Jvt75tdcy05J0Q+0bPOGnVmgt9a3XV43CG7HMNIqFyyUlJ3u/6ZKTDblckr1cv6OKT0X/inq2w7N6uPXDmrdjnqZumqqtJ7bq/S3v6/0t7+updk9paPOhvm5muUUfhK95+mDAP2X0QZS2rH4o1b5to0JqJsrwM+XncOumj9zlehTD4fWl3/u2PZ/ynPudDgx+tpzHyy1gnHXfz3ZhLuBVrj+ixq0cp7WH1nruZy8z3S66nafMZtj0atdXfdE8XKDsdik42PtDNTjY5D/8XAQ5gjSg4QDd1uA2/XLwF03ZNEVf7/1aneM6e+ocSj4kfz9/hQeE+7Cl5Qt9EL5GH0RZYLdLIVHpqtzce8TR5c5ZN3sUI7cRhjxHMc41SnEeoxjZt3MbxUDJKtcfU40iGql1ldZZCxNEtWSZaZSayZOPn55jbFdAgEuTJx/3dZPKNMMwdHHsxbo49mIdTjmsqkFVPdteXvWyFuxcoN51euvOxneqcURjH7a0/KAPwtcmTz6udU9kfcusHObW5HH0QZS+V15J1Nj1kplpKGluK7045qTqxru9A8gFPIqBwrtgzvkBSpthGIqMjFFCwkGV47eRT7lNt3p/3lurDq/ylLWPbq87G9+pq2teLbutXP99psTRB+Fr7o/+K3PJFzKu7StbrwG+bg4s6GiKU0Pm75TDz9Antzbgs9CiCnPOD5dkB84DUzzOj82wacH1CzT/+vm6vvb18jP89OuhX3Xv4nvVYVYHzdg8w9dNLPPogwAAFBz/bQLwKcMw1C66ndpFt9PB5IN6f8v7mrllpg4mH9SxtGOeeqZpMq0VAACcF0Z+AJQZMcExerTNo/rt1t/0WtfXNKDBP9NoFu1ZpJ6f9dSCHQuUkZnhw1YCAIDyipEfAGVOgD1AN9e72atsxpYZWnV4lVYdXqWqv1bVgAYDNKDhAEUFRfmolQAAoLxh5AdAufB6t9f1UKuHFBUYpcMphzV+zXi1+6idhi0ZptWHV3OSKwAAOCfCD4ByISooSiNbj9Svt/6qty59S62jWsvpdmr+zvl6Zvkzvm4eAAAoB5j2BqBc8ffzV686vdSrTi/9nvC7pmyaokurXepZDCEpPUn/2/g/3dbgNsUEx/i4tQAAoCxh5AdAudUssple6/aaesb39JTN3jZbr655VR0+6qB7F9+r3w79xpQ4AAAgiZEfABeYemH11CG6g1YcWqHPd32uz3d9rsYRjTW48WD1jO+pQHugr5sIXHiOHpa5baPkZ5ccDsnuyLoIlT3nbcPG310B+A7hB8AFpVu1bupWrZs2HdukqZumav6O+dp0bJMe+vEhjVs5TstvWU4AAorL6SBj/vqDzF9/KPg+OUJR7kEp+7ZxZrnDkRWy7A7JYZf8Tv9rd/wTvvwcMs4uO9fj+Nm5lhhgAYQfABekxhGN9UqXV/Rkuyc1649Zmr55ulpGtfQKPpuObVKj8EZ84QGKyNbxUtkP/aX0E8elTKfkdEou1+nbLsnllDJd3ju53VJGetZPARVl4mqRJrvmGZDyGMXKL5DZ/wliZ4Yz4+wgxmgZUKoIPwAuaOEB4RrafKjuaXqPkjKSPOU7EnfoynlXqmF4Qw1qNEg31b2JESGgkIwadRQ+9r9KSDiY57l1pmlmBSKX84x/879tuk4Hqcyz9juzLPu2M2s/84zbZ5bnfOwzwpnp9m5sdhuUWqDnX2qhLNfRsjxGw4o4WmYUMvgxWobyqlyHn7S0NKWn5/zLkc1mU0BAgOd+SkpKnscwDEOBgYFFqpuamprnh31J1ZWkoKCgItVNS0uT2+0ulrqBgYGeD7z09HRlZmYWS92AgADZTv+FKyMjQy6Xq1jqVqhQQX5+foWu63Q65XQ6c61nGIbXcfKrK0n+/v6y27Peci6XSxkZGXnWdTgccjgcha6bmZmZ63sim91ul7+/f6Hrut1upaWlFUtdPz8/VahQQVLWl6LU1Ly/ZBSmbkHe9wEKUEpKimw2mzYf26xAe6C2HN+ix5Y8pv/7+f/Up24f3Vb/NlWrVM2zT1n+jDAMQ8nJyUpJSfHal8+Iwtctic8Iyft9f6F9RuzeHaB7741WWppUoUKE3nprv+rWzf13Z7fb5R+Y1X/K0meEmZl5VvDKlDKdsrkzFeDn5ylPOfV3VmByOWW6XFn7OJ2S2yUj06VAm80TyFJSUv4ZBcvMlJzOrDCX6ZIt06UA/RMGU9PSZGbXOzOgZbqy3vd+p0d83O7T7+XcP3+86kpKy3TLnd/73u5XfHXPCEVBAQGe22myye3n988ImC07lNklu12BQUGnA5dD6ZIyDT/J7vfPaJlnZMxPQSEhMhz+kt2udLepTMOmTD8/uWwO/b7XX5kZqXK5DF18cZAmT05VgwZZn018Rljne0T2/QIxy7GWLVuayvojitdP9+7dzf3793t+AgMDc60nyezYsaNX3fDw8DzrNm/e3KvuRRddlGfdevXqedWtV69ennUvuugir7rNmzfPs254eLhX3Y4dO+ZZNzAw0Ktu9+7d86wryavutddem2/d7du3e+refPPN+db9/fffPXUHDhyYb90VK1Z46t5777351l2yZImn7siRI/Ot++WXX3rqPv300/nW/fjjjz11x44dm2/dL774wjxw4IC5f/9+c8KECfnWfffddz3Hfffdd/OtO2HCBE/d6dOn51t37Nixnroff/xxvnWffvppT90vv/wy37ojR4701F2yZEm+de+9915P3RUrVuRbd+DAgZ66v//+e751b775Zk/d7du351v32muv9erD+dXN/ozYtGuT+ezCZ03D38izLp8R//zwGZH1U5jPiOnTp3vqXmifEQH1LjN11QOmai4xpY351i2vnxE+/R5Rt675147t5l9bt5h/bfzdrFe7dp51L4qKNPctmGXu+/h9c9+sqWazWjXyrBseHGjue+ERc9+oEeafTw8zO1SLybNuoJ+fufOWy80/br7c3HjTZeYlVfN+bpLMubffbn408E5zxp13m21q5t1eSeZD940yH3nwJfPBh14xGzRum//v47HJ5uVjFphdx35uRne4Lt+61ar989nDZ4R1vke0bNmywPmhXI/8AMD5CKsQpnua3aOX/V5Waj7TXMzToyzAhW7/3/v1xa4vdCD5gDZv3pxv3bSYxVKHxVJKFWnPjaXUQutwmdK+dD+53DY53VkjKXlJNRz6NLiRnG5TLrepY/bgPOum2CpoVPUbPXV3BC6TdDDXuuk2h/q1esJzf/umJ6XDv+Z57JeaDvLc3rnqD0m78qy7JKat/PyzRrQTAr7Js54kHasQJod/RUlSppH/+U+pqYZcrqyBIyA3hmmW3wtg7Nu3j2lvTGkpUN2SmvZWo0YNJSQkyDRNhqvLwbS3gtTdmbhTe07u0WXVL8t6XJnq900/taraSnc2ulNVHVXzPK4vpr1FR0fr0KFDTHs7z7oX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\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 0)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 266,
-   "id": "5862bfa2",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 99)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 268,
-   "id": "bbc7b78e",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "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4uLMW2+91bzjjjvMxMREs0uXLmZcXJzZrFmzYrcbP368KckMDQ01v//++ypt48SJE02n02muXLnSNE2zUkd+tm7dakoye/fubdarV88866yzzDvuuMO87LLLTMMwzHr16pkbNmwwExISzNNOO80cN26cee2115oul8sMCgoyt2/f7rO/3Nxcs3///qYks3Xr1uZNN91kjhs3zuzQoYMpybzmmmuKtCE4ONg8/fTTzREjRpj33nuvecMNN5jx8fGmJPOBBx4oUr93796mJPOKK64wGzZsaP7jH/8wx40bZ7Zq1cqUZI4cObLINpdffrkpyfzjjz+KfR0q2g/uv/9+U5L50UcfleHVLr/MzEyzTZs2ZpcuXUy3221+9dVXFRr5adasmRkXF2d26dLFbNmypXnHHXeYY8eONePi4kxJ5pgxY4rd7v333zcDAgJMSeYzzzxTGYdULqNHjzYlmdOnTy9T/YyMDKuvrVmz5rj1k5OTTUlmbGxssesLRtquu+66crX7WLzP/n4Nzj77bDMyMtLs1auXee+995ojRowwg4ODTYfDYc6ePbvY16+q32fF+fHHH01J5mmnneZT3q9fP1OS+emnnxbZJi0tzZRkOp1OMycnp9zPycgP7MhZ9fEKQIFly5Zp+vTpSkxM1I8//qjo6GhJ0pQpU3TOOedo9+7dRf4i9+OPP+ree+/VoUOHlJiYqISEBA0ePFgjRozQvffea+1Dyr9QvDz69OmjPn36+JStXLlSU6ZM0b333qsuXbpU6DjL4ptvvtHkyZN1//33W2WTJk3SQw89pG7dumno0KF64YUXrGtO+vXrp+uuu05PPfWUnnrqKWubKVOmaMmSJRo7dqyefvppBQQESJLy8vJ044036vXXX9eQIUM0cOBAa5t169YpMTHRpz25ubm68MIL9fjjj+vmm29WfHx8kTZv3rxZv/32m8/vrWPHjnrrrbf02GOPqWHDhlbdpUuXqm7dukpKSiqyn4r0gwJdu3aVJH377bcaMGCAVf7LL79o4cKFxW5TkvHjxysyMtKn7N5779XWrVv1888/y+k8sf8idu/erYSEBK1bt84aOXnkkUfUtWtXvfDCCxo2bJjOPvtsSdJff/2lhx9+WIsWLVKPHj2UkZGhZ555Rt98843+7//+T61bt7b2O3PmTG3btq3M7WjevHmx10V4PB5NnjxZUv51QN99951++eUXnXPOObrhhhuK3demTZs0a9Ys5eXlae/evfrkk0+0a9cu3XfffWUaJYuKilJAQID279+vI0eOKDw83Gf9li1bJEl//vlnmY+vNHZ+nxX49ttvddddd+mJJ56wysaOHasePXro5ptv1oUXXqi6dev6bFPV77PivP7665LyR2YKKxjt2bp1a5FtCvqLx+PRli1b1KZNm3K1DbAlf6cvwE6uv/56U5L5+uuvF1lX8Bf2wn/xL7jm57nnnjM9Ho/PNT/Dhw8vcs2PpHL9TJw40acNmZmZZuvWrc2OHTv6XBNRFSM/zZs3Nz0ej8+67du3W6Nbx17L5PF4TKfTafbp08cqy8vLM6Ojo82GDRsW27ZDhw6ZhmGYV1xxRZna9v7775uSzDfffNOnvOAv0p999lmRbR566KEifyHOyckxJZmtWrUq9nnK2w8KW758uSnJHDZsmE95wV9wy/OzdetWn318/vnnpmEYPte7nMjIjyTz22+/LbKuoK0Ff8kvuObntttuK3LNz8MPP1zkmp+C30dZf3r37l1sG7OysorUvfbaa8309PQSj2vRokU+9QMDA80nnnjC59qd4znvvPNMSebtt9/uU75x40azTp06piQzKSmpzPsrDu+zv1+DiIiIYq+NHDFihCnJnDlzZpF1Vfk+K84HH3xgGoZhNm7c2Dx48KDPulmzZpmSzMTERPPAgQNWeW5urnX9mCRz2bJlx32eYzHyAzti5AeoRgXT2Pbu3bvIurPOOsv6a2qBgQMHql+/fj7neUtSXFyc3nnnHW3fvt3nmh+znNPtHuvuu+/Wli1btHLlyhKviagsp512WpHjLZh5KCkpqci1TAEBAWrQoIH++usvq2zDhg06ePCgWrVqZf0F/1ghISFav369T9mOHTs0depUffHFF9qxY4eysrJ81icnJxe7r+JGwgqm1j106JBVduDAAUn5f+UvTnn7QWEFfw0/dkaokSNHntD00KmpqRo5cqS6deumO++8s8L7KczpdOrMM88sUl4w2rh69WpJ+df8rFu3rshoV3BwsCZOnKhRo0b5jBAce01ERQUHB8s0TZmmqV27dunzzz/Xfffdpy5dumjx4sXFXnd1wQUXyDRNud1u7dixQ++8844mTJigb775Ru+//74CAwOP+7xPP/20evbsqaeeeko//PCDevbsqZSUFL3//vtq1aqVfvnll0qbZc/O77MCnTt3LvbayD59+ujNN9/U6tWri8zWV1Xvs+IsW7ZMw4cPV1hYmN5///0ix3PllVfq7bff1pIlS9S2bVsNHDhQwcHB+vzzz7V79241bdpUO3bsqLaZGYHajvADVKO0tDRJUoMGDYqsczqdRUJOaGioQkNDS9xfZV60+s033+j555/Xww8/rI4dO1bafksSERFRpKzgNKvi1hWsd7vd1uOCLz8bN24sdWKGI0eOWMtbtmzRGWecoUOHDqlXr146//zzFRERoYCAAG3btk1vvvmmcnJyit1PcaeuFLQ5Ly/PKgsJCZGUf3F7ccrbDwor+AJZ8ByV5Y477tCBAwf0+eeflxq+yqN+/frF7qvgtKWC10EqvS+f6L1bjscwDMXHx2vEiBFq3bq1evToobFjx+rjjz8ucRuXy6XExEQ99NBDCgwM1H333afp06eX6f4wp556qlatWqVHH31Un332mVatWqVGjRrp9ttvV//+/dWrVy/FxsZWyrHZ+X1WoLj3mVR8PyxQVe+zY/3www+68MIL5XA4tGjRIp1xxhlF6gQEBOijjz7StGnTNGvWLL355psKDg5Wnz599P7772vIkCGSVGl9BjjZEX6AalTwZWPv3r1KSEjwWefxeLR//341bty4xO2P9xfvE7nmZ/Xq1TJNUxMnTtTEiROLrV8wGrR69Wqddtpp5XquqlDweg4ePFjz588v0zbTpk3TgQMH9MYbbxT5C+5///tfvfnmmyfcrsjISAUGBlpfGo91Iv2gYJ/HftE50WsRfv75Z2VlZZV4zcA777yjd955Rx07dtQvv/xSpv3v379feXl5RQLQnj17JJX85ft4/biyrvkpTvfu3RUZGVmu0aULL7xQ9913n77++usy3xwzMTGx2L5WcN1HwTUnNUFtfZ8V2Lt3b7HlpfXDqnqfFfbdd9/p4osvlsPh0JIlS9S9e/cS9+FyuXTPPffonnvu8SnPzs7Wxo0bVb9+fbVo0aJc7QLsivADVKPOnTvr559/1jfffFPkS+/SpUt9/qpZERWZlrog/LRr106jR48uts6cOXN05MgRjRo1SoZhqF69eifSzErTpk0bRUZGavny5XK73WU6VW/Tpk2SpMsvv7zIum+++abS2ta+fXutXr1ahw8fLnIx9Yn0gz/++EOSioTPX375pdy/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zz/ldDrVvHlzXXbZZbrmmmsUEhLi7ybWOuUOP5s3b9YjjzxiPX7rrbckSb1799Ytt9yigQMHKicnRy+//LIyMzPVpk0bTZgwwecCu9tuu00zZszQo48+at3klOQLAACAY51zzjmaNm2a8vLytH//fn311Vd66KGH9Mknn+iNN96olHu/1FS33XabPv30U40bN06TJ09WvXr19Pvvv+vVV19VkyZNdMEFF1Rov7m5uSf15BelKXdvOfXUUzV37twS1xuGoWHDhmnYsGEl1gkPD+eGpgAAADiuwMBAxcbGSpLi4uLUvn17de7cWcOGDdPcuXM1fPhwSfnXmE+aNElLlixRbm6uOnTooIcfflinnnqqJOnJJ5/U4sWLNXr0aD355JNKTU3VkCFDNHnyZL388st65ZVX5PV6NXr0aJ/vqS+//LLmzp2r7du3KzIyUv369dMDDzygsLAwSdKcOXP08MMP68UXX9TEiRO1a9cunXHGGZo2bZoaNGggKf/69kmTJmnOnDlyOBy66qqrjnvtyocffqj58+fr9ddfV//+/a3yJk2a6Pzzz1d6erokaciQIWrbtq0effRRq86oUaNUt25dPf3005Kkbt266corr9TWrVu1ZMkSXXjhhdqyZYu6deum+++/39ruwIED6ty5s+bMmaPu3bsrJydHU6dO1QcffKC0tDRrUOPMM8+s0O+yJji5xwoBAABQhGmaMnOy/fNTCZNjnHXWWWrbtq0WLVpkld10003av3+/Zs2apUWLFql9+/YaNmyYDh06ZNXZvn27vvzyS73zzjt6/vnnNXv2bF133XXavXu35s2bp/vvv1///ve/9fPPP1vbOBwOPfroo/rqq6/09NNP6/vvv9fkyZN92pOVlaWXXnpJ06dP1/z585WcnKxJkyZZ619++WW99957evLJJ7Vw4UKlpqZq8eLFpR7jggULlJiY6BN8ChiGUeTWMcfz8ssvq23btlqyZInGjx+vyy67TB988IHP7+PDDz9UgwYN1K1bN0nSAw88oFWrVumFF17Q559/rgEDBuiaa67xuXa/tjl5xwkBAABQvNwceccO9ctTO56bKwUFn/B+WrZsqfXr10uSli9frl9++UVr1qxRUFCQJOmhhx7SkiVL9Mknn+iaa66RJHm9Xk2bNk3h4eFKSkrSmWeeqc2bN+vtt9+Ww+FQy5Yt9fzzz2vZsmXq3LmzJOmGG26wnrNJkya6++67de+99+qxxx6zyt1utx5//HFrduORI0daoy6S9Nprr2ns2LG66KKLJEmPP/64vv7661KPb+vWrUpMTDyh16iwnj176uabb7YeX3LJJZo4caJ+/PFHK+wsWLBAgwYNkmEYSk5O1pw5c/Tjjz9a9/K6+eab9dVXX2nOnDm67777Kq1t1YnwAwAAgFrHNE3r3o+//fabMjIy1K5dO5862dnZ2r59u/W4SZMmCg8Ptx7Xr19fDofDZ+KEmJgY7d+/33r87bff6rnnntPmzZuVnp6uvLw8ZWdnKysry5pwICQkxAo+ktSgQQNrH4cPH9bevXvVqVMna73T6VTHjh1LHQWr7OnjO3To4PO4Xr16OvvsszV//nx169ZNO3bs0KpVqzR16lRJ0vr165WXl6devXr5bJebm+tzS5vahvADAABgN4FB+SMwfnruyrBp0yY1adJEkpSRkaHY2FjNmzevSL2IiAhr+djJEQzDKHIvScMw5PV6JUk7d+7UyJEjde211+qee+5RZGSkVq5cqTvvvFO5ublW+CluHycaXhISErRp06bj1isIgIUVd8PX0NDQImWXXXaZHnzwQU2ePFkLFizQKaecolNOOUVS/msaEBCgRYsWKSAgwGe7guudaiOu+QEAALAZwzBkBAX756eYL+vltXTpUq1fv14XX3yxpPxRjZSUFDmdTrVo0cLn50RupfLrr7/K6/Vq4sSJOv3005WYmOhzy5eyqFu3rho0aKDVq1dbZR6PR7/++mup2w0aNEhbtmzRkiVLiqwzTVOHDx+WlD+Cs3fvXmtdXl6e/vzzzzK1rX///srJydFXX32lhQsXavDgwda6du3aKS8vTwcOHCjymhZMQFEbEX4AAABQY+Xm5mrfvn3avXu31q5dq+nTp2vUqFE677zzNGTIEEn5t1w5/fTTNWrUKH3zzTfauXOnVq5cqccff1xr1qyp8HM3b95cbrdbr7/+urZv36558+bp7bffLvd+Ro8ereeee06LFy/Wpk2bNGHCBCu8lOTSSy/VpZdeqjFjxmj69Olas2aN/vrrL3322WcaNmyYli1bJin/Wp4vvvhCn3/+uTZt2qT77rvvuPsuEBoaqgsuuEBPPPGENm7cqEGDBlnrEhMTddlll2ncuHH69NNPtWPHDq1evVrPPvusPv/883K/BjUFp70BAACgxvrqq6/UqVMnOZ1ORUREqG3btpo0aZKuuOIK61odwzD09ttva+rUqbrjjjt04MABxcTEqHv37qpfv36Fn/vUU0/VxIkT9cILL+ixxx5T9+7ddd9995X7li033XST9u7dq/Hjx8vhcGjYsGG64IILrOmqi2MYhp5//nnNmjVLc+bM0fTp062RrSFDhqh3796SpCuvvFK///67xo0bJ6fTqRtuuKFcU1EPHjxY1157rbp37674+HifddOmTdMzzzyjRx99VHv27FF0dLQ6d+6s8847r1zHX5MYZmVfTVWNUlJSij2nEagOhmEoLi5Ou3fvrvSLEoGyoA/C3+iDtcvhw4fLPT1ybeFyufhOaAMl9WGXy6WYmJgy7YPT3gAAAADYAuEHAAAAgC0QfgAAAADYAuEHAAAAgC0QfgAAAADYAuEHAAAAgC0QfgAAAADYAuEHAAAAgC0QfgAAAADYAuEHAAAAOI4nn3xS/fr183czcIIIPwAAAKiRDhw4oHvvvVddu3ZVixYtdNppp2n48OFauXKlv5tWYevWrdONN96ojh07KiEhQT179tS//vUvbd682d9NswWnvxsAAAAAFOeGG25Qbm6unn76aTVr1kwpKSlaunSpDh065O+mVchnn32mG2+8Ub1799azzz6r5s2ba//+/fr444/1xBNP6KWXXqrQfnNzcxUYGFjJrT05MfIDAACAGictLU0rVqzQ/fffr549e6px48bq1KmTbr31Vp1//vmSpJ07dyo+Pl5r16712S4+Pl7Lli2TJC1btkzx8fH6/PPPdd555ykhIUEDBgzQH3/8YW0zZ84cnXLKKVq8eLF69uyphIQEDR8+XMnJycW2bfny5WrWrJn27dvnU/7QQw9p8ODBxW6TlZWlO+64Q3379tXMmTN19tlnq2nTpurcubMeeughTZ061acthS1evFjx8fHW44JT8N599111795dCQkJmjVrljp37iyv1+uz7T/+8Q/dcccd1uMlS5aof//+SkhIUI8ePTRt2jR5PJ7ifwknIcIPAACAzZimqWyP1y8/pmmWqY1hYWEKCwvT4sWLlZOTc8LHPHnyZD300EP65JNPVK9ePY0cOVJut9tan5WVpenTp+uZZ57RwoULdfjwYY0ZM6bYfXXv3l1NmzbV+++/b5W53W4tWLBAV155ZbHbfP311zp48KD++c9/Frs+IiKiXMezbds2ffrpp3rttdf0v//9TwMGDNChQ4f0/fffW3UOHTqkr7/+2gpkK1as0Lhx4zR69Gh99dVXmjp1qubOnavp06eX67lrM057AwAAsJmcPFPD5mzwy3PPGZakYKdx3HpOp1NPPfWU7r77bs2aNUvt2rVT9+7dNXDgQLVt27bcz3v77bfr7LPPliQ9/fTT6tKlixYtWqRLL71UUn54mTx5sjp37mzV6d27t1avXq1OnToV2d9VV12lOXPmWGHms88+U05Oji655JJin3/r1q2SpJYtW5a77cVxu9165plnVK9ePavsnHPO0cKFC9WrVy9J0ieffKLo6Gj17NlTkjRt2jTdcsstGjp0qCSpWbNm+te//qUpU6b4jA6dzBj5AQAAQI108cUXa9WqVXrjjTfUp08f/fDDD7rgggs0Z86ccu+rS5cu1nJUVJQSExO1adMmq8zpdOq0006zHrds2VIRERHauHFjsfsbOnSotm3bplWrVkmS5s6dq0suuUShoaHF1i/riFdZxcfH+wQfSRo8eLA+/fRTa6RswYIFuvTSS+Vw5H/l//333/X000+rVatW1s/dd9+tvXv3Kisrq1LbV1Mx8gMAAGAzQQGG5gxL8ttzl0dwcLDOPvtsnX322br99tt111136cknn9SwYcOsL/WFVdf1K/Xr11e/fv00Z84cNW3aVF999ZXmzZtXYv2EhARJ0qZNm3yC2LEcDkeRoFT49LwCxYWsfv36yTRNffHFF+rYsaNWrFihhx9+2FqfmZmpO++8UxdeeGGRbYOCgkps08mE8AMAAGAzhmGU6dSzmqhVq1ZavHixJCk6OlqStHfvXrVp00aS9NtvvxW73apVq6xJA1JTU7VlyxafU9A8Ho/WrFljneK2adMmpaWlqVWrViW25aqrrtItt9yiuLg4NWvWTF27di2xbu/evRUdHa0XX3xRM2bMKLI+LS1NERERqlevno4cOaLMzEwr4JR0TMcKDg7WhRdeqAULFmjbtm1KTExU+/btrfXt2rXT5s2b1aJFizLt72RE+AEAAECNc/DgQd1000268sordcoppyg8PFxr1qzRiy++qP79+0uSQkJC1LlzZ02fPl2NGjXS/v379e9//7vY/T399NOKiopSTEyMpk6dqujoaF1wwQXWepfLpQcffFCPPvqonE6n7r//fnXu3LnY630K9OnTR+Hh4Zo+fbruuuuuUo8nNDRU//nPf3TTTTdp5MiRGjVqlFq0aKGDBw/qo48+UnJysl588UV16tRJISEhevzxxzVq1CitXr1a7733Xplft8GDB2vkyJH6888/ddlll/msu/322zVixAjFx8fr4osvlsPh0O+//64//vhD99xzT5mfozbjmh8AAADUOGFhYercubNeffVVXX755erbt6+eeOIJDR8+XJMnT7bqFUzVfMEFF2jixIm6++67i93ffffdp4kTJ+rCCy9USkqKZs6c6XNvnJCQEI0ZM0Zjx47VoEGDFBYWdtz77jgcDg0dOlR5eXkaMmTIcY+pf//++uCDD+RyuTR27Fj17t1bY8aM0eHDh612R0VF6dlnn9UXX3yhc889VwsXLizXZARnnXWWIiMjtXnz5iLTbvfp00dvvvmmvvnmG1100UW65JJL9Oqrr6px48Zl3n9tZ5iVffVVNUpJSSn2HEigOhiGobi4OO3evbvSL2IEyoI+CH+jD9Yuhw8fVt26df3djCrhcrlK/E64bNkyXXHFFfr9999LnE56zpw5evjhh7V+/fpyP/edd96pAwcOaObMmeXeFuVTUh92uVyKiYkp0z447Q0AAAAop8OHD+uPP/7QwoUL9cYbb/i7OSgjwg8AAABQTgXX41xzzTXW/YNQ83HaG1BBnO4Bf6MPwt/og7WLXU97w8mjMk57Y8IDAAAAALZA+AEAAABgC4QfAAAAALZA+AEAAABgC4QfAAAAALZA+AEAAABgC4QfAAAAoBaYM2eOTjnllErf77JlyxQfH6+0tLRK33dNQ/gBAABAjTR+/HjFx8frnnvuKbJuwoQJio+P1/jx46u/YceYM2eO4uPjFR8fr8aNG6tTp066+eablZycXO1tKWhHfHy82rRpo4EDB2rp0qWlbtOlSxetXr36pL0PVGGEHwAAANRYjRo10ocffqisrCyrLDs7WwsXLlR8fLwfW+arTp06Wr16tVatWqVXXnlFmzdv1k033eSXtkybNk2rV6/WwoULFR0drREjRmj79u3F1nW73QoMDFRsbKwMw6jmllY/wg8AAABqrPbt26tRo0ZatGiRVbZo0SI1atRI7dq186nr9Xr17LPPqnv37kpMTNR5552njz/+2Fqfl5enO++801rfq1cvvfbaaz77GD9+vEaNGqWXXnpJnTp10qmnnqoJEybI7XaX2k7DMBQbG6sGDRqoa9euuuqqq7R69Wqlp6dbdZYsWaL+/fsrISFBPXr00LRp0+TxeKz1L7/8ss4991y1bNlSXbp00X333aeMjIxyv2YRERGKjY1VmzZt9Nhjjyk7O1vffvutpPyRoTfffFMjR45Uy5YtNX369GJPe1u5cqWGDBmixMREtW3bVsOHD1dqamqZXufU1FSNHTtW7du3V2Jionr27Kk5c+aU+ziqgtPfDQAAAIB/ZLozS1znMBwKdgaXqa5hGApxhhy3bqgrtAKtlIYNG6Y5c+bosssukyTNnj1bw4YN0w8//OBT79lnn9X8+fP1+OOPq0WLFlq+fLluu+021atXTz169JDX61VcXJxefvllRUVF6aefftLdd9+t2NhYXXrppdZ+li1bptjYWL333nvaunWr/vnPf+rUU0/V1VdfXab27t+/X4sWLVJAQIACAgIkSStWrNC4ceP06KOPqlu3btq+fbvuvvtuSdIdd9whSXI4HHr00UfVtGlTbd++XRMmTNDkyZP12GOPVeh1k6Tg4PzfYeHwNm3aNE2YMEGPPPKInE5nkVGhdevWadiwYRo2bJhVZ9myZfJ6vZKO/zo/8cQT2rBhg2bNmqXo6Ght3bpV2dnZFT6GykT4AQAAsKlWM1uVuK5vk756+4K3rccdZnVQlier2Lo94npo3oB51uNus7vpYPbBIvWSb6jYNTCXX365Hn/8cf3111+SpJ9++kkvvviiT/jJycnRs88+q9mzZ6tLly6SpGbNmmnlypWaNWuWevToIZfLpbvuusvapmnTplq1apU++ugjn/ATERGhKVOmKCAgQC1bttS5556rpUuXlhp+Dh8+rFatWsk0TesUvdGjRys0ND/wTZs2TbfccouGDh1qte1f//qXpkyZYoWfG264wdpfkyZNdPfdd+vee++tcPjJysrSv//9bwUEBKh79+5W+aBBgzRs2DDr8bHh58UXX1SHDh18nrd169aSyvY6Jycnq127durYsaN1LDUF4QeoAPPAPpn798mdlyMFBPm7OQAAnNTq1aunc889V3PnzpVpmurbt6+io6N96mzbtk1ZWVm66qqrfMrdbrfP6XEzZ87U7NmzlZycrOzsbLndbp166qk+2yQlJVkjNpLUoEEDrV+/vtQ2hoeHa/HixfJ4PPryyy+1YMECn4kafv/9d/3000+aPn26Veb1epWdna2srCyFhITo22+/1XPPPafNmzcrPT1deXl5PuvL6pZbbpHD4VB2drbq1aun//znP2rbtq21viCUlOS3337TgAEDil1Xltf5uuuu0w033KC1a9eqd+/e6t+/v7p27Vrm9lclwg9QAeYPX8n84B2lXzBYGjLK380BAKBCNo7cWOI6h+F7afiv1/xaYt1jL5RfceWKE2tYMYYNG6YHHnhAkjRlypQi6wuujXnrrbfUsGFDn3WBgYGSpA8++ECTJk3Sgw8+qC5duigsLEwvvviiVq9e7VPf5XIV2b9pmqW2z+FwqEWLFpKkVq1aafv27br33nv17LPPSpIyMzN155136sILLyyybVBQkHbu3KmRI0fq2muv1T333KPIyEitXLlSd955p3Jzc8sVfiZOnKhevXqpbt26qlevXpH1BaNRJSk4Va44ZXmd+/btqx9//FFffPGFvvvuO1155ZUaMWKEHnrooTIfQ1Uh/AAAANhUea7Bqaq6ZXXOOedY16306dOnyPqkpCQFBQUpOTlZPXr0KHYfK1eu1Omnn66RI0daZSXNgnaibrnlFvXs2VM33nij2rdvr3bt2mnz5s1WQDrWr7/+Kq/Xq4kTJ8rhyA+eH330UYWeOzY2tsTnKYtTTjlFS5cu9TlFsEBZXmcpf7Ru6NChGjp0qM444wxNnjyZ8AMAAACURUBAgL7++mtr+Vjh4eG66aab9PDDD8vr9eqMM85Qenq6Vq5cqfDwcA0dOlQtWrTQvHnz9PXXX6tJkyZ6//33tWbNmiq5JiU+Pl4XXHCBnnjiCb311lu6/fbbNWLECMXHx+viiy+Ww+HQ77//rj/++EP33HOPmjdvLrfbrddff139+vXTypUr9fbbbx//iarA2LFjdd555+m+++7Ttddeq8DAQH3//fe65JJLFB0dfdzX+YknnlCHDh2UlJSk3Nxcff7552rVquTry6oT4QcAAAC1Qp06dUpdf/fdd6tevXp67rnntGPHDtWtW1ft27fXrbfeKkm65pprtG7dOv3zn/+UYRgaOHCgRowYoS+//LJK2nvDDTfo0ksv1erVq9WnTx+9+eabeuqpp/T888/L5XKpZcuW1rUzp556qiZOnKgXXnhBjz32mLp376777rtP48aNq5K2lSYxMVHvvvuuHn/8cQ0YMEDBwcHq1KmTBg0aJOn4r7PL5dJjjz2mnTt3Kjg4WN26ddMLL7xQ7cdRHMM83gmMNVhKSspx51wHqoL34zkyP3hHYRcMVs6QUcc9DxioCoZhKC4uTrt376YPwi/og7XL4cOHVbduXX83o0q4XC6+E9pASX3Y5XIpJiamTPvgJqcAAAAAbIHwAwAAAMAWCD8AAAAAbIHwAwAAAMAWCD8AAAAAbIHwAwAAAMAWCD8AAAAAbIHwAwAAAMAWCD8AAAAAbIHwAwAAANQA3bp106uvvurvZpRo2bJlio+PV1pamr+bUmGEHwAAANRI48ePV3x8vO65554i6yZMmKD4+HiNHz+++ht2jDlz5ig+Pr7IT0JCgr+bVqLC7WzTpo0GDhyopUuXlrpNly5dtHr1atWtW7eaWln5CD8AAACosRo1aqQPP/xQWVlZVll2drYWLlyo+Ph4P7bMV506dbR69WqfnxUrVvi7WaWaNm2aVq9erYULFyo6OlojRozQ9u3bi63rdrsVGBio2NhYGYZRzS2tPIQfAAAA1Fjt27dXo0aNtGjRIqts0aJFatSokdq1a+dT1+v16tlnn1X37t2VmJio8847Tx9//LG1Pi8vT3feeae1vlevXnrttdd89jF+/HiNGjVKL730kjp16qRTTz1VEyZMkNvtLrWdhmEoNjbW5ycmJsZan5mZqdtuu02tWrVSp06d9NJLL2nIkCF66KGHfPZz5MgRjRkzRi1bttTpp5+umTNn+qyPj4/X22+/reuuu06JiYnq3bu3fvrpJ23dulVDhgxRy5Ytdemll2rbtm3HfW0jIiIUGxurNm3a6LHHHlN2dra+/fZb63nefPNNjRw5Ui1bttT06dOLPe1t5cqVGjJkiBITE9W2bVsNHz5cqampZfp9pKamauzYsWrfvr0SExPVs2dPzZkz57jtPhGEHwAAAJvKzMws8Sc7O7vMdQuPypRWt6KGDRvm86V49uzZGjZsWJF6zz77rObNm6fHH39cX375pW644Qbddttt+uGHHyTlfxmPi4vTyy+/rK+++kq33367Hn/8cX344Yc++1m2bJm2bdum9957T08//bTmzp2ruXPnVrj9kjRp0iQtX75cr7/+ut5991398MMPWrt2bZF6L730ktq2baslS5bolltu0UMPPWQFkgJPP/20hgwZov/9739q2bKlxo4dq3vuuUdjx47VokWLZJqmHnjggXK1Lzg4WJJ8Qt60adN04YUX6osvvtCVV15ZZJt169Zp2LBhatWqlT788EMtWLBA/fr1k9frlXT838cTTzyhDRs2aNasWfr666/12GOPKSoqqlztLi9nle4dAAAANVarVq1KXNe3b1+9/fbb1uMOHToUCTkFevTooXnz5lmPu3XrpoMHDxapl5ycXKF2Xn755Xr88cf1119/SZJ++uknvfjii9aXaEnKycnRs88+q9mzZ6tLly6SpGbNmmnlypWaNWuWevToIZfLpbvuusvapmnTplq1apU++ugjXXrppVZ5RESEpkyZooCAALVs2VLnnnuuli5dqquvvrrENh4+fLjI69mtWzfNmjVLGRkZmj17tqZPn65evXpJyg8wBe0srGvXrho7dqwkKTExUStXrtSrr76qs88+26ozbNgwq71jxozRpZdeqvHjx6tPnz6SpOuvv1533HHH8V/Yo7KysvTvf/9bAQEB6t69u1U+aNAgn5B57ClxL774ojp06KDHHnvMKmvdurWksv0+kpOT1a5dO3Xs2FGS1KRJkzK3uaIIPwAAAKjR6tWrp3PPPVdz586VaZrq27evoqOjfeps27ZNWVlZuuqqq3zK3W63z+lxM2fO1OzZs5WcnKzs7Gy53W6deuqpPtskJSUpICDAetygQQOtX7++1DaGh4dr8eLFPmUFoynbtm1Tbm6uOnfubK2LiopSYmJikf2cfvrpRR4fe2reKaecYi0XnFrXpk0bq6x+/frKzs5Wenq66tSpU2Kbb7nlFjkcDmVnZ6tevXr6z3/+o7Zt21rrC0JJSX777TcNGDCg2HVl+X1cd911uuGGG7R27Vr17t1b/fv3V9euXUt9zhNF+AEAALCpjRs3lrjO4fC9OuLXX38tse6xF8BXxYX+w4YNs07lmjJlSpH1GRkZkqS33npLDRs29FkXGBgoSfrggw80adIkPfjgg+rSpYvCwsL04osvavXq1T71XS5Xkf2bpllq+xwOh1q0aFH2AzoBhdtX8No7nc4iZQWnn5Vk4sSJ6tWrl+rWrat69eoVWR8aGlrq9gXhrjhl+X307dtXP/74o7744gt99913uvLKKzVixIgi10FVJsIPAACATR3vy2111C2rc845x7oepeD0rsKSkpIUFBSk5ORk9ejRo9h9rFy5UqeffrpGjhxp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\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 199)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "c71389ba",
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3 (ipykernel)",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.10.13"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 5
-}
diff --git a/code/3_deep_reinforcement_learning/.ipynb_checkpoints/5_DQN_monopoly2-checkpoint.ipynb b/code/3_deep_reinforcement_learning/.ipynb_checkpoints/5_DQN_monopoly2-checkpoint.ipynb
deleted file mode 100644
index 47c40ca..0000000
--- a/code/3_deep_reinforcement_learning/.ipynb_checkpoints/5_DQN_monopoly2-checkpoint.ipynb
+++ /dev/null
@@ -1,1086 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "markdown",
-   "id": "a688cb11",
-   "metadata": {},
-   "source": [
-    "# Trading Game"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 106,
-   "id": "0672c8ab",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "from gymnasium import spaces\n",
-    "import numpy as np\n",
-    "from functions import *\n",
-    "from itertools import count\n",
-    "buyer_strategies = ['Honest','Honest']\n",
-    "seller_strategies = ['Honest','Honest','Honest','Honest','Honest','Honest','Honest','Honest','Honest','Honest','Honest']\n",
-    "nbuyers, nsellers = len(buyer_strategies), len(seller_strategies)\n",
-    "nrounds, nperiods, ntokens, nsteps, gametype, nbuyers, nsellers = 1, 100, 3, 10, '1234', len(buyer_strategies), len(seller_strategies)\n",
-    "R1, R2, R3, R4 = gametype_to_ran(gametype)\n",
-    "game_metadata = [nrounds, nperiods, ntokens, nbuyers, nsellers, nsteps, R1, R2, R3, R4]\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "rnd = 0\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "period = 0\n",
-    "num_actions = 6\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.1\n",
-    "max_frac = 1.0\n",
-    "action_to_bid_frac = np.linspace(0,1,num_actions)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 107,
-   "id": "481823f6",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "class TradingEnv(gym.Env):\n",
-    "    def __init__(self, db, nsteps, render_mode = None):\n",
-    "        self.db = db\n",
-    "        self.action_space = spaces.Discrete(num_actions)\n",
-    "        self.observation_space = spaces.Discrete(num_states)\n",
-    "\n",
-    "    def reset(self, rnd):\n",
-    "        self.db.reset_period(rnd)\n",
-    "        observation = np.array([0])\n",
-    "        return observation, None\n",
-    "\n",
-    "    def step(self, action, timestep, period, rnd, seed = None, options = None):\n",
-    "        bid_frac = action_to_bid_frac[action]\n",
-    "        # convert action to bid\n",
-    "        self.db.buyers[0].next_token()\n",
-    "        min_bid = self.db.buyers[0].value*min_frac\n",
-    "        max_bid = self.db.buyers[0].value*max_frac\n",
-    "        bid = np.round(max_bid * bid_frac + (1-bid_frac)*min_bid,1)\n",
-    "        \n",
-    "        # simulate market\n",
-    "        bids = [buyer.ask(self.db) for buyer in self.db.buyers]\n",
-    "        bids[0] = bid\n",
-    "        asks = [seller.ask(self.db) for seller in self.db.sellers]\n",
-    "        current_ask, current_ask_idx, current_bid, current_bid_idx = current_bid_ask(bids, asks) \n",
-    "        sale, price, bprofit, sprofit, buy, sell = buy_sell(db, current_bid, current_bid_idx, current_ask, current_ask_idx)\n",
-    "        step_data = [rnd,period,timestep,bids,asks,current_bid,current_bid_idx,current_ask,current_ask_idx,buy,sell,price,sale,bprofit,sprofit]\n",
-    "        self.db.add_step(step_data)\n",
-    "        \n",
-    "        # compute reward, new state\n",
-    "        reward = np.array([0])\n",
-    "        if (sale == 1) and (current_bid_idx == 0):\n",
-    "            reward = np.array([bprofit])\n",
-    "        observation = np.array([timestep + 1])\n",
-    "        \n",
-    "        # check termination \n",
-    "        if timestep == nsteps-1:\n",
-    "            terminated = True\n",
-    "        else:\n",
-    "            terminated = False\n",
-    "        return observation, reward, terminated, False, None"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "d66956ac",
-   "metadata": {
-    "scrolled": false
-   },
-   "outputs": [],
-   "source": [
-    "env = TradingEnv(db, nsteps)\n",
-    "rnd = 0\n",
-    "observation, info = env.reset(rnd)\n",
-    "for period in count():\n",
-    "    for timestep in count(): \n",
-    "        action = env.action_space.sample()\n",
-    "        observation, reward, done, info, reset_info = env.step(action, timestep, period, rnd)\n",
-    "        print(f\"Rnd: {rnd}, Period: {period}, New State: {observation}, Action:{np.round(action,1)}, Reward: {np.round(reward,1)}, Period End: {done}\")\n",
-    "\n",
-    "        if done:\n",
-    "            # If the episode is done, reset the environment\n",
-    "            print('done')\n",
-    "            observation, info = env.reset(rnd)\n",
-    "            timestep += 1\n",
-    "            break\n",
-    "    if period == nperiods:\n",
-    "        break\n",
-    "\n",
-    "# Close the environment when done\n",
-    "env.close()"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "1e5a30cf",
-   "metadata": {},
-   "source": [
-    "# DQN"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 108,
-   "id": "4936cfb1",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "import math\n",
-    "import random\n",
-    "import matplotlib\n",
-    "import matplotlib.pyplot as plt\n",
-    "from collections import namedtuple, deque\n",
-    "from itertools import count\n",
-    "import torch\n",
-    "import torch.nn as nn\n",
-    "import torch.optim as optim\n",
-    "import torch.nn.functional as F\n",
-    "\n",
-    "# set up matplotlib\n",
-    "is_ipython = 'inline' in matplotlib.get_backend()\n",
-    "if is_ipython:\n",
-    "    from IPython import display\n",
-    "plt.ion()\n",
-    "\n",
-    "# if GPU is to be used\n",
-    "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 109,
-   "id": "9b6e371b",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "Transition = namedtuple('Transition',('state', 'action', 'next_state', 'reward'))\n",
-    "class ReplayMemory(object):\n",
-    "\n",
-    "    def __init__(self, capacity):\n",
-    "        self.memory = deque([], maxlen=capacity)\n",
-    "\n",
-    "    def push(self, *args):\n",
-    "        \"\"\"Save a transition\"\"\"\n",
-    "        self.memory.append(Transition(*args))\n",
-    "\n",
-    "    def sample(self, batch_size):\n",
-    "        return random.sample(self.memory, batch_size)\n",
-    "\n",
-    "    def __len__(self):\n",
-    "        return len(self.memory)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 110,
-   "id": "399e6b30",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "class DQN(nn.Module):\n",
-    "    def __init__(self, n_observations, n_actions):\n",
-    "        super(DQN, self).__init__()\n",
-    "        self.layer1 = nn.Linear(n_observations, 256)\n",
-    "        self.layer2 = nn.Linear(256, 256)\n",
-    "        self.layer3 = nn.Linear(256, n_actions)\n",
-    "\n",
-    "    # Called with either one element to determine next action, or a batch\n",
-    "    # during optimization. Returns tensor([[left0exp,right0exp]...]).\n",
-    "    def forward(self, x):\n",
-    "        x = F.relu(self.layer1(x))\n",
-    "        x = F.relu(self.layer2(x))\n",
-    "        return self.layer3(x)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 111,
-   "id": "5691ed46",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "def select_action(state):\n",
-    "    global steps_done\n",
-    "    sample = random.random()\n",
-    "    eps_threshold = EPS_END + (EPS_START - EPS_END) * \\\n",
-    "        math.exp(-1. * steps_done / EPS_DECAY)\n",
-    "    steps_done += 1\n",
-    "    if sample > eps_threshold:\n",
-    "        with torch.no_grad():\n",
-    "            return policy_net(state).max(1)[1].view(1, 1)\n",
-    "    else:\n",
-    "        return torch.tensor([[env.action_space.sample()]], device=device, dtype=torch.long)\n",
-    "\n",
-    "def plot_durations(show_result=False):\n",
-    "    plt.figure(1)\n",
-    "    durations_t = torch.tensor(episode_durations, dtype=torch.float)\n",
-    "    if show_result:\n",
-    "        plt.title('Result')\n",
-    "    else:\n",
-    "        plt.clf()\n",
-    "        plt.title('Training...')\n",
-    "    plt.xlabel('Episode')\n",
-    "    plt.ylabel('Duration')\n",
-    "    plt.plot(durations_t.numpy())\n",
-    "    if len(durations_t) >= 100:\n",
-    "        means = durations_t.unfold(0, 100, 1).mean(1).view(-1)\n",
-    "        means = torch.cat((torch.zeros(99), means))\n",
-    "        plt.plot(means.numpy())\n",
-    "    plt.pause(0.001)\n",
-    "    if is_ipython:\n",
-    "        if not show_result:\n",
-    "            display.display(plt.gcf())\n",
-    "            display.clear_output(wait=True)\n",
-    "        else:\n",
-    "            display.display(plt.gcf())"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 112,
-   "id": "345453a7",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "def optimize_model():\n",
-    "    if len(memory) < BATCH_SIZE:\n",
-    "        return\n",
-    "    transitions = memory.sample(BATCH_SIZE)\n",
-    "    batch = Transition(*zip(*transitions))\n",
-    "    non_final_mask = torch.tensor(tuple(map(lambda s: s is not None,\n",
-    "                                          batch.next_state)), device=device, dtype=torch.bool)\n",
-    "    non_final_next_states = torch.cat([s for s in batch.next_state\n",
-    "                                                if s is not None])\n",
-    "    state_batch = torch.cat(batch.state)\n",
-    "    action_batch = torch.cat(batch.action)\n",
-    "    reward_batch = torch.cat(batch.reward)\n",
-    "    state_action_values = policy_net(state_batch).gather(1, action_batch)\n",
-    "    next_state_values = torch.zeros(BATCH_SIZE, device=device)\n",
-    "    with torch.no_grad():\n",
-    "        next_state_values[non_final_mask] = target_net(non_final_next_states).max(1)[0]\n",
-    "    expected_state_action_values = (next_state_values * GAMMA) + reward_batch\n",
-    "    criterion = nn.SmoothL1Loss()\n",
-    "    loss = criterion(state_action_values, expected_state_action_values.unsqueeze(1))\n",
-    "    optimizer.zero_grad()\n",
-    "    loss.backward()\n",
-    "    torch.nn.utils.clip_grad_value_(policy_net.parameters(), 100)\n",
-    "    optimizer.step()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 115,
-   "id": "6d703d71",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "rnd = 0\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "period = 0\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.1\n",
-    "max_frac = 1.0\n",
-    "action_to_bid_frac = np.linspace(0,1,num_actions)\n",
-    "rnd = 0\n",
-    "env = TradingEnv(db, nsteps)\n",
-    "BATCH_SIZE = 256\n",
-    "GAMMA = 0.99\n",
-    "EPS_START = 0.9\n",
-    "EPS_END = 0.05\n",
-    "EPS_DECAY = 500\n",
-    "TAU = 0.005\n",
-    "LR = 1e-2\n",
-    "n_actions = env.action_space.n\n",
-    "state, info = env.reset(rnd)\n",
-    "n_observations = len(state)\n",
-    "policy_net = DQN(n_observations, n_actions).to(device)\n",
-    "target_net = DQN(n_observations, n_actions).to(device)\n",
-    "target_net.load_state_dict(policy_net.state_dict())\n",
-    "optimizer = optim.AdamW(policy_net.parameters(), lr=LR, amsgrad=True)\n",
-    "memory = ReplayMemory(30000)\n",
-    "steps_done = 0\n",
-    "episode_durations = []"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "e724c2c4",
-   "metadata": {
-    "scrolled": false
-   },
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "0 71.39999999999999 [1, 1, 5, 5, 5, 0, 0, 0, 0, 0] 0.051464093602287986\n",
-      "1 93.475 [1, 1, 1, 4, 4, 3, 3, 3, 3, 3] 0.05143510260655959\n",
-      "2 100.28333333333332 [3, 3, 4, 1, 1, 1, 1, 2, 2, 2] 0.051406685671008784\n",
-      "3 99.04999999999998 [5, 5, 5, 3, 3, 3, 1, 3, 4, 4] 0.05137883142848243\n",
-      "4 98.31999999999998 [4, 4, 2, 5, 2, 3, 3, 3, 3, 3] 0.051351528736912136\n",
-      "5 97.41666666666664 [4, 4, 4, 4, 4, 0, 0, 0, 0, 0] 0.051324766674857226\n",
-      "6 101.60714285714285 [1, 1, 1, 1, 5, 2, 4, 4, 4, 4] 0.05129853453713606\n",
-      "7 100.83124999999998 [4, 4, 5, 0, 5, 1, 1, 1, 2, 3] 0.05127282183054377\n",
-      "8 99.94999999999999 [4, 4, 5, 4, 4, 4, 3, 3, 1, 3] 0.05124761826965488\n",
-      "9 100.07499999999999 [3, 3, 2, 5, 4, 5, 5, 5, 0, 0] 0.05122291377270898\n",
-      "10 103.64999999999999 [0, 1, 1, 1, 1, 2, 2, 2, 2, 2] 0.0511986984575779\n"
-     ]
-    }
-   ],
-   "source": [
-    "if torch.cuda.is_available():\n",
-    "    num_episodes = 600\n",
-    "else:\n",
-    "    num_episodes = 200\n",
-    "    \n",
-    "rnd = 0\n",
-    "period_reward_history = []\n",
-    "for period in range(num_episodes):\n",
-    "    state, info = env.reset(rnd)\n",
-    "    state = torch.tensor(state, dtype=torch.float32, device=device).unsqueeze(0)\n",
-    "    period_reward = np.array([0.0])\n",
-    "    actions_taken = []\n",
-    "    for timestep in count():\n",
-    "        action = select_action(state)\n",
-    "        actions_taken.append(action.item())\n",
-    "        observation, reward, terminated, truncated, _ = env.step(action.item(), timestep, period, rnd)\n",
-    "        period_reward += reward\n",
-    "        reward = torch.tensor([reward], device=device)\n",
-    "        done = terminated or truncated\n",
-    "        if terminated:\n",
-    "            next_state = None\n",
-    "        else:\n",
-    "            next_state = torch.tensor(observation, dtype=torch.float32, device=device).unsqueeze(0)\n",
-    "        memory.push(state, action, next_state, reward)\n",
-    "        state = next_state\n",
-    "        optimize_model()\n",
-    "        target_net_state_dict = target_net.state_dict()\n",
-    "        policy_net_state_dict = policy_net.state_dict()\n",
-    "        for key in policy_net_state_dict:\n",
-    "            target_net_state_dict[key] = policy_net_state_dict[key]*TAU + target_net_state_dict[key]*(1-TAU)\n",
-    "        target_net.load_state_dict(target_net_state_dict)\n",
-    "        if done:\n",
-    "            eps = EPS_END + (EPS_START - EPS_END) * math.exp(-1. * steps_done / EPS_DECAY)\n",
-    "            #episode_durations.append(t + 1)\n",
-    "            #plot_durations()\n",
-    "            break\n",
-    "    period_reward_history.append(period_reward.item())\n",
-    "    print(period, np.mean(period_reward_history[-20:]), actions_taken, eps)\n",
-    "\n",
-    "print('Complete')\n",
-    "plot_durations(show_result=True)\n",
-    "plt.ioff()\n",
-    "plt.show()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 126,
-   "id": "d373832f",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "env.db.step_data = env.db.step_data.drop_duplicates(subset=['rnd','period','step'], keep='last')"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 133,
-   "id": "ecb5c740",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>3152</th>\n",
-       "      <td>0</td>\n",
-       "      <td>115</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[64.8, 72.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 19.7, 53....</td>\n",
-       "      <td>72.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>19.7</td>\n",
-       "      <td>6</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>46.25</td>\n",
-       "      <td>1</td>\n",
-       "      <td>26.55</td>\n",
-       "      <td>26.55</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3153</th>\n",
-       "      <td>0</td>\n",
-       "      <td>115</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[18.1, 17.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....</td>\n",
-       "      <td>18.1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.1</td>\n",
-       "      <td>8</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>22.10</td>\n",
-       "      <td>1</td>\n",
-       "      <td>42.70</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3154</th>\n",
-       "      <td>0</td>\n",
-       "      <td>115</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[13.4, 17.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....</td>\n",
-       "      <td>17.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>22.6</td>\n",
-       "      <td>9</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3155</th>\n",
-       "      <td>0</td>\n",
-       "      <td>115</td>\n",
-       "      <td>5</td>\n",
-       "      <td>[13.4, 17.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....</td>\n",
-       "      <td>17.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>22.6</td>\n",
-       "      <td>9</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3156</th>\n",
-       "      <td>0</td>\n",
-       "      <td>115</td>\n",
-       "      <td>6</td>\n",
-       "      <td>[13.4, 17.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....</td>\n",
-       "      <td>17.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>22.6</td>\n",
-       "      <td>9</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3157</th>\n",
-       "      <td>0</td>\n",
-       "      <td>115</td>\n",
-       "      <td>7</td>\n",
-       "      <td>[22.0, 17.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....</td>\n",
-       "      <td>22.0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.6</td>\n",
-       "      <td>9</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>22.60</td>\n",
-       "      <td>1</td>\n",
-       "      <td>25.30</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3158</th>\n",
-       "      <td>0</td>\n",
-       "      <td>115</td>\n",
-       "      <td>8</td>\n",
-       "      <td>[nan, 17.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....</td>\n",
-       "      <td>17.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>23.3</td>\n",
-       "      <td>5</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3159</th>\n",
-       "      <td>0</td>\n",
-       "      <td>115</td>\n",
-       "      <td>9</td>\n",
-       "      <td>[nan, 17.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....</td>\n",
-       "      <td>17.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>23.3</td>\n",
-       "      <td>5</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3160</th>\n",
-       "      <td>0</td>\n",
-       "      <td>116</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[43.5, 88.1]</td>\n",
-       "      <td>[27.3, 36.6, 12.3, 14.0, 50.8, 23.3, 19.7, 53....</td>\n",
-       "      <td>88.1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>12.3</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>50.20</td>\n",
-       "      <td>1</td>\n",
-       "      <td>37.90</td>\n",
-       "      <td>37.90</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3161</th>\n",
-       "      <td>0</td>\n",
-       "      <td>116</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[43.5, 72.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 14.0, 50.8, 23.3, 19.7, 53....</td>\n",
-       "      <td>72.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>14.0</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>43.40</td>\n",
-       "      <td>1</td>\n",
-       "      <td>29.40</td>\n",
-       "      <td>29.40</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3162</th>\n",
-       "      <td>0</td>\n",
-       "      <td>116</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[94.5, 17.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 19.7, 53....</td>\n",
-       "      <td>94.5</td>\n",
-       "      <td>0</td>\n",
-       "      <td>19.7</td>\n",
-       "      <td>6</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>57.10</td>\n",
-       "      <td>1</td>\n",
-       "      <td>37.40</td>\n",
-       "      <td>37.40</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3163</th>\n",
-       "      <td>0</td>\n",
-       "      <td>116</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[41.5, 17.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....</td>\n",
-       "      <td>41.5</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.1</td>\n",
-       "      <td>8</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>31.80</td>\n",
-       "      <td>1</td>\n",
-       "      <td>33.00</td>\n",
-       "      <td>9.70</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3164</th>\n",
-       "      <td>0</td>\n",
-       "      <td>116</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[4.8, 17.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....</td>\n",
-       "      <td>17.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>22.6</td>\n",
-       "      <td>9</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3165</th>\n",
-       "      <td>0</td>\n",
-       "      <td>116</td>\n",
-       "      <td>5</td>\n",
-       "      <td>[4.8, 17.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....</td>\n",
-       "      <td>17.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>22.6</td>\n",
-       "      <td>9</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3166</th>\n",
-       "      <td>0</td>\n",
-       "      <td>116</td>\n",
-       "      <td>6</td>\n",
-       "      <td>[4.8, 17.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....</td>\n",
-       "      <td>17.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>22.6</td>\n",
-       "      <td>9</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3167</th>\n",
-       "      <td>0</td>\n",
-       "      <td>116</td>\n",
-       "      <td>7</td>\n",
-       "      <td>[13.4, 17.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....</td>\n",
-       "      <td>17.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>22.6</td>\n",
-       "      <td>9</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3168</th>\n",
-       "      <td>0</td>\n",
-       "      <td>116</td>\n",
-       "      <td>8</td>\n",
-       "      <td>[13.4, 17.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....</td>\n",
-       "      <td>17.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>22.6</td>\n",
-       "      <td>9</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3169</th>\n",
-       "      <td>0</td>\n",
-       "      <td>116</td>\n",
-       "      <td>9</td>\n",
-       "      <td>[13.4, 17.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....</td>\n",
-       "      <td>17.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>22.6</td>\n",
-       "      <td>9</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3170</th>\n",
-       "      <td>0</td>\n",
-       "      <td>117</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[26.5, 88.1]</td>\n",
-       "      <td>[27.3, 36.6, 12.3, 14.0, 50.8, 23.3, 19.7, 53....</td>\n",
-       "      <td>88.1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>12.3</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>50.20</td>\n",
-       "      <td>1</td>\n",
-       "      <td>37.90</td>\n",
-       "      <td>37.90</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3171</th>\n",
-       "      <td>0</td>\n",
-       "      <td>117</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[26.5, 72.8]</td>\n",
-       "      <td>[27.3, 36.6, 87.9, 14.0, 50.8, 23.3, 19.7, 53....</td>\n",
-       "      <td>72.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>14.0</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>43.40</td>\n",
-       "      <td>1</td>\n",
-       "      <td>29.40</td>\n",
-       "      <td>29.40</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "      rnd  period  step          bids  \\\n",
-       "3152    0     115     2  [64.8, 72.8]   \n",
-       "3153    0     115     3  [18.1, 17.8]   \n",
-       "3154    0     115     4  [13.4, 17.8]   \n",
-       "3155    0     115     5  [13.4, 17.8]   \n",
-       "3156    0     115     6  [13.4, 17.8]   \n",
-       "3157    0     115     7  [22.0, 17.8]   \n",
-       "3158    0     115     8   [nan, 17.8]   \n",
-       "3159    0     115     9   [nan, 17.8]   \n",
-       "3160    0     116     0  [43.5, 88.1]   \n",
-       "3161    0     116     1  [43.5, 72.8]   \n",
-       "3162    0     116     2  [94.5, 17.8]   \n",
-       "3163    0     116     3  [41.5, 17.8]   \n",
-       "3164    0     116     4   [4.8, 17.8]   \n",
-       "3165    0     116     5   [4.8, 17.8]   \n",
-       "3166    0     116     6   [4.8, 17.8]   \n",
-       "3167    0     116     7  [13.4, 17.8]   \n",
-       "3168    0     116     8  [13.4, 17.8]   \n",
-       "3169    0     116     9  [13.4, 17.8]   \n",
-       "3170    0     117     0  [26.5, 88.1]   \n",
-       "3171    0     117     1  [26.5, 72.8]   \n",
-       "\n",
-       "                                                   asks  current_bid  \\\n",
-       "3152  [27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 19.7, 53....         72.8   \n",
-       "3153  [27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....         18.1   \n",
-       "3154  [27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....         17.8   \n",
-       "3155  [27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....         17.8   \n",
-       "3156  [27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....         17.8   \n",
-       "3157  [27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....         22.0   \n",
-       "3158  [27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....         17.8   \n",
-       "3159  [27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....         17.8   \n",
-       "3160  [27.3, 36.6, 12.3, 14.0, 50.8, 23.3, 19.7, 53....         88.1   \n",
-       "3161  [27.3, 36.6, 87.9, 14.0, 50.8, 23.3, 19.7, 53....         72.8   \n",
-       "3162  [27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 19.7, 53....         94.5   \n",
-       "3163  [27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....         41.5   \n",
-       "3164  [27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....         17.8   \n",
-       "3165  [27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....         17.8   \n",
-       "3166  [27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....         17.8   \n",
-       "3167  [27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....         17.8   \n",
-       "3168  [27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....         17.8   \n",
-       "3169  [27.3, 36.6, 87.9, 31.5, 50.8, 23.3, 68.7, 53....         17.8   \n",
-       "3170  [27.3, 36.6, 12.3, 14.0, 50.8, 23.3, 19.7, 53....         88.1   \n",
-       "3171  [27.3, 36.6, 87.9, 14.0, 50.8, 23.3, 19.7, 53....         72.8   \n",
-       "\n",
-       "      current_bid_idx  current_ask  current_ask_idx    buy   sell  price  \\\n",
-       "3152                1         19.7                6   True   True  46.25   \n",
-       "3153                0         22.1                8   True  False  22.10   \n",
-       "3154                1         22.6                9  False  False    NaN   \n",
-       "3155                1         22.6                9  False  False    NaN   \n",
-       "3156                1         22.6                9  False  False    NaN   \n",
-       "3157                0         22.6                9   True  False  22.60   \n",
-       "3158                1         23.3                5  False  False    NaN   \n",
-       "3159                1         23.3                5  False  False    NaN   \n",
-       "3160                1         12.3                2   True   True  50.20   \n",
-       "3161                1         14.0                3   True   True  43.40   \n",
-       "3162                0         19.7                6   True   True  57.10   \n",
-       "3163                0         22.1                8   True   True  31.80   \n",
-       "3164                1         22.6                9  False  False    NaN   \n",
-       "3165                1         22.6                9  False  False    NaN   \n",
-       "3166                1         22.6                9  False  False    NaN   \n",
-       "3167                1         22.6                9  False  False    NaN   \n",
-       "3168                1         22.6                9  False  False    NaN   \n",
-       "3169                1         22.6                9  False  False    NaN   \n",
-       "3170                1         12.3                2   True   True  50.20   \n",
-       "3171                1         14.0                3   True   True  43.40   \n",
-       "\n",
-       "      sale  bprofit  sprofit  \n",
-       "3152     1    26.55    26.55  \n",
-       "3153     1    42.70     0.00  \n",
-       "3154     0     0.00     0.00  \n",
-       "3155     0     0.00     0.00  \n",
-       "3156     0     0.00     0.00  \n",
-       "3157     1    25.30     0.00  \n",
-       "3158     0     0.00     0.00  \n",
-       "3159     0     0.00     0.00  \n",
-       "3160     1    37.90    37.90  \n",
-       "3161     1    29.40    29.40  \n",
-       "3162     1    37.40    37.40  \n",
-       "3163     1    33.00     9.70  \n",
-       "3164     0     0.00     0.00  \n",
-       "3165     0     0.00     0.00  \n",
-       "3166     0     0.00     0.00  \n",
-       "3167     0     0.00     0.00  \n",
-       "3168     0     0.00     0.00  \n",
-       "3169     0     0.00     0.00  \n",
-       "3170     1    37.90    37.90  \n",
-       "3171     1    29.40    29.40  "
-      ]
-     },
-     "execution_count": 133,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.tail(20)"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "d70b5274",
-   "metadata": {},
-   "source": [
-    "# Graph"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 130,
-   "id": "3df4277c",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "def graph(demand_schedule, supply_schedule, P_grid, p_eqbm, q_eqbm, \n",
-    "                        period_bids, period_asks, period_prices, period_sales, \n",
-    "                        redemption_values, token_costs, ntokens, nbuyers, nsellers, nsteps):\n",
-    "    plt.plot(demand_schedule, P_grid, label = 'Demand Curve')\n",
-    "    plt.plot(supply_schedule, P_grid, label = 'Supply Curve')\n",
-    "    plt.plot(period_prices, color='green', linestyle='--', label='Mean Real Prices')\n",
-    "    plt.axhline(y=np.nanmean(p_eqbm), color='black', linestyle='--', label='Mean Eqbm Prices')\n",
-    "    prices = []\n",
-    "    for i in range(nsteps):\n",
-    "        if (period_prices[i] > 0):\n",
-    "            plt.scatter([period_sales[i]]*len(period_bids[i]), period_bids[i], s = 10, marker = 'x', c = 'red')\n",
-    "            plt.scatter([period_sales[i]]*len(period_asks[i]), period_asks[i], s = 10, marker = 'o', c = 'blue')\n",
-    "        else:\n",
-    "            pass  \n",
-    "    plt.legend()\n",
-    "    text_content = f'q*={q_eqbm}, mean(q)={np.round(np.nanmax(period_sales),1)},p*={np.round(p_eqbm,1)}, mean(p)={np.round(np.nanmean(period_prices),1)}'\n",
-    "    plt.title(text_content)\n",
-    "    #plt.xlim(0,5*1.2)\n",
-    "    #plt.ylim(0,5*3.0)\n",
-    "    plt.show()\n",
-    "    \n",
-    "    plt.plot(period_bids, c = 'r', linestyle='--')\n",
-    "    plt.plot(period_asks, c = 'b', linestyle='--')\n",
-    "    plt.scatter(range(nsteps), period_prices, c = 'g')\n",
-    "    plt.title('Bids (red), Asks (blue) and Prices (green) over trading steps')\n",
-    "    plt.show()\n",
-    "\n",
-    "def graph_period(db, rnd, period):\n",
-    "    period_bids = list(db.get_period(rnd, period).bids)\n",
-    "    period_asks = list(db.get_period(rnd, period).asks)\n",
-    "    period_prices = list(db.get_period(rnd, period).price)\n",
-    "    period_sales = np.cumsum(np.where(db.get_period(rnd, period).price > 0,1,0))\n",
-    "    [_, demand_schedule, supply_schedule, P_grid, redemption_values, token_costs, p_eqbm, q_eqbm] = db.get_round(rnd).iloc[0].tolist()\n",
-    "    graph(demand_schedule, supply_schedule, P_grid, p_eqbm, q_eqbm, period_bids, period_asks, period_prices, period_sales, redemption_values, token_costs, db.ntokens, db.nbuyers, db.nsellers, db.nsteps)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 131,
-   "id": "c42d8883",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 1)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 132,
-   "id": "d96239c9",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db,0,199)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 65,
-   "id": "26e790fb",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAzYAAAKrCAYAAAAjwBhoAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjYuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8o6BhiAAAACXBIWXMAAA9hAAAPYQGoP6dpAACvi0lEQVR4nOzdd3xTZfvH8e9J2nTSRQtlyR4KyBYEFQXcCuIABZX5Ux/c43H7ACKPE9xbpgqKCLgXwwGKgoog+sgeMgulLd0Z5/dHTNrSpLSlIU37eb9evDTJ1dMrV05Oc+W+z30M0zRNAQAAAEAIswQ7AQAAAAA4VjQ2AAAAAEIejQ0AAACAkEdjAwAAACDk0dgAAAAACHk0NgAAAABCHo0NAAAAgJBHYwMAAAAg5NHYAAAAAAh5NDYot5kzZ8owDM2cObPcPzNy5EgZhqFt27YFJKfCwkK1bt1aF1xwQUC2X16GYejMM88scd8tt9yixMREHThwIDhJVYKv53E8bNiwQTabTU888USJ+88880wZhlGhbQXrOUydOlXh4eH63//+d9x/97Fq1qyZmjVrFrTfH6zXrCpUl2NQsITyfl9Tbdu2TYZhaOTIkSXuD/TfY6A6oLGppQzDKPUvIiJCzZo104gRI/Tnn38GO8Vyee6557Rp0yY98sgjwU6llPvvv18FBQWaMGFCQLb/9ttve1+7L7/8MiC/43i54447VLduXd10003BTqXS/vWvfyklJUV33XVXsFMJuGbNmpU4dlgsFiUkJKh379568cUX5XA4gp3icVOdj0HHQ23a78sSys15qAj2FzAIDWHBTgDBNX78eO//Z2Zm6qefftLs2bP1/vvva/ny5ercubP38cGDB6tXr15q0KBBEDItLScnR5MnT9bZZ5+trl27BjudUlJTUzVy5Ei9+uqruvvuu3XCCSdU6fZfe+01GYYh0zT12muv6ZxzzqnS7R8v33//vT755BNNnjxZ0dHRwU6n0qKionTbbbfpnnvu0ffff6/evXsHO6WAu/XWW5WQkCCn06mtW7fq/fff1w8//KAlS5ZowYIF5d7On3/+GZKvfXU/Bh0PtXG/D1WPPvqo7r33XjVq1CjYqQABw4hNLTdhwgTvv6efflorVqzQTTfdpJycHD3zzDMlYuPj49WuXTvFx8cHJ9kjzJkzRxkZGaWG26uTESNGyOFw6LXXXqvS7f7111/69ttv1b9/f3Xr1k0ffvih9u3bV6W/43h58cUXZbFYdO211wY7lWN29dVXy2Kx6KWXXgp2KsfFbbfdpgkTJmjSpEl66623tHr1akVFRWnhwoX65ptvyr2ddu3aVXnjfzyEwjHoeKht+32oatCggdq1a6fw8PBgpwIEDI0NSvF885+Wllbi/rLOsVm8eLFOP/10xcTEKCkpSZdcckmZc64//PBD9e/fXw0aNFBERIQaNmyovn37VugP47Rp02Sz2XTJJZeUemzChAkyDENff/215syZo549eyo2NrbEMHZubq4effRRde7cWTExMYqNjdWpp56quXPn+vx9hYWFmjRpklq2bKmIiAg1b95cDz74oAoKCvzm2LNnTzVr1kzTp0+XaZrlfm5H8/rrr0uSRo0apZEjR8put/s996mwsFDPPfecunbtqsTEREVHR6tZs2YaNGiQFi9eXK7f9+STT8pisahPnz5KT0+vsu1mZWVp/vz56t27txo3buw3rqCgQA8++KCaN2+uiIgItWzZUhMnTlRhYWG5fk9Zc8u//vprGYbhc8pgenq67rvvPp144omKiopSfHy8+vfv73fqX8OGDXXGGWdo/vz5ysrKKlduhYWFeuGFF3TBBReoadOmioiIUFJSkgYMGKDPPvvM5894pmTk5OTo3//+t0444QRFRESoVatWevzxx33ua6Zp6oUXXlD79u0VGRmpRo0a6aabblJmZma58iyP9u3be6fj/PTTT5JKHjc+//xznXnmmYqPjy9x7pS/aTxOp1OvvPKK+vTpo/j4eEVFRalVq1YaO3asNm7cWCLW4XDopZdeUq9evRQXF6fo6Gh16dJFL7zwglwuV6ltB/oYJEl79uzRqFGjVK9ePUVFRalz586aNWuW333Oc05ZYWGhHn74YbVt21YRERElGqe///5bN910k1q0aKGIiAjVrVtXAwcO1KpVq3zmUJG6FD83Y9u2bbryyiuVnJysyMhIde/eXR9//LHP31GZ/V6SXC6XXnnlFfXo0UOxsbGKiYlRjx499PLLL5fIbdeuXbJarerSpYvfbZ1//vkyDEO///57ift//PFHXX755UpNTZXNZlOTJk10/fXXa/fu3aW2UZ76H8mzf0vSN998U2KKpuf1LV7XDRs2aOjQoapXr54sFou+/vprSdLPP/+sW2+9VZ06dVJSUpIiIyPVunVr3XnnnTp06JDP33348GHdcccdaty4sSIjI9WuXTtNnTrV5/4u+T4OVvY1z8zM1G233Vbqd2/ZssXn+T3+mKapWbNmqXfv3kpJSVFkZKSaNGmic889V++++66komP09u3btX379hI1PvL3/O9//9PIkSPVpEkT2Ww21a9fX8OGDdNff/3ltx5btmzR1KlT1a5dO0VGRqpx48a6/fbbfe7La9eu1VVXXaVmzZopIiJCKSkp6tq1q2677TbZ7fZyPWcEFlPRUIrnQ2n37t3LFT9//nwNHTpUNptNQ4cOVYMGDbR8+XKdeuqpOvnkk0vFv/baa7r++uuVmpqqiy++WMnJydq/f7/Wrl2rGTNmaNy4cUf9nZmZmVq9erV69OhR5hSWKVOm6KuvvtLFF1+ss846y/shLiMjQ/369dOvv/6qrl27avTo0XK5XPriiy80bNgwrV+/vsScedM0NWTIEH3wwQdq2bKlbrrpJhUWFmr69Olat25dmbn26dNHb7/9ttavX68OHToc9bkdTWFhoWbNmqX4+HgNHjxYeXl5uvPOO/XGG2/o7rvvLnWy/ciRIzV37lx16NBB1157raKiorR7924tX75cn3/+uQYMGOD3d7lcLt122216/vnndemll+rtt99WZGTkMW/X49tvv1VhYaFOO+20MuOGDBmiVatW6fLLL1d4eLg++OADTZgwQatXr9aHH35Y4QUGymP79u0688wztW3bNp1++uk677zzlJOTo48//ljnnXeeXn31Vf3f//1fqZ/r06ePvv76a3377be66KKLjvp70tPTdeutt6p37946++yzlZKSoj179uijjz7SBRdcoNdff11jx44t9XN2u13nnnuudu/erfPPP19hYWFatGiR7r33XuXn55eYZiq5R1eee+45NWjQQNddd523jj/++KMKCwtls9kqX6xiPE3Vka/J/Pnz9fnnn+v888/XDTfcoO3bt5e5ncLCQl100UX66quv1KRJEw0bNkxxcXHatm2bFi5cqNNOO02tW7f21uLiiy/WF198obZt22rYsGGKjIzUsmXLdPPNN+vHH3/Um2++6d328TgG7d+/X6eeeqq2b9+uM844Q71799bevXs1bty4o04bveyyy7Rq1Sqdf/75uuSSS1SvXj1J0i+//KJzzjlH6enpOvfcc3XppZfqwIEDWrRokU477TQtXLiwxCIGFa2Lx/bt23XKKaeoRYsWuuaaa5Senq53333X+6XFWWedVepnKrrfS9I111yjOXPmqEmTJho7dqwMw9DChQs1btw4LV++XG+//bYkqVGjRhowYIC+/PJLrVu3Th07diyxnT179uirr75St27dShxjp0+fruuuu04REREaOHCgmjRpoo0bN+qNN97QRx99pJUrV/ocKfRXf186d+6s8ePHa+LEiWratGmJD9pHNuubN29Wz5491aZNGw0fPlx5eXmKi4uT5P6yauHCherbt68GDBggl8uln3/+WVOnTtVnn32mH3/8UXXq1PFuq6CgQP3799eqVavUqVMnDR8+XBkZGZo0aVKFRks9KvKa5+fnq1+/fvrll1/UpUsXDR8+XJmZmZo8ebK+++67Cv3eBx54QI8++qiaN2+uIUOGKD4+Xnv27NGqVav03nvvaejQoWrWrJnGjx/vnUVy2223eX+++HT5zz//XJdeeql3v2/VqpX+/vtvLViwQJ988omWLVvmc8ro7bffrm+//VZDhgzRoEGD9MUXX+iZZ57Rd999p+XLl3v/5q1du1Y9e/aUYRgaOHCgmjdvrqysLG3atEkvvfSSHnnkEUbDqgMTtZIkU5I5fvx477/bb7/dPO2000zDMMyLLrrIzMrKKvEzM2bMMCWZM2bM8N53+PBhMykpyQwLCzNXrVpVIv62227z/p6tW7d67+/atatps9nMffv2lcorLS2tXPl/9tlnpiTzpptu8vn4+PHjTUlmdHS0+csvv5R6fMSIEaYk8/HHHy9xf15ennnuueeahmGYv/76q/f+t99+25Rk9urVy8zLy/Pef/DgQbNFixamJLNv374+c3nmmWdMSeaLL75Yrud2NHPnzjUlmdddd533vssuu8yUZC5evLhEbEZGhmkYhtmtWzfT4XCU2taBAwdK3C7+PPLy8sxLL73UW2en01np7fpzzz33mJLM+fPn+3y8b9++piSzdevWZnp6uvf+vLw8s1evXqYkc/bs2X6fg4fn9S6+H3osW7bM+1448ncbhmHOnTu3xP2HDh0yO3XqZEZGRpp79+4ttb1FixaZksx///vfZTzzIvn5+ebOnTtL3Z+RkWG2b9/eTExMNHNzc0s81rRpU1OSef7555d4bN++fWZ8fLwZHx9vFhYWeu9fsWKFKcls2bKlefDgQe/9xevYtGnTcuVb/PcfWc/ff//djIqKMiWZ3377rWmaRccNwzDMzz77zOf2fL1m9913nynJvPjii838/PwSj+Xn55v79+/33va832+66aYS+6PD4TBHjx5tSjIXLVrkvf94HIM8v/fuu+8ucf+aNWtMm83md5+TZHbs2LFUHna73WzZsqUZERFhfv311yUe27Vrl9mwYUMzNTW1RK0qWpetW7d6j9kTJkwo8Ts+//xz7z7nS0X3+zlz5piSzC5dupiHDx/23p+dnW1269bNlGS+/fbbpeLvvPPOUtt64oknTEnmc889573vr7/+MsPDw82WLVuaf//9d4n4xYsXmxaLxbzkkktK3F9W/Y+mrL8Bxet63333+YzZtm2bz2PpG2+8YUoyH3vssRL3T5482ZRkXnrppSWOzVu2bDETExNNSeaIESNK/Iyv42BlXvOHH37YlGReeeWVpsvl8t6/Y8cOMzk52efv9icpKcls1KiRmZOTU+qxI1+Dpk2b+j1OpaenmwkJCWbdunXN9evXl3hs3bp1ZkxMjNmlS5cS93vqUbduXXPbtm3e+51Op/dv38MPP+y9/4477ij1nin++4u/DggeGptaynMg8/XvpJNOKvEHxcNXY/PWW2+Zksxrr722VHxGRoYZHx/vs7GJjo4u8UG1ol599VVTkjl58mSfj3v+oN92222lHjtw4IBptVrN7t27+/zZNWvWlPoDPWDAAFOSuXTp0lLxnrr4+6P2zjvvmJLMe+65pxzP7Oj69etnSjK///57730fffSRKckcMmRIidjMzExTktm7d+8Sf4D88TyPgwcPmn369DENwyjV/FVmu/5cddVVpiRzxYoVPh/3fNA4snkxzaKG5Mwzz/T5HIqraGPj2Qcuv/xyn3l5PsT5alZXrlxpSjKHDh3q82crYsqUKaYk85tvvilxv6ex2LhxY6mfufbaa01J5rp167z3jR071pRkTp8+vVS85/lXprG59dZbzfHjx5sPPvigOXz4cG9TM3jwYG+s5/1x5IfI4o58zRwOhxkfH29GRUWZu3btKjMXp9NpJiUlmampqabdbi/1+KFDh0zDMMwrrrjCe1+gj0EFBQVmVFSUGR8fX+oLItMsej38NTa+Pjh59rm77rrLZz6eL1A++eQT0zQrVxfPh9ymTZv6/JB9wgknmHXr1vX5+yu6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rpKTk0ssmuDZvuRuAsp6/r6+rQ/EYiRlbXf16tVauHChBgwYoL/++kszZszQo48+qgkTJug///lPqdUfK/t3tyoc6759JKvVqttuu02//fab9u3bp/fff1+DBw/Whx9+qPPOO6/MVUeL89Tkt99+K/P1PrIBLitnTx2Ljx6deuqp+vjjj3Xo0CGtWLFCDz30kPbt26dhw4aVezVQBBaNDXzyTGPx9+2ch2eFEV+rsGRmZmrNmjVl/nxCQoJ35aeRI0cqPT1d33777VHz86y2VtaS0v6ccsopslgsFVq9pWvXrnK5XFq+fHmpxzzLdfrjybH46i2V8cEHH2j//v1q27atxowZ4/NfixYttGHDBr+r4jRp0kTDhw/XF198oVatWmn58uU+P5hdffXVeuedd7R7926dccYZ3mF8f8q73SOV93X09XyWL18up9NZ5hKwHp7pQjt37iz12OrVq0vd16tXL0mq8Ao/UsVf702bNikpKcnnlJzKrG7kS1nvU08dq5N27dopISFBa9eu9bksr6/YlStXVmq51UAcg9q1a6eoqCitXbtWhw8fLvW4r+PI0VR0nzzWulRURff7Ll26yOVy+az1t99+K6fT6XMFqxEjRig/P1/vvvuuPvnkEx04cEDDhg0rNZp+LO/hyrBYLJV+H23atEmSNHDgQO+Iq8dPP/3kHQ3zqFOnjlq1aqVdu3Zp8+bNpbZ3tL9JxyIuLk4tWrTQrl27fC6fX5l926NevXq69NJLNW/ePPXr10+bN28usXy31Wr1W+Njeb19HRe3bNminTt3qlmzZj5HsyIiItS7d289/PDDeu655yS5/0Yj+GhsUMqiRYu0detWhYeHH/Uq0oMGDVJiYqLmzJlT6gPihAkTfF4jY9myZT6vs+GZdlCeczTat2+vlJQUrVy58qixR6pXr56GDx+u1atXa9KkST4PlJs3by7xTeaoUaMkuZemLD71JD093e/8dY+VK1fKarXqjDPOKHG/Z23+o52j4+G5yOfDDz+sN954w+e/+++/v0RsWlqaz+Woc3JylJ2drbCwML/L/F5++eWaP3++Dhw4oL59+2r9+vXex45lu8V5nvvRXsdJkyaVOGckPz9f9913n6Si16YsnjnzR45mrVu3znueSHHdu3fX6aefrgULFmj69Ok+t7lu3Tqf0+A8z8XXkri+NGvWTOnp6Vq7dm2J+6dNm6YvvviiXNs4Gs/UxcmTJ3uvQySVrGN1YrVaNW7cOOXl5emGG24o9a1tYWGhd1QlLCxMN998s/bs2aNbbrml1IdAyb0c8B9//OG9HehjkGfp+8zMzFLHh99++02zZ88+6vaPNGjQILVs2VIvvviiPv30U58xP/zwg3JzcyVVri7HoqL7/ejRoyW5R589OUvu64vde++9kqQxY8aU+rlrr71WFotFs2fP9tbR1zVTbrrpJoWHh+v222/3+cVMYWFhlTY9devW9fnFSXl4pnMe2ZDs379fN954o8+fGTVqlFwul+65554SX0Bu3brV+0E7UK699lq5XC7dd999Jd5HO3fuLHVh77IUFBRoxYoVpe632+3e41Tx92LdunWVlpbmc18eNWqUEhISNHHiRO81tIpzuVx+G75nn322xPLzLpdL//73v+VyuUr8ffn+++99/m7PiE9Fzi9F4HCOTS1X/CS7nJwc/fHHH96LAv73v/896nzZ2NhYvfbaaxo6dKhOP/30Etex+f3333XGGWeU+kZu8ODBio2NVa9evdSsWTOZpqnvvvtOq1atUrdu3cp1/RPDMDR48GC99tprWr9+vdq3b1+h5/3CCy9o48aN+s9//qM333xTp512murXr6/du3frzz//1KpVqzR37lw1b95cknTVVVfp3Xff1YcffqgOHTpo0KBBstvtmj9/vnr06OHzWzPJPWr1008/qX///qVOhvT8MTryGzpftm7dqsWLFys5OdnvxQAl9zzt2267Te+//76ef/557dq1S126dFHHjh118sknq0mTJsrKytLHH3+svXv36pZbbvF5crPHwIED9cEHH2jw4ME688wztXjxYnXq1OmYt+vRoUMHtW3bVkuWLJHT6fR7EvuJJ56o9u3bl7iOzebNm3XhhRfqmmuuOervGTRokFq3bq25c+fq77//Vs+ePbVjxw598MEHGjRokObNm1fqZ+bMmaN+/fppzJgxeu6559SzZ08lJCTo77//1tq1a/X777/rhx9+KDH1xuVyafHixWrbtm25r1l022236YsvvtBpp53mvY7D6tWrtXz5cm9zeaz69Omjm2++Wc8//7w6dOhQoo6JiYlq0KDBMf+OqjZ+/Hj9+OOP+uijj9SmTRtddNFFqlOnjnbu3Kkvv/xSTz75pPcD7UMPPaTffvtNr7zyij766CP169dPjRo10v79+7Vx40atWLFCkydP9p40fDyOQY899piWLl2qJ554Qj/++KN69+6tPXv2aN68ebrgggu0aNEi7xTJ8ggPD9eCBQt07rnn6sILL1Tv3r3VuXNnRUdHa+fOnVq1apW2bNmiPXv2eD9gVbQulVWZ/X7YsGH64IMPNG/ePLVv316XXHKJDMPwfrE2dOhQDR8+vNTPNWnSRGeddZaWLFmisLAwdezY0eeobbt27TR9+nSNHj1a7du313nnnac2bdrIbrdrx44d+u6775SSklKpUX9f+vfvr3feeUcXX3yxunbtqvDwcJ1xxhmlvtDypUePHurTp48WLFig3r1767TTTtO+ffv02WefqW3btj4X0Ljzzju1aNEivf/+++ratavOPfdcZWRkaN68eTrjjDP04YcfVsnz8uXuu+/WokWL9M477+ivv/7SOeeco8zMTO/vLu++nZeXp9NOO02tWrVSt27d1LRpU+Xn5+urr77Sn3/+qYEDB+rEE0/0xnuu23PeeefpjDPOUEREhDp16qSLL75YdevW1fz58zV48GD16tVL/fv3V/v27WUYhnbu3KkffvhBBw8e9HlOXJ8+fdS5c2cNHTpU8fHx+uKLL/Tbb7+pW7duuvvuu71xTzzxhJYuXarTTz9dzZs3V2xsrNavX6/PPvtMiYmJuu6666qmwDg2VbfAGkKJfCzzbLVazdTUVHPgwIHml19+WepnfC337PHll1+affr0MaOiosyEhARz4MCB5p9//ulzecmXX37ZvOSSS8zmzZubUVFRZmJiotm5c2fz8ccf97k0qj+eJXmPvE6EaRYtd7ls2TK/P19QUGA+//zz5qmnnmrGxcWZNpvNbNKkidmvXz/z6aefLnUtloKCAnPixIlm8+bNTZvNZjZt2tS8//77zfz8fL9LfXqWhF24cGGpxzzLU77++utHfa7333+/Kcm8/fbbjxr7f//3f6Ykc+rUqeahQ4fMiRMnmmeddZbZsGFD02azmampqWbfvn3NOXPmlFqq2d/zWLZsmRkbG2smJiaaP/30U4W3WxZPHT799NNSj3mWX83PzzcfeOABs1mzZqbNZjObN29uTpgwwecSof6ew44dO8whQ4aYiYmJZmRkpNm9e3fz/fff93sdG9M0zaysLHPy5Mlm165dzZiYGDMyMtJs1qyZecEFF5ivvvqqmZ2dXSL+iy++MCWZTz/9dLmfv2m6l+vu2bOnGRsba8bHx5tnn322+c033/h9z5W17Km/fd/lcpnPP/+82a5dO9Nms5kNGjQwx40bZ2ZkZJS5PV/8XcfGl7KOGx7+XjO73W4+//zzZo8ePcyYmBgzOjrabNWqlfl///d/pZa6drlc5uzZs81+/fqZiYmJZnh4uNmwYUOzT58+5uTJk80dO3Z4Y4/HMcg0TfPvv/82r732WjM5OdmMjIw0O3XqZM6cOdN87733fO4nnv29LPv27TPvueces3379mZUVJQZExNjtmrVyrzsssvMN998s9TSzhWpi2fpX39L9frLr7L7vdPpNF988UWzW7duZlRUlBkVFWV27drVfOGFF8q8Jsibb77p/bv11FNPlfk71q5da44YMcI84YQTTJvNZiYmJprt27c3r7vuOnPJkiXlen7lsW/fPvOqq64y69WrZ1oslhLHlKPV1TTd10T717/+ZTZt2tSMiIgwW7RoYd53331mTk6O3/dnZmamefvtt5sNGzY0IyIizLZt25pPPfWUuXnz5gov91zR1/zQoUPmzTffbDZo0MC02Wze3/3jjz96l4I/msLCQvPxxx83zzvvPLNJkyZmRESEmZycbPbs2dN8+eWXzYKCghLx2dnZ5g033GA2atTItFqtPvPeunWreeONN5qtWrUyIyIizDp16pht27Y1r7766lJ/hz312Lx5s/nUU0+Zbdu2NSMiIsyGDRuat956q5mZmVki/osvvjBHjhxpnnjiiWZcXJwZHR1ttmnTxrz55ptLXAcHwWWYpo/xeCBEnHvuuVq7dq22bNlSJauOVbXu3bsrOztb69evLzUacemll2rVqlXavHlzlV31PRRlZWWpZcuW6t27d8jPUb7sssv0zTffaPPmzRVerhShqTLHoAceeED//e9/9fnnn+vcc88NcIaBx34Pj9dff13XXXedXnnlFV1//fXBTqdMI0eO1KxZsyq0uiOqP86xQUh76qmnlJaWppdeeinYqZSyaNEi/fzzz3rqqadKNTXmP1Nf7rzzzlrd1Ejuk1EnTpyoDz/8UD///HOw06m0X3/9VQsXLtSECRP4cFeLlHUM8rXwwbp16/Tcc88pKSnJ54pcoYb9vnbytW/v2LFDkyZNUlhYmC6++OIgZAVwjg1CXMeOHTV9+nSfKw8FW15enp5+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\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 199)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "d942282d",
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "82b55c8a",
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3 (ipykernel)",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.10.13"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 5
-}
diff --git a/code/3_deep_reinforcement_learning/.ipynb_checkpoints/6_REINFORCE-checkpoint.ipynb b/code/3_deep_reinforcement_learning/.ipynb_checkpoints/6_REINFORCE-checkpoint.ipynb
deleted file mode 100644
index 363fcab..0000000
--- a/code/3_deep_reinforcement_learning/.ipynb_checkpoints/6_REINFORCE-checkpoint.ipynb
+++ /dev/null
@@ -1,6 +0,0 @@
-{
- "cells": [],
- "metadata": {},
- "nbformat": 4,
- "nbformat_minor": 5
-}
diff --git a/code/3_deep_reinforcement_learning/.ipynb_checkpoints/7_PPO_A2C-checkpoint.ipynb b/code/3_deep_reinforcement_learning/.ipynb_checkpoints/7_PPO_A2C-checkpoint.ipynb
deleted file mode 100644
index 18c8c46..0000000
--- a/code/3_deep_reinforcement_learning/.ipynb_checkpoints/7_PPO_A2C-checkpoint.ipynb
+++ /dev/null
@@ -1,1184 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "code",
-   "execution_count": 1,
-   "id": "6ce0ea75",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "from gymnasium import spaces\n",
-    "import numpy as np\n",
-    "from functions import *\n",
-    "from itertools import count\n",
-    "buyer_strategies = ['Honest', 'Random']\n",
-    "seller_strategies = ['Random', 'Random', 'Random', 'Random', 'Random', 'Random']\n",
-    "nbuyers, nsellers = len(buyer_strategies), len(seller_strategies)\n",
-    "nrounds, nperiods, ntokens, nsteps, gametype, nbuyers, nsellers = 1, 100, 4, 6, '1234', len(buyer_strategies), len(seller_strategies)\n",
-    "R1, R2, R3, R4 = gametype_to_ran(gametype)\n",
-    "game_metadata = [nrounds, nperiods, ntokens, nbuyers, nsellers, nsteps, R1, R2, R3, R4]\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "rnd = 0\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "period = 0\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.01\n",
-    "max_frac = 1.0"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 2,
-   "id": "87aeeb4c",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "class TradingEnv(gym.Env):\n",
-    "    def __init__(self, db, nsteps, render_mode = None):\n",
-    "        self.rnd = 0\n",
-    "        self.period = -1\n",
-    "        self.db = db\n",
-    "        self.action_space = spaces.Box(0,1,(1,),dtype=np.float)\n",
-    "        self.observation_space = spaces.Box(0,nsteps,(1,),dtype=np.float)\n",
-    "\n",
-    "    def reset(self):\n",
-    "        self.db.reset_period(self.rnd)\n",
-    "        self.timestep = 0\n",
-    "        self.period += 1\n",
-    "        observation = np.array([0])\n",
-    "        return observation, None\n",
-    "\n",
-    "    def step(self, action):\n",
-    "        [buyer.next_token() for buyer in self.db.buyers]\n",
-    "        [seller.next_token() for seller in self.db.sellers]\n",
-    "        bid_frac = action.item()\n",
-    "        # convert action to bid\n",
-    "        self.db.buyers[0].next_token()\n",
-    "        min_bid = self.db.buyers[0].value * min_frac\n",
-    "        max_bid = self.db.buyers[0].value * max_frac\n",
-    "        bid = np.round(max_bid * bid_frac + (1 - bid_frac) * min_bid, 2)\n",
-    "\n",
-    "        # simulate market\n",
-    "        bids = [buyer.ask(self.db) for buyer in self.db.buyers]\n",
-    "        bids[0] = bid\n",
-    "        asks = [seller.ask(self.db) for seller in self.db.sellers]\n",
-    "        current_ask, current_ask_idx, current_bid, current_bid_idx = current_bid_ask(bids, asks)\n",
-    "        sale, price, bprofit, sprofit, buy, sell = buy_sell(self.db, current_bid, current_bid_idx, current_ask, current_ask_idx)\n",
-    "        step_data = [self.rnd, self.period, self.timestep, bids, asks, current_bid, current_bid_idx, current_ask, current_ask_idx, buy, sell, price, sale, bprofit, sprofit]\n",
-    "        self.db.add_step(step_data)\n",
-    "\n",
-    "        # compute reward, new state\n",
-    "        reward = np.array([0])\n",
-    "        if sale == 1 and current_bid_idx == 0:\n",
-    "            reward = np.array([bprofit])\n",
-    "        observation = np.array([self.timestep + 1])\n",
-    "\n",
-    "        # check termination\n",
-    "        self.timestep += 1\n",
-    "        if self.timestep == nsteps - 1:\n",
-    "            terminated = True\n",
-    "            self.timestep = 0\n",
-    "        else:\n",
-    "            terminated = False\n",
-    "        return observation, reward, terminated, {}, {}"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 3,
-   "id": "56d7618c",
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 0, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [3], Action:[1.], Reward: [36.], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [4], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [5], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 1, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [5], Action:[0.9], Reward: [40.7], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 2, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [4], Action:[1.], Reward: [35.2], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [5], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 3, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [3], Action:[1.], Reward: [35.2], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [4], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [5], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 4, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [3], Action:[1.], Reward: [35.4], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [4], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [5], Action:[0.5], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 5, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [5], Action:[0.6], Reward: [54.3], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 6, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [2], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [4], Action:[0.6], Reward: [58.9], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [5], Action:[0.5], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 7, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [4], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [5], Action:[0.2], Reward: [67.2], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 8, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [4], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [5], Action:[0.], Reward: [76.6], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 9, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [2], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [5], Action:[0.5], Reward: [62.2], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 10, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [3], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [5], Action:[0.9], Reward: [32.5], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 11, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [2], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [3], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [4], Action:[0.8], Reward: [46.7], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [5], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 12, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [4], Action:[0.7], Reward: [51.1], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [5], Action:[0.], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 13, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [3], Action:[1.], Reward: [34.9], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [5], Action:[0.8], Reward: [36.6], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 14, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [2], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [4], Action:[0.9], Reward: [40.7], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [5], Action:[0.7], Reward: [39.7], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 15, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [4], Action:[0.9], Reward: [44.5], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [5], Action:[0.6], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 16, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [4], Action:[0.9], Reward: [42.7], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [5], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 17, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [2], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [3], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [4], Action:[0.7], Reward: [50.], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [5], Action:[0.8], Reward: [35.], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 18, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [3], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [4], Action:[0.8], Reward: [44.7], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [5], Action:[0.5], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 19, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [4], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [5], Action:[0.7], Reward: [48.2], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 20, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [3], Action:[0.8], Reward: [45.2], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [5], Action:[0.7], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 21, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [2], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [3], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [4], Action:[0.6], Reward: [56.4], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [5], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 22, New State: [1], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [4], Action:[0.5], Reward: [0], Period End: False\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 22, New State: [5], Action:[0.6], Reward: [54.4], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 23, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [3], Action:[1.], Reward: [34.1], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [4], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [5], Action:[0.9], Reward: [34.2], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 24, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [3], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [4], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [5], Action:[0.9], Reward: [40.3], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 25, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [5], Action:[0.], Reward: [68.9], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 26, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [2], Action:[1.], Reward: [39.3], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [3], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [4], Action:[0.9], Reward: [33.4], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [5], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 27, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [4], Action:[0.8], Reward: [44.4], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [5], Action:[0.8], Reward: [38.8], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 28, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [5], Action:[0.3], Reward: [69.9], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 29, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [3], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [4], Action:[0.9], Reward: [39.4], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [5], Action:[0.2], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 30, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [4], Action:[0.8], Reward: [45.7], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [5], Action:[0.2], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 31, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [3], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [4], Action:[0.8], Reward: [52.1], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [5], Action:[0.8], Reward: [36.8], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 32, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [5], Action:[0.9], Reward: [39.9], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 33, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [3], Action:[1.], Reward: [37.2], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [4], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [5], Action:[0.9], Reward: [34.1], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 34, New State: [1], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [2], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [3], Action:[0.9], Reward: [40.3], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [4], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [5], Action:[0.8], Reward: [40.], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 35, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [5], Action:[0.7], Reward: [51.], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 36, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [4], Action:[1.], Reward: [38.9], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [5], Action:[0.6], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 37, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [5], Action:[0.3], Reward: [69.1], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 38, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [5], Action:[0.9], Reward: [35.5], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 39, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [4], Action:[0.9], Reward: [39.7], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [5], Action:[0.7], Reward: [41.6], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 40, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [4], Action:[0.8], Reward: [47.2], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [5], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 41, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [4], Action:[0.8], Reward: [45.4], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [5], Action:[0.5], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 42, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [2], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [3], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [4], Action:[0.6], Reward: [53.1], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [5], Action:[0.7], Reward: [35.4], Period End: True\n",
-      "done\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 43, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [3], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [5], Action:[0.5], Reward: [61.], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 44, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [4], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [5], Action:[0.7], Reward: [47.4], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 45, New State: [1], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [5], Action:[0.6], Reward: [54.8], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 46, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [5], Action:[0.9], Reward: [41.7], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 47, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [3], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [5], Action:[0.4], Reward: [65.9], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 48, New State: [1], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [2], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [4], Action:[1.], Reward: [36.5], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [5], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 49, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [5], Action:[1.], Reward: [33.7], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 50, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [5], Action:[0.4], Reward: [62.1], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 51, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [3], Action:[0.9], Reward: [39.2], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [4], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [5], Action:[0.5], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 52, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [5], Action:[0.4], Reward: [63.2], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 53, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [4], Action:[0.7], Reward: [50.8], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [5], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 54, New State: [1], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [3], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [4], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [5], Action:[0.3], Reward: [68.2], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 55, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [3], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [4], Action:[0.8], Reward: [46.1], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [5], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 56, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [2], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [3], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [5], Action:[0.3], Reward: [61.5], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 57, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [4], Action:[0.8], Reward: [46.5], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [5], Action:[0.9], Reward: [27.9], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 58, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [2], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [4], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [5], Action:[0.4], Reward: [62.5], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 59, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [4], Action:[1.], Reward: [37.8], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [5], Action:[0.8], Reward: [32.6], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 60, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [4], Action:[0.9], Reward: [38.7], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [5], Action:[0.7], Reward: [42.8], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 61, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [4], Action:[0.5], Reward: [58.], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [5], Action:[0.5], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 62, New State: [1], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [5], Action:[0.6], Reward: [54.2], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 63, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [4], Action:[0.8], Reward: [48.6], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [5], Action:[1.], Reward: [27.3], Period End: True\n",
-      "done\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 64, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [3], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [4], Action:[0.9], Reward: [39.9], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [5], Action:[1.], Reward: [29.2], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 65, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [4], Action:[1.], Reward: [35.3], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [5], Action:[0.6], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 66, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [2], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [5], Action:[0.8], Reward: [45.], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 67, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [4], Action:[1.], Reward: [35.], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [5], Action:[0.8], Reward: [31.3], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 68, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [4], Action:[0.8], Reward: [42.7], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [5], Action:[0.5], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 69, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [3], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [5], Action:[0.1], Reward: [72.5], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 70, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [4], Action:[0.8], Reward: [47.3], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [5], Action:[0.7], Reward: [36.], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 71, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [3], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [4], Action:[0.8], Reward: [47.2], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [5], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 72, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [3], Action:[1.], Reward: [36.4], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [4], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [5], Action:[0.5], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 73, New State: [1], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [2], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [4], Action:[1.], Reward: [34.5], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [5], Action:[0.5], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 74, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [5], Action:[0.8], Reward: [46.5], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 75, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [2], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [3], Action:[0.8], Reward: [45.3], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [5], Action:[0.], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 76, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [3], Action:[1.], Reward: [35.7], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [4], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [5], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 77, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [5], Action:[0.2], Reward: [69.7], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 78, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [4], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [5], Action:[0.8], Reward: [43.3], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 79, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [3], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [4], Action:[0.5], Reward: [60.4], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [5], Action:[0.6], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 80, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [4], Action:[1.], Reward: [39.7], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [5], Action:[0.9], Reward: [33.6], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 81, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [5], Action:[0.1], Reward: [69.7], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 82, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [2], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [5], Action:[0.9], Reward: [37.], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 83, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [5], Action:[1.], Reward: [39.], Period End: True\n",
-      "done\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 84, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [2], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [3], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [5], Action:[0.9], Reward: [43.6], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 85, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [5], Action:[1.], Reward: [38.5], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 86, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [2], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [5], Action:[0.7], Reward: [44.1], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 87, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [3], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [4], Action:[0.7], Reward: [51.9], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [5], Action:[0.5], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 88, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [3], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [5], Action:[0.2], Reward: [68.7], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 89, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [2], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [4], Action:[0.9], Reward: [39.2], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [5], Action:[0.6], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 90, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [5], Action:[0.7], Reward: [47.8], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 91, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [4], Action:[1.], Reward: [35.6], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [5], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 92, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [2], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [3], Action:[0.8], Reward: [48.5], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [4], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [5], Action:[0.], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 93, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [3], Action:[0.8], Reward: [48.4], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [4], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [5], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 94, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [2], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [3], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [5], Action:[0.6], Reward: [52.4], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 95, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [5], Action:[0.5], Reward: [58.2], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 96, New State: [1], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [5], Action:[0.2], Reward: [70.6], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 97, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [2], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [3], Action:[0.9], Reward: [39.], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [5], Action:[0.2], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 98, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [5], Action:[0.8], Reward: [45.7], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 99, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [3], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [4], Action:[0.6], Reward: [51.4], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [5], Action:[0.2], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 100, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [5], Action:[0.9], Reward: [39.4], Period End: True\n",
-      "done\n"
-     ]
-    }
-   ],
-   "source": [
-    "env = TradingEnv(db, nsteps)\n",
-    "rnd = 0\n",
-    "observation, info = env.reset()\n",
-    "for period in count():\n",
-    "    for timestep in count(): \n",
-    "        action = env.action_space.sample()\n",
-    "        observation, reward, done, info, _ = env.step(action)\n",
-    "        print(f\"Rnd: {rnd}, Period: {period}, New State: {observation}, Action:{np.round(action,1)}, Reward: {np.round(reward,1)}, Period End: {done}\")\n",
-    "        if done:\n",
-    "            # If the episode is done, reset the environment\n",
-    "            print('done')\n",
-    "            observation, info = env.reset()\n",
-    "            timestep += 1\n",
-    "            break\n",
-    "    if period == nperiods:\n",
-    "        break\n",
-    "env.close()"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "55dfc29c",
-   "metadata": {},
-   "source": [
-    "### PPO + A2C"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 4,
-   "id": "ef7b34a2",
-   "metadata": {
-    "scrolled": true
-   },
-   "outputs": [
-    {
-     "ename": "TypeError",
-     "evalue": "TradingEnv.reset() got an unexpected keyword argument 'seed'",
-     "output_type": "error",
-     "traceback": [
-      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
-      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
-      "Cell \u001b[0;32mIn [4], line 24\u001b[0m\n\u001b[1;32m     21\u001b[0m random_model \u001b[38;5;241m=\u001b[39m A2C(MlpPolicy, env, verbose\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m0\u001b[39m)\n\u001b[1;32m     23\u001b[0m \u001b[38;5;66;03m# Evaluate the random policy agent\u001b[39;00m\n\u001b[0;32m---> 24\u001b[0m mean_reward_random, std_reward_random \u001b[38;5;241m=\u001b[39m \u001b[43mevaluate_policy\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrandom_model\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43menv\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mn_eval_episodes\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43meval_steps\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     25\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mRandom Policy mean_reward: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mmean_reward_random\u001b[38;5;132;01m:\u001b[39;00m\u001b[38;5;124m.2f\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m +/- \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mstd_reward_random\u001b[38;5;132;01m:\u001b[39;00m\u001b[38;5;124m.2f\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m     27\u001b[0m \u001b[38;5;66;03m# Create PPO model\u001b[39;00m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/common/evaluation.py:84\u001b[0m, in \u001b[0;36mevaluate_policy\u001b[0;34m(model, env, n_eval_episodes, deterministic, render, callback, reward_threshold, return_episode_rewards, warn)\u001b[0m\n\u001b[1;32m     82\u001b[0m current_rewards \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mzeros(n_envs)\n\u001b[1;32m     83\u001b[0m current_lengths \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mzeros(n_envs, dtype\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mint\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m---> 84\u001b[0m observations \u001b[38;5;241m=\u001b[39m \u001b[43menv\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mreset\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     85\u001b[0m states \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m     86\u001b[0m episode_starts \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mones((env\u001b[38;5;241m.\u001b[39mnum_envs,), dtype\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mbool\u001b[39m)\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/common/vec_env/dummy_vec_env.py:76\u001b[0m, in \u001b[0;36mDummyVecEnv.reset\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m     74\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mreset\u001b[39m(\u001b[38;5;28mself\u001b[39m) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m VecEnvObs:\n\u001b[1;32m     75\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m env_idx \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mrange\u001b[39m(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnum_envs):\n\u001b[0;32m---> 76\u001b[0m         obs, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mreset_infos[env_idx] \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43menvs\u001b[49m\u001b[43m[\u001b[49m\u001b[43menv_idx\u001b[49m\u001b[43m]\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mreset\u001b[49m\u001b[43m(\u001b[49m\u001b[43mseed\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_seeds\u001b[49m\u001b[43m[\u001b[49m\u001b[43menv_idx\u001b[49m\u001b[43m]\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     77\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_save_obs(env_idx, obs)\n\u001b[1;32m     78\u001b[0m     \u001b[38;5;66;03m# Seeds are only used once\u001b[39;00m\n",
-      "\u001b[0;31mTypeError\u001b[0m: TradingEnv.reset() got an unexpected keyword argument 'seed'"
-     ]
-    }
-   ],
-   "source": [
-    "import gymnasium as gym\n",
-    "import numpy as np\n",
-    "from stable_baselines3 import PPO, A2C\n",
-    "from stable_baselines3.ppo.policies import MlpPolicy\n",
-    "from stable_baselines3.common.base_class import BaseAlgorithm\n",
-    "from stable_baselines3.common.evaluation import evaluate_policy\n",
-    "\n",
-    "# Define your environment and parameters (replace with your actual environment setup)\n",
-    "rnd = 0\n",
-    "period = 0\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.01\n",
-    "max_frac = 1.0\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "env = TradingEnv(db, nsteps)\n",
-    "eval_steps = 100\n",
-    "training_step = 10000\n",
-    "\n",
-    "# Create PPO model\n",
-    "from stable_baselines3.ppo.policies import MlpPolicy\n",
-    "random_model = A2C(MlpPolicy, env, verbose=0)\n",
-    "\n",
-    "# Evaluate the random policy agent\n",
-    "mean_reward_random, std_reward_random = evaluate_policy(random_model, env, n_eval_episodes=eval_steps)\n",
-    "print(f\"Random Policy mean_reward: {mean_reward_random:.2f} +/- {std_reward_random:.2f}\")\n",
-    "\n",
-    "# Create PPO model\n",
-    "from stable_baselines3.ppo.policies import MlpPolicy\n",
-    "ppo_model = PPO(MlpPolicy, env, verbose=0)\n",
-    "\n",
-    "# Train the PPO agent for 10000 steps\n",
-    "ppo_model.learn(total_timesteps=training_step, progress_bar = True)\n",
-    "\n",
-    "# Evaluate the trained PPO agent\n",
-    "mean_reward_ppo, std_reward_ppo = evaluate_policy(ppo_model, env, n_eval_episodes=eval_steps)\n",
-    "print(f\"PPO mean_reward: {mean_reward_ppo:.2f} +/- {std_reward_ppo:.2f}\")\n",
-    "\n",
-    "# Create A2C model\n",
-    "from stable_baselines3.ppo.policies import MlpPolicy\n",
-    "a2c_model = A2C(MlpPolicy, env, verbose=0)\n",
-    "\n",
-    "# Train the A2C agent for 10000 steps\n",
-    "a2c_model.learn(total_timesteps=training_step)\n",
-    "\n",
-    "# Evaluate the trained A2C agent\n",
-    "mean_reward_a2c, std_reward_a2c = evaluate_policy(a2c_model, env, n_eval_episodes=eval_steps)\n",
-    "print(f\"A2C mean_reward: {mean_reward_a2c:.2f} +/- {std_reward_a2c:.2f}\")"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 61,
-   "id": "bcf11b97",
-   "metadata": {
-    "scrolled": true
-   },
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[0.76, 121.2]</td>\n",
-       "      <td>[44.5, 14.6, 19.3, 34.0, 34.0, 61.2]</td>\n",
-       "      <td>121.20</td>\n",
-       "      <td>1</td>\n",
-       "      <td>14.6</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>67.90</td>\n",
-       "      <td>1</td>\n",
-       "      <td>23.30</td>\n",
-       "      <td>55.60</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[0.76, 68.8]</td>\n",
-       "      <td>[40.6, 27.9, 17.4, 37.0, 24.9, 80.1]</td>\n",
-       "      <td>68.80</td>\n",
-       "      <td>1</td>\n",
-       "      <td>17.4</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>43.10</td>\n",
-       "      <td>1</td>\n",
-       "      <td>5.40</td>\n",
-       "      <td>29.20</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[0.76, 50.3]</td>\n",
-       "      <td>[49.5, 32.4, 41.1, 33.8, 35.7, 67.4]</td>\n",
-       "      <td>50.30</td>\n",
-       "      <td>1</td>\n",
-       "      <td>32.4</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>41.35</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1.95</td>\n",
-       "      <td>15.35</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[0.76, 48.9]</td>\n",
-       "      <td>[36.1, 52.4, 39.8, 29.4, 36.8, 56.3]</td>\n",
-       "      <td>48.90</td>\n",
-       "      <td>1</td>\n",
-       "      <td>29.4</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>39.15</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-0.35</td>\n",
-       "      <td>10.45</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[0.76, nan]</td>\n",
-       "      <td>[39.7, 40.3, 34.7, 52.3, 35.3, 57.6]</td>\n",
-       "      <td>0.76</td>\n",
-       "      <td>0</td>\n",
-       "      <td>34.7</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>34.70</td>\n",
-       "      <td>1</td>\n",
-       "      <td>41.80</td>\n",
-       "      <td>1.40</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>...</th>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8995</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1800</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[0.76, 110.4]</td>\n",
-       "      <td>[47.9, 17.5, 17.3, 30.1, 36.4, 78.3]</td>\n",
-       "      <td>110.40</td>\n",
-       "      <td>1</td>\n",
-       "      <td>17.3</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>63.85</td>\n",
-       "      <td>1</td>\n",
-       "      <td>27.35</td>\n",
-       "      <td>49.95</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8996</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1800</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[35.1, 58.9]</td>\n",
-       "      <td>[38.9, 13.5, 37.0, 33.6, 27.7, 62.7]</td>\n",
-       "      <td>58.90</td>\n",
-       "      <td>1</td>\n",
-       "      <td>13.5</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>36.20</td>\n",
-       "      <td>1</td>\n",
-       "      <td>12.30</td>\n",
-       "      <td>23.90</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8997</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1800</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[0.76, 64.5]</td>\n",
-       "      <td>[50.0, 34.5, 43.9, 42.9, 36.7, 68.3]</td>\n",
-       "      <td>64.50</td>\n",
-       "      <td>1</td>\n",
-       "      <td>34.5</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>49.50</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-6.20</td>\n",
-       "      <td>23.50</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8998</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1800</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[6.92, 56.7]</td>\n",
-       "      <td>[36.9, 53.4, 48.9, 32.6, 34.8, 74.4]</td>\n",
-       "      <td>56.70</td>\n",
-       "      <td>1</td>\n",
-       "      <td>32.6</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>44.65</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-5.85</td>\n",
-       "      <td>15.95</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8999</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1800</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[0.76, nan]</td>\n",
-       "      <td>[47.1, 41.6, 39.5, 51.2, 33.4, 64.6]</td>\n",
-       "      <td>0.76</td>\n",
-       "      <td>0</td>\n",
-       "      <td>33.4</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>33.40</td>\n",
-       "      <td>1</td>\n",
-       "      <td>43.10</td>\n",
-       "      <td>8.70</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "<p>9000 rows × 15 columns</p>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "      rnd  period  step           bids                                  asks  \\\n",
-       "0       0       0     0  [0.76, 121.2]  [44.5, 14.6, 19.3, 34.0, 34.0, 61.2]   \n",
-       "1       0       0     1   [0.76, 68.8]  [40.6, 27.9, 17.4, 37.0, 24.9, 80.1]   \n",
-       "2       0       0     2   [0.76, 50.3]  [49.5, 32.4, 41.1, 33.8, 35.7, 67.4]   \n",
-       "3       0       0     3   [0.76, 48.9]  [36.1, 52.4, 39.8, 29.4, 36.8, 56.3]   \n",
-       "4       0       0     4    [0.76, nan]  [39.7, 40.3, 34.7, 52.3, 35.3, 57.6]   \n",
-       "...   ...     ...   ...            ...                                   ...   \n",
-       "8995    0    1800     0  [0.76, 110.4]  [47.9, 17.5, 17.3, 30.1, 36.4, 78.3]   \n",
-       "8996    0    1800     1   [35.1, 58.9]  [38.9, 13.5, 37.0, 33.6, 27.7, 62.7]   \n",
-       "8997    0    1800     2   [0.76, 64.5]  [50.0, 34.5, 43.9, 42.9, 36.7, 68.3]   \n",
-       "8998    0    1800     3   [6.92, 56.7]  [36.9, 53.4, 48.9, 32.6, 34.8, 74.4]   \n",
-       "8999    0    1800     4    [0.76, nan]  [47.1, 41.6, 39.5, 51.2, 33.4, 64.6]   \n",
-       "\n",
-       "      current_bid  current_bid_idx  current_ask  current_ask_idx   buy   sell  \\\n",
-       "0          121.20                1         14.6                1  True   True   \n",
-       "1           68.80                1         17.4                2  True   True   \n",
-       "2           50.30                1         32.4                1  True   True   \n",
-       "3           48.90                1         29.4                3  True   True   \n",
-       "4            0.76                0         34.7                2  True  False   \n",
-       "...           ...              ...          ...              ...   ...    ...   \n",
-       "8995       110.40                1         17.3                2  True   True   \n",
-       "8996        58.90                1         13.5                1  True   True   \n",
-       "8997        64.50                1         34.5                1  True   True   \n",
-       "8998        56.70                1         32.6                3  True   True   \n",
-       "8999         0.76                0         33.4                4  True  False   \n",
-       "\n",
-       "      price  sale  bprofit  sprofit  \n",
-       "0     67.90     1    23.30    55.60  \n",
-       "1     43.10     1     5.40    29.20  \n",
-       "2     41.35     1     1.95    15.35  \n",
-       "3     39.15     1    -0.35    10.45  \n",
-       "4     34.70     1    41.80     1.40  \n",
-       "...     ...   ...      ...      ...  \n",
-       "8995  63.85     1    27.35    49.95  \n",
-       "8996  36.20     1    12.30    23.90  \n",
-       "8997  49.50     1    -6.20    23.50  \n",
-       "8998  44.65     1    -5.85    15.95  \n",
-       "8999  33.40     1    43.10     8.70  \n",
-       "\n",
-       "[9000 rows x 15 columns]"
-      ]
-     },
-     "execution_count": 61,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.head(9000)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 55,
-   "id": "01db3c49",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "(21740, 15)"
-      ]
-     },
-     "execution_count": 55,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.shape"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "01b4514e",
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3 (ipykernel)",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.10.13"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 5
-}
diff --git a/code/3_deep_reinforcement_learning/.ipynb_checkpoints/8_PPO_tests-checkpoint.ipynb b/code/3_deep_reinforcement_learning/.ipynb_checkpoints/8_PPO_tests-checkpoint.ipynb
deleted file mode 100644
index 602f50d..0000000
--- a/code/3_deep_reinforcement_learning/.ipynb_checkpoints/8_PPO_tests-checkpoint.ipynb
+++ /dev/null
@@ -1,1610 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "code",
-   "execution_count": 1,
-   "id": "6ce0ea75",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "from gymnasium import spaces\n",
-    "import numpy as np\n",
-    "from functions import *\n",
-    "from itertools import count\n",
-    "buyer_strategies = ['Honest', 'Honest', 'Markup', 'Creeper', 'Random']\n",
-    "seller_strategies = ['Honest', 'Honest', 'Markup', 'Creeper', 'Random']\n",
-    "nbuyers, nsellers = len(buyer_strategies), len(seller_strategies)\n",
-    "nrounds, nperiods, ntokens, nsteps, gametype, nbuyers, nsellers = 1, 10, 4, 20, '1234', len(buyer_strategies), len(seller_strategies)\n",
-    "R1, R2, R3, R4 = gametype_to_ran(gametype)\n",
-    "game_metadata = [nrounds, nperiods, ntokens, nbuyers, nsellers, nsteps, R1, R2, R3, R4]\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "rnd = 0\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "period = 0\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.01\n",
-    "max_frac = 1.0"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 2,
-   "id": "87aeeb4c",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "class TradingEnv(gym.Env):\n",
-    "    def __init__(self, db, nsteps, render_mode = None):\n",
-    "        self.rnd = 0\n",
-    "        self.period = -1\n",
-    "        self.db = db\n",
-    "        self.action_space = spaces.Box(0,1,(1,),dtype=np.float)\n",
-    "        self.observation_space = spaces.Box(0,nsteps,(1,),dtype=np.float)\n",
-    "\n",
-    "    def reset(self,seed=None):\n",
-    "        self.db.reset_period(self.rnd)\n",
-    "        self.timestep = 0\n",
-    "        self.period += 1\n",
-    "        observation = np.array([0])\n",
-    "        return observation, None\n",
-    "\n",
-    "    def step(self, action, seed=None, options=None):\n",
-    "        [buyer.next_token() for buyer in self.db.buyers]\n",
-    "        [seller.next_token() for seller in self.db.sellers]\n",
-    "        bid_frac = action.item()\n",
-    "        # convert action to bid\n",
-    "        self.db.buyers[0].next_token()\n",
-    "        min_bid = self.db.buyers[0].value * min_frac\n",
-    "        max_bid = self.db.buyers[0].value * max_frac\n",
-    "        bid = np.round(max_bid * bid_frac + (1 - bid_frac) * min_bid, 2)\n",
-    "\n",
-    "        # simulate market\n",
-    "        bids = [buyer.bid(self.db) for buyer in self.db.buyers]\n",
-    "        bids[0] = bid\n",
-    "        asks = [seller.ask(self.db) for seller in self.db.sellers]\n",
-    "        current_ask, current_ask_idx, current_bid, current_bid_idx = current_bid_ask(bids, asks)\n",
-    "        sale, price, bprofit, sprofit, buy, sell = buy_sell(self.db, current_bid, current_bid_idx, current_ask, current_ask_idx)\n",
-    "        step_data = [self.rnd, self.period, self.timestep, bids, asks, current_bid, current_bid_idx, current_ask, current_ask_idx, buy, sell, price, sale, bprofit, sprofit]\n",
-    "        self.db.add_step(step_data)\n",
-    "\n",
-    "        # compute reward, new state\n",
-    "        reward = np.array([0])\n",
-    "        if sale == 1 and current_bid_idx == 0:\n",
-    "            reward = np.array([bprofit])\n",
-    "        observation = np.array([self.timestep + 1])\n",
-    "\n",
-    "        # check termination\n",
-    "        self.timestep += 1\n",
-    "        if self.timestep == nsteps:\n",
-    "            terminated = True\n",
-    "            self.timestep = 0\n",
-    "        else:\n",
-    "            terminated = False\n",
-    "        return observation, reward, terminated, {}, {}"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 3,
-   "id": "56d7618c",
-   "metadata": {},
-   "outputs": [
-    {
-     "ename": "AttributeError",
-     "evalue": "'Creeper' object has no attribute 'ask_amount'",
-     "output_type": "error",
-     "traceback": [
-      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
-      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
-      "Cell \u001b[0;32mIn [3], line 7\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m timestep \u001b[38;5;129;01min\u001b[39;00m count(): \n\u001b[1;32m      6\u001b[0m     action \u001b[38;5;241m=\u001b[39m env\u001b[38;5;241m.\u001b[39maction_space\u001b[38;5;241m.\u001b[39msample()\n\u001b[0;32m----> 7\u001b[0m     observation, reward, done, info, _ \u001b[38;5;241m=\u001b[39m \u001b[43menv\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mstep\u001b[49m\u001b[43m(\u001b[49m\u001b[43maction\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m      8\u001b[0m     \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mRnd: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mrnd\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m, Period: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mperiod\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m, New State: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mobservation\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m, Action:\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mnp\u001b[38;5;241m.\u001b[39mround(action,\u001b[38;5;241m1\u001b[39m)\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m, Reward: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mnp\u001b[38;5;241m.\u001b[39mround(reward,\u001b[38;5;241m1\u001b[39m)\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m, Period End: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mdone\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m      9\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m done:\n\u001b[1;32m     10\u001b[0m         \u001b[38;5;66;03m# If the episode is done, reset the environment\u001b[39;00m\n",
-      "Cell \u001b[0;32mIn [2], line 27\u001b[0m, in \u001b[0;36mTradingEnv.step\u001b[0;34m(self, action, seed, options)\u001b[0m\n\u001b[1;32m     24\u001b[0m bid \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mround(max_bid \u001b[38;5;241m*\u001b[39m bid_frac \u001b[38;5;241m+\u001b[39m (\u001b[38;5;241m1\u001b[39m \u001b[38;5;241m-\u001b[39m bid_frac) \u001b[38;5;241m*\u001b[39m min_bid, \u001b[38;5;241m2\u001b[39m)\n\u001b[1;32m     26\u001b[0m \u001b[38;5;66;03m# simulate market\u001b[39;00m\n\u001b[0;32m---> 27\u001b[0m bids \u001b[38;5;241m=\u001b[39m [buyer\u001b[38;5;241m.\u001b[39mask(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdb) \u001b[38;5;28;01mfor\u001b[39;00m buyer \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdb\u001b[38;5;241m.\u001b[39mbuyers]\n\u001b[1;32m     28\u001b[0m bids[\u001b[38;5;241m0\u001b[39m] \u001b[38;5;241m=\u001b[39m bid\n\u001b[1;32m     29\u001b[0m asks \u001b[38;5;241m=\u001b[39m [seller\u001b[38;5;241m.\u001b[39mask(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdb) \u001b[38;5;28;01mfor\u001b[39;00m seller \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdb\u001b[38;5;241m.\u001b[39msellers]\n",
-      "Cell \u001b[0;32mIn [2], line 27\u001b[0m, in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m     24\u001b[0m bid \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mround(max_bid \u001b[38;5;241m*\u001b[39m bid_frac \u001b[38;5;241m+\u001b[39m (\u001b[38;5;241m1\u001b[39m \u001b[38;5;241m-\u001b[39m bid_frac) \u001b[38;5;241m*\u001b[39m min_bid, \u001b[38;5;241m2\u001b[39m)\n\u001b[1;32m     26\u001b[0m \u001b[38;5;66;03m# simulate market\u001b[39;00m\n\u001b[0;32m---> 27\u001b[0m bids \u001b[38;5;241m=\u001b[39m [\u001b[43mbuyer\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mask\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdb\u001b[49m\u001b[43m)\u001b[49m \u001b[38;5;28;01mfor\u001b[39;00m buyer \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdb\u001b[38;5;241m.\u001b[39mbuyers]\n\u001b[1;32m     28\u001b[0m bids[\u001b[38;5;241m0\u001b[39m] \u001b[38;5;241m=\u001b[39m bid\n\u001b[1;32m     29\u001b[0m asks \u001b[38;5;241m=\u001b[39m [seller\u001b[38;5;241m.\u001b[39mask(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdb) \u001b[38;5;28;01mfor\u001b[39;00m seller \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdb\u001b[38;5;241m.\u001b[39msellers]\n",
-      "File \u001b[0;32m~/Desktop/AI_Double_Auctions/code/3_deep_reinforcement_learning/functions.py:299\u001b[0m, in \u001b[0;36mCreeper.ask\u001b[0;34m(self, db)\u001b[0m\n\u001b[1;32m    297\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mask_amount \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mvalue\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m1.1\u001b[39m\n\u001b[1;32m    298\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m--> 299\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mask_amount \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mvalue\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m0.033\u001b[39m\n\u001b[1;32m    300\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    301\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mask_amount \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mnan\n",
-      "\u001b[0;31mAttributeError\u001b[0m: 'Creeper' object has no attribute 'ask_amount'"
-     ]
-    }
-   ],
-   "source": [
-    "env = TradingEnv(db, nsteps)\n",
-    "rnd = 0\n",
-    "observation, info = env.reset()\n",
-    "for period in count():\n",
-    "    for timestep in count(): \n",
-    "        action = env.action_space.sample()\n",
-    "        observation, reward, done, info, _ = env.step(action)\n",
-    "        print(f\"Rnd: {rnd}, Period: {period}, New State: {observation}, Action:{np.round(action,1)}, Reward: {np.round(reward,1)}, Period End: {done}\")\n",
-    "        if done:\n",
-    "            # If the episode is done, reset the environment\n",
-    "            print('done')\n",
-    "            observation, info = env.reset()\n",
-    "            timestep += 1\n",
-    "            break\n",
-    "    if period == nperiods:\n",
-    "        break\n",
-    "env.close()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "8dcb31bc",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "db.round_data.head(10).redemption_values.item()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "6e810bda",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "db.round_data.head(10).token_costs.item()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 5,
-   "id": "fed868d5",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[50.97, 78.9, 105.9, 105.49000000000001, 109.2]</td>\n",
-       "      <td>[31.0, 24.6, 45.7, 105.49000000000001, 44.6]</td>\n",
-       "      <td>109.2000</td>\n",
-       "      <td>4</td>\n",
-       "      <td>24.6</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>66.9000</td>\n",
-       "      <td>1</td>\n",
-       "      <td>14.1000</td>\n",
-       "      <td>42.3000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[100.19, 78.9, 105.9, 105.49000000000001, 77.3]</td>\n",
-       "      <td>[34.5, 54.9, 40.6, 105.49000000000001, 43.3]</td>\n",
-       "      <td>105.9000</td>\n",
-       "      <td>2</td>\n",
-       "      <td>34.5</td>\n",
-       "      <td>0</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>70.2000</td>\n",
-       "      <td>1</td>\n",
-       "      <td>26.1000</td>\n",
-       "      <td>44.7000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[95.76, 78.9, 103.3, 105.49000000000001, 76.4]</td>\n",
-       "      <td>[55.9, 54.9, 31.3, 105.49000000000001, 41.1]</td>\n",
-       "      <td>105.4900</td>\n",
-       "      <td>3</td>\n",
-       "      <td>31.3</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>68.3950</td>\n",
-       "      <td>1</td>\n",
-       "      <td>27.5050</td>\n",
-       "      <td>37.3950</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[38.76, 78.9, 103.3, 102.88300000000001, 88.5]</td>\n",
-       "      <td>[48.2, 54.9, 110.9, 105.49000000000001, 47.3]</td>\n",
-       "      <td>103.3000</td>\n",
-       "      <td>2</td>\n",
-       "      <td>47.3</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>75.3000</td>\n",
-       "      <td>1</td>\n",
-       "      <td>18.6000</td>\n",
-       "      <td>37.7000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[63.66, 78.9, 32.3, 86.9, 98.9]</td>\n",
-       "      <td>[57.7, 54.9, 77.9, 105.49000000000001, 51.5]</td>\n",
-       "      <td>98.9000</td>\n",
-       "      <td>4</td>\n",
-       "      <td>51.5</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>75.2000</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0.2000</td>\n",
-       "      <td>36.4000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>5</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>5</td>\n",
-       "      <td>[98.76, 78.9, 32.3, 86.9, 97.2]</td>\n",
-       "      <td>[49.3, 54.9, 88.7, 105.49000000000001, 49.1]</td>\n",
-       "      <td>98.7600</td>\n",
-       "      <td>0</td>\n",
-       "      <td>49.1</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>73.9300</td>\n",
-       "      <td>1</td>\n",
-       "      <td>27.3700</td>\n",
-       "      <td>31.1300</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>6</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>6</td>\n",
-       "      <td>[72.48, 78.9, 32.3, 86.9, 76.6]</td>\n",
-       "      <td>[59.5, 54.9, 104.2, 105.49000000000001, 66.4]</td>\n",
-       "      <td>86.9000</td>\n",
-       "      <td>3</td>\n",
-       "      <td>54.9</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>70.9000</td>\n",
-       "      <td>1</td>\n",
-       "      <td>8.1000</td>\n",
-       "      <td>16.0000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>7</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>7</td>\n",
-       "      <td>[8.28, 78.9, 32.3, 85.9925, 77.0]</td>\n",
-       "      <td>[53.1, 65.0, 81.5, 105.49000000000001, 65.1]</td>\n",
-       "      <td>85.9925</td>\n",
-       "      <td>3</td>\n",
-       "      <td>53.1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>False</td>\n",
-       "      <td>True</td>\n",
-       "      <td>85.9925</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-58.4925</td>\n",
-       "      <td>41.6925</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>8</td>\n",
-       "      <td>[70.34, 78.9, 32.3, 26.950000000000003, 71.5]</td>\n",
-       "      <td>[75.2, 65.0, 96.6, 105.49000000000001, 69.5]</td>\n",
-       "      <td>78.9000</td>\n",
-       "      <td>1</td>\n",
-       "      <td>65.0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>71.9500</td>\n",
-       "      <td>1</td>\n",
-       "      <td>6.9500</td>\n",
-       "      <td>6.9500</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>9</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>9</td>\n",
-       "      <td>[49.29, 73.0, 32.3, 26.950000000000003, 86.1]</td>\n",
-       "      <td>[83.9, 93.7, 110.5, 105.49000000000001, 61.6]</td>\n",
-       "      <td>86.1000</td>\n",
-       "      <td>4</td>\n",
-       "      <td>61.6</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>73.8500</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-6.9500</td>\n",
-       "      <td>27.2500</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "   rnd  period  step                                             bids  \\\n",
-       "0    0       0     0  [50.97, 78.9, 105.9, 105.49000000000001, 109.2]   \n",
-       "1    0       0     1  [100.19, 78.9, 105.9, 105.49000000000001, 77.3]   \n",
-       "2    0       0     2   [95.76, 78.9, 103.3, 105.49000000000001, 76.4]   \n",
-       "3    0       0     3   [38.76, 78.9, 103.3, 102.88300000000001, 88.5]   \n",
-       "4    0       0     4                  [63.66, 78.9, 32.3, 86.9, 98.9]   \n",
-       "5    0       0     5                  [98.76, 78.9, 32.3, 86.9, 97.2]   \n",
-       "6    0       0     6                  [72.48, 78.9, 32.3, 86.9, 76.6]   \n",
-       "7    0       0     7                [8.28, 78.9, 32.3, 85.9925, 77.0]   \n",
-       "8    0       0     8    [70.34, 78.9, 32.3, 26.950000000000003, 71.5]   \n",
-       "9    0       0     9    [49.29, 73.0, 32.3, 26.950000000000003, 86.1]   \n",
-       "\n",
-       "                                            asks  current_bid  \\\n",
-       "0   [31.0, 24.6, 45.7, 105.49000000000001, 44.6]     109.2000   \n",
-       "1   [34.5, 54.9, 40.6, 105.49000000000001, 43.3]     105.9000   \n",
-       "2   [55.9, 54.9, 31.3, 105.49000000000001, 41.1]     105.4900   \n",
-       "3  [48.2, 54.9, 110.9, 105.49000000000001, 47.3]     103.3000   \n",
-       "4   [57.7, 54.9, 77.9, 105.49000000000001, 51.5]      98.9000   \n",
-       "5   [49.3, 54.9, 88.7, 105.49000000000001, 49.1]      98.7600   \n",
-       "6  [59.5, 54.9, 104.2, 105.49000000000001, 66.4]      86.9000   \n",
-       "7   [53.1, 65.0, 81.5, 105.49000000000001, 65.1]      85.9925   \n",
-       "8   [75.2, 65.0, 96.6, 105.49000000000001, 69.5]      78.9000   \n",
-       "9  [83.9, 93.7, 110.5, 105.49000000000001, 61.6]      86.1000   \n",
-       "\n",
-       "   current_bid_idx  current_ask  current_ask_idx    buy  sell    price  sale  \\\n",
-       "0                4         24.6                1   True  True  66.9000     1   \n",
-       "1                2         34.5                0   True  True  70.2000     1   \n",
-       "2                3         31.3                2   True  True  68.3950     1   \n",
-       "3                2         47.3                4   True  True  75.3000     1   \n",
-       "4                4         51.5                4   True  True  75.2000     1   \n",
-       "5                0         49.1                4   True  True  73.9300     1   \n",
-       "6                3         54.9                1   True  True  70.9000     1   \n",
-       "7                3         53.1                0  False  True  85.9925     1   \n",
-       "8                1         65.0                1   True  True  71.9500     1   \n",
-       "9                4         61.6                4   True  True  73.8500     1   \n",
-       "\n",
-       "   bprofit  sprofit  \n",
-       "0  14.1000  42.3000  \n",
-       "1  26.1000  44.7000  \n",
-       "2  27.5050  37.3950  \n",
-       "3  18.6000  37.7000  \n",
-       "4   0.2000  36.4000  \n",
-       "5  27.3700  31.1300  \n",
-       "6   8.1000  16.0000  \n",
-       "7 -58.4925  41.6925  \n",
-       "8   6.9500   6.9500  \n",
-       "9  -6.9500  27.2500  "
-      ]
-     },
-     "execution_count": 5,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "db.step_data.head(10)"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "55dfc29c",
-   "metadata": {},
-   "source": [
-    "### PPO + A2C"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 77,
-   "id": "ef7b34a2",
-   "metadata": {
-    "scrolled": true
-   },
-   "outputs": [
-    {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "36cf54cec822448aab7215e36adc13a1",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "Output()"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n"
-      ],
-      "text/plain": []
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
-       "</pre>\n"
-      ],
-      "text/plain": [
-       "\n"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "PPO mean_reward: 40.38 +/- 5.56\n"
-     ]
-    }
-   ],
-   "source": [
-    "import gymnasium as gym\n",
-    "import numpy as np\n",
-    "from stable_baselines3 import PPO, A2C\n",
-    "from stable_baselines3.ppo.policies import MlpPolicy\n",
-    "from stable_baselines3.common.base_class import BaseAlgorithm\n",
-    "from stable_baselines3.common.evaluation import evaluate_policy\n",
-    "\n",
-    "# Define your environment and parameters (replace with your actual environment setup)\n",
-    "rnd = 0\n",
-    "period = 0\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.01\n",
-    "max_frac = 1.0\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "env = TradingEnv(db, nsteps)\n",
-    "eval_steps = 100\n",
-    "training_step = 50000\n",
-    "\n",
-    "# Create PPO model\n",
-    "from stable_baselines3.ppo.policies import MlpPolicy\n",
-    "ppo_model = PPO(MlpPolicy, env, verbose=0)\n",
-    "\n",
-    "# Train the PPO agent for 10000 steps\n",
-    "ppo_model.learn(total_timesteps=training_step, progress_bar = True)\n",
-    "\n",
-    "# Evaluate the trained PPO agent\n",
-    "mean_reward_ppo, std_reward_ppo = evaluate_policy(ppo_model, env, n_eval_episodes=eval_steps)\n",
-    "print(f\"PPO mean_reward: {mean_reward_ppo:.2f} +/- {std_reward_ppo:.2f}\")"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 9,
-   "id": "1421f767",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "env.db.step_data = env.db.step_data.drop_duplicates(subset=['rnd','period','step'], keep='last')"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 78,
-   "id": "bcf11b97",
-   "metadata": {
-    "scrolled": true
-   },
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[0.99, 122.7, 119.0, 138.9, 95.5]</td>\n",
-       "      <td>[58.4, 23.0, 64.1, 34.1, 62.0, 58.0]</td>\n",
-       "      <td>138.90</td>\n",
-       "      <td>3</td>\n",
-       "      <td>23.0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>80.950</td>\n",
-       "      <td>1</td>\n",
-       "      <td>14.650</td>\n",
-       "      <td>62.050</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[0.99, 128.1, 132.4, 94.2, 131.5]</td>\n",
-       "      <td>[60.3, 48.0, 71.7, 31.8, 60.5, 44.5]</td>\n",
-       "      <td>132.40</td>\n",
-       "      <td>2</td>\n",
-       "      <td>31.8</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>82.100</td>\n",
-       "      <td>1</td>\n",
-       "      <td>18.700</td>\n",
-       "      <td>54.400</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[0.99, 122.6, 106.5, 101.1, 116.9]</td>\n",
-       "      <td>[63.8, 46.4, 64.0, 42.3, 69.1, 49.8]</td>\n",
-       "      <td>122.60</td>\n",
-       "      <td>1</td>\n",
-       "      <td>42.3</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>82.450</td>\n",
-       "      <td>1</td>\n",
-       "      <td>11.750</td>\n",
-       "      <td>53.850</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[0.99, 130.1, 108.1, 128.7, 129.4]</td>\n",
-       "      <td>[59.9, 33.2, 56.4, 50.3, 64.3, 46.3]</td>\n",
-       "      <td>130.10</td>\n",
-       "      <td>1</td>\n",
-       "      <td>33.2</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>81.650</td>\n",
-       "      <td>1</td>\n",
-       "      <td>5.950</td>\n",
-       "      <td>49.450</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[26.9, 28.0, 97.1, 134.4, 97.4]</td>\n",
-       "      <td>[57.2, 90.4, 67.9, 44.2, 77.1, 52.5]</td>\n",
-       "      <td>134.40</td>\n",
-       "      <td>3</td>\n",
-       "      <td>44.2</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>89.300</td>\n",
-       "      <td>1</td>\n",
-       "      <td>3.000</td>\n",
-       "      <td>52.200</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>5</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>5</td>\n",
-       "      <td>[0.99, 30.0, 104.4, 43.7, 93.9]</td>\n",
-       "      <td>[60.8, 79.5, 75.1, 83.2, 69.2, 43.9]</td>\n",
-       "      <td>104.40</td>\n",
-       "      <td>2</td>\n",
-       "      <td>43.9</td>\n",
-       "      <td>5</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>74.150</td>\n",
-       "      <td>1</td>\n",
-       "      <td>4.950</td>\n",
-       "      <td>33.850</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>6</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>6</td>\n",
-       "      <td>[0.99, 27.5, 67.1, 44.3, 107.8]</td>\n",
-       "      <td>[66.6, 72.2, 63.7, 75.3, 67.3, 64.2]</td>\n",
-       "      <td>107.80</td>\n",
-       "      <td>4</td>\n",
-       "      <td>63.7</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>85.750</td>\n",
-       "      <td>1</td>\n",
-       "      <td>2.150</td>\n",
-       "      <td>35.150</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>7</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>7</td>\n",
-       "      <td>[0.99, 37.6, 77.0, 38.4, 107.3]</td>\n",
-       "      <td>[66.2, 85.9, 95.2, 86.6, 58.6, 62.0]</td>\n",
-       "      <td>107.30</td>\n",
-       "      <td>4</td>\n",
-       "      <td>58.6</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>82.950</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-2.650</td>\n",
-       "      <td>31.150</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>8</td>\n",
-       "      <td>[0.99, 37.9, 62.2, 43.5, 84.5]</td>\n",
-       "      <td>[64.9, 77.3, 107.2, 90.0, 100.5, 52.9]</td>\n",
-       "      <td>84.50</td>\n",
-       "      <td>4</td>\n",
-       "      <td>52.9</td>\n",
-       "      <td>5</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>68.700</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1.700</td>\n",
-       "      <td>23.700</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>9</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>9</td>\n",
-       "      <td>[78.41, 30.4, 63.1, 39.0, 34.3]</td>\n",
-       "      <td>[62.6, 72.4, 101.2, 92.0, 68.6, 56.0]</td>\n",
-       "      <td>78.41</td>\n",
-       "      <td>0</td>\n",
-       "      <td>56.0</td>\n",
-       "      <td>5</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>67.205</td>\n",
-       "      <td>1</td>\n",
-       "      <td>31.595</td>\n",
-       "      <td>19.805</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "   rnd  period  step                                bids  \\\n",
-       "0    0       0     0   [0.99, 122.7, 119.0, 138.9, 95.5]   \n",
-       "1    0       0     1   [0.99, 128.1, 132.4, 94.2, 131.5]   \n",
-       "2    0       0     2  [0.99, 122.6, 106.5, 101.1, 116.9]   \n",
-       "3    0       0     3  [0.99, 130.1, 108.1, 128.7, 129.4]   \n",
-       "4    0       0     4     [26.9, 28.0, 97.1, 134.4, 97.4]   \n",
-       "5    0       0     5     [0.99, 30.0, 104.4, 43.7, 93.9]   \n",
-       "6    0       0     6     [0.99, 27.5, 67.1, 44.3, 107.8]   \n",
-       "7    0       0     7     [0.99, 37.6, 77.0, 38.4, 107.3]   \n",
-       "8    0       0     8      [0.99, 37.9, 62.2, 43.5, 84.5]   \n",
-       "9    0       0     9     [78.41, 30.4, 63.1, 39.0, 34.3]   \n",
-       "\n",
-       "                                     asks  current_bid  current_bid_idx  \\\n",
-       "0    [58.4, 23.0, 64.1, 34.1, 62.0, 58.0]       138.90                3   \n",
-       "1    [60.3, 48.0, 71.7, 31.8, 60.5, 44.5]       132.40                2   \n",
-       "2    [63.8, 46.4, 64.0, 42.3, 69.1, 49.8]       122.60                1   \n",
-       "3    [59.9, 33.2, 56.4, 50.3, 64.3, 46.3]       130.10                1   \n",
-       "4    [57.2, 90.4, 67.9, 44.2, 77.1, 52.5]       134.40                3   \n",
-       "5    [60.8, 79.5, 75.1, 83.2, 69.2, 43.9]       104.40                2   \n",
-       "6    [66.6, 72.2, 63.7, 75.3, 67.3, 64.2]       107.80                4   \n",
-       "7    [66.2, 85.9, 95.2, 86.6, 58.6, 62.0]       107.30                4   \n",
-       "8  [64.9, 77.3, 107.2, 90.0, 100.5, 52.9]        84.50                4   \n",
-       "9   [62.6, 72.4, 101.2, 92.0, 68.6, 56.0]        78.41                0   \n",
-       "\n",
-       "   current_ask  current_ask_idx   buy  sell   price  sale  bprofit  sprofit  \n",
-       "0         23.0                1  True  True  80.950     1   14.650   62.050  \n",
-       "1         31.8                3  True  True  82.100     1   18.700   54.400  \n",
-       "2         42.3                3  True  True  82.450     1   11.750   53.850  \n",
-       "3         33.2                1  True  True  81.650     1    5.950   49.450  \n",
-       "4         44.2                3  True  True  89.300     1    3.000   52.200  \n",
-       "5         43.9                5  True  True  74.150     1    4.950   33.850  \n",
-       "6         63.7                2  True  True  85.750     1    2.150   35.150  \n",
-       "7         58.6                4  True  True  82.950     1   -2.650   31.150  \n",
-       "8         52.9                5  True  True  68.700     1    1.700   23.700  \n",
-       "9         56.0                5  True  True  67.205     1   31.595   19.805  "
-      ]
-     },
-     "execution_count": 78,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.head(10)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 83,
-   "id": "dae092fe",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1284</td>\n",
-       "      <td>599</td>\n",
-       "      <td>4490.89</td>\n",
-       "      <td>3262.7</td>\n",
-       "      <td>158</td>\n",
-       "      <td>50</td>\n",
-       "      <td>46</td>\n",
-       "      <td>3634.38</td>\n",
-       "      <td>50</td>\n",
-       "      <td>1305.62</td>\n",
-       "      <td>1134.88</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>3211</td>\n",
-       "      <td>862</td>\n",
-       "      <td>13487.70</td>\n",
-       "      <td>6255.5</td>\n",
-       "      <td>323</td>\n",
-       "      <td>100</td>\n",
-       "      <td>100</td>\n",
-       "      <td>8121.35</td>\n",
-       "      <td>100</td>\n",
-       "      <td>968.65</td>\n",
-       "      <td>4616.55</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>3680</td>\n",
-       "      <td>824</td>\n",
-       "      <td>15939.50</td>\n",
-       "      <td>6974.5</td>\n",
-       "      <td>372</td>\n",
-       "      <td>129</td>\n",
-       "      <td>150</td>\n",
-       "      <td>11498.65</td>\n",
-       "      <td>150</td>\n",
-       "      <td>386.35</td>\n",
-       "      <td>5520.35</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>9603</td>\n",
-       "      <td>4477</td>\n",
-       "      <td>25434.20</td>\n",
-       "      <td>21689.7</td>\n",
-       "      <td>744</td>\n",
-       "      <td>100</td>\n",
-       "      <td>107</td>\n",
-       "      <td>8579.10</td>\n",
-       "      <td>107</td>\n",
-       "      <td>1053.90</td>\n",
-       "      <td>5105.60</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6722</td>\n",
-       "      <td>2738</td>\n",
-       "      <td>21003.80</td>\n",
-       "      <td>15179.4</td>\n",
-       "      <td>700</td>\n",
-       "      <td>149</td>\n",
-       "      <td>150</td>\n",
-       "      <td>11547.30</td>\n",
-       "      <td>150</td>\n",
-       "      <td>382.70</td>\n",
-       "      <td>5180.70</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "                 rnd  period  step  current_bid  current_ask  current_ask_idx  \\\n",
-       "current_bid_idx                                                                 \n",
-       "0                  0    1284   599      4490.89       3262.7              158   \n",
-       "1                  0    3211   862     13487.70       6255.5              323   \n",
-       "2                  0    3680   824     15939.50       6974.5              372   \n",
-       "3                  0    9603  4477     25434.20      21689.7              744   \n",
-       "4                  0    6722  2738     21003.80      15179.4              700   \n",
-       "\n",
-       "                 buy  sell     price  sale  bprofit  sprofit  \n",
-       "current_bid_idx                                               \n",
-       "0                 50    46   3634.38    50  1305.62  1134.88  \n",
-       "1                100   100   8121.35   100   968.65  4616.55  \n",
-       "2                129   150  11498.65   150   386.35  5520.35  \n",
-       "3                100   107   8579.10   107  1053.90  5105.60  \n",
-       "4                149   150  11547.30   150   382.70  5180.70  "
-      ]
-     },
-     "execution_count": 83,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.head(1000).groupby('current_bid_idx').sum()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 84,
-   "id": "dc60ef65",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>53190</th>\n",
-       "      <td>0</td>\n",
-       "      <td>2660</td>\n",
-       "      <td>10</td>\n",
-       "      <td>[49.53, 30.3, 19.2, 47.2, 34.5]</td>\n",
-       "      <td>[78.3, 77.6, 86.8, 93.0, 98.8, 51.0]</td>\n",
-       "      <td>49.53</td>\n",
-       "      <td>0</td>\n",
-       "      <td>51.0</td>\n",
-       "      <td>5</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>50.265</td>\n",
-       "      <td>1</td>\n",
-       "      <td>48.535</td>\n",
-       "      <td>2.865</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>53191</th>\n",
-       "      <td>0</td>\n",
-       "      <td>2660</td>\n",
-       "      <td>11</td>\n",
-       "      <td>[17.91, 37.2, 23.8, 40.8, 44.5]</td>\n",
-       "      <td>[69.9, 67.7, 86.7, 84.8, 91.0, 113.0]</td>\n",
-       "      <td>44.50</td>\n",
-       "      <td>4</td>\n",
-       "      <td>67.7</td>\n",
-       "      <td>1</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.000</td>\n",
-       "      <td>0.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>53192</th>\n",
-       "      <td>0</td>\n",
-       "      <td>2660</td>\n",
-       "      <td>12</td>\n",
-       "      <td>[17.38, 29.4, 18.7, 44.2, 31.2]</td>\n",
-       "      <td>[66.1, 79.6, 96.8, 77.9, 92.1, 110.5]</td>\n",
-       "      <td>44.20</td>\n",
-       "      <td>3</td>\n",
-       "      <td>66.1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.000</td>\n",
-       "      <td>0.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>53193</th>\n",
-       "      <td>0</td>\n",
-       "      <td>2660</td>\n",
-       "      <td>13</td>\n",
-       "      <td>[16.94, 28.8, 23.7, 45.0, 33.2]</td>\n",
-       "      <td>[55.6, 84.8, 100.6, 74.2, 71.3, 122.3]</td>\n",
-       "      <td>45.00</td>\n",
-       "      <td>3</td>\n",
-       "      <td>55.6</td>\n",
-       "      <td>0</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.000</td>\n",
-       "      <td>0.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>53194</th>\n",
-       "      <td>0</td>\n",
-       "      <td>2660</td>\n",
-       "      <td>14</td>\n",
-       "      <td>[16.57, 30.9, 19.7, 36.8, 42.0]</td>\n",
-       "      <td>[64.4, 62.6, 115.5, 74.7, 75.9, 114.6]</td>\n",
-       "      <td>42.00</td>\n",
-       "      <td>4</td>\n",
-       "      <td>62.6</td>\n",
-       "      <td>1</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.000</td>\n",
-       "      <td>0.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>53195</th>\n",
-       "      <td>0</td>\n",
-       "      <td>2660</td>\n",
-       "      <td>15</td>\n",
-       "      <td>[16.26, 34.4, 21.4, 37.4, 30.3]</td>\n",
-       "      <td>[73.8, 82.2, 80.0, 88.3, 69.9, 108.5]</td>\n",
-       "      <td>37.40</td>\n",
-       "      <td>3</td>\n",
-       "      <td>69.9</td>\n",
-       "      <td>4</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.000</td>\n",
-       "      <td>0.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>53196</th>\n",
-       "      <td>0</td>\n",
-       "      <td>2660</td>\n",
-       "      <td>16</td>\n",
-       "      <td>[16.01, 33.9, 21.4, 49.4, 30.5]</td>\n",
-       "      <td>[82.7, 75.5, 113.4, 88.9, 100.9, 129.8]</td>\n",
-       "      <td>49.40</td>\n",
-       "      <td>3</td>\n",
-       "      <td>75.5</td>\n",
-       "      <td>1</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.000</td>\n",
-       "      <td>0.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>53197</th>\n",
-       "      <td>0</td>\n",
-       "      <td>2660</td>\n",
-       "      <td>17</td>\n",
-       "      <td>[15.79, 36.8, 21.6, 36.6, 30.7]</td>\n",
-       "      <td>[69.8, 62.2, 111.6, 82.4, 93.5, 125.9]</td>\n",
-       "      <td>36.80</td>\n",
-       "      <td>1</td>\n",
-       "      <td>62.2</td>\n",
-       "      <td>1</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.000</td>\n",
-       "      <td>0.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>53198</th>\n",
-       "      <td>0</td>\n",
-       "      <td>2660</td>\n",
-       "      <td>18</td>\n",
-       "      <td>[15.61, 37.8, 18.8, 39.2, 35.2]</td>\n",
-       "      <td>[60.2, 89.5, 88.9, 71.3, 71.9, 101.6]</td>\n",
-       "      <td>39.20</td>\n",
-       "      <td>3</td>\n",
-       "      <td>60.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.000</td>\n",
-       "      <td>0.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>53199</th>\n",
-       "      <td>0</td>\n",
-       "      <td>2660</td>\n",
-       "      <td>19</td>\n",
-       "      <td>[15.46, 39.4, 23.0, 47.6, 38.3]</td>\n",
-       "      <td>[61.5, 79.1, 108.0, 64.6, 70.7, 99.5]</td>\n",
-       "      <td>47.60</td>\n",
-       "      <td>3</td>\n",
-       "      <td>61.5</td>\n",
-       "      <td>0</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.000</td>\n",
-       "      <td>0.000</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "       rnd  period  step                             bids  \\\n",
-       "53190    0    2660    10  [49.53, 30.3, 19.2, 47.2, 34.5]   \n",
-       "53191    0    2660    11  [17.91, 37.2, 23.8, 40.8, 44.5]   \n",
-       "53192    0    2660    12  [17.38, 29.4, 18.7, 44.2, 31.2]   \n",
-       "53193    0    2660    13  [16.94, 28.8, 23.7, 45.0, 33.2]   \n",
-       "53194    0    2660    14  [16.57, 30.9, 19.7, 36.8, 42.0]   \n",
-       "53195    0    2660    15  [16.26, 34.4, 21.4, 37.4, 30.3]   \n",
-       "53196    0    2660    16  [16.01, 33.9, 21.4, 49.4, 30.5]   \n",
-       "53197    0    2660    17  [15.79, 36.8, 21.6, 36.6, 30.7]   \n",
-       "53198    0    2660    18  [15.61, 37.8, 18.8, 39.2, 35.2]   \n",
-       "53199    0    2660    19  [15.46, 39.4, 23.0, 47.6, 38.3]   \n",
-       "\n",
-       "                                          asks  current_bid  current_bid_idx  \\\n",
-       "53190     [78.3, 77.6, 86.8, 93.0, 98.8, 51.0]        49.53                0   \n",
-       "53191    [69.9, 67.7, 86.7, 84.8, 91.0, 113.0]        44.50                4   \n",
-       "53192    [66.1, 79.6, 96.8, 77.9, 92.1, 110.5]        44.20                3   \n",
-       "53193   [55.6, 84.8, 100.6, 74.2, 71.3, 122.3]        45.00                3   \n",
-       "53194   [64.4, 62.6, 115.5, 74.7, 75.9, 114.6]        42.00                4   \n",
-       "53195    [73.8, 82.2, 80.0, 88.3, 69.9, 108.5]        37.40                3   \n",
-       "53196  [82.7, 75.5, 113.4, 88.9, 100.9, 129.8]        49.40                3   \n",
-       "53197   [69.8, 62.2, 111.6, 82.4, 93.5, 125.9]        36.80                1   \n",
-       "53198    [60.2, 89.5, 88.9, 71.3, 71.9, 101.6]        39.20                3   \n",
-       "53199    [61.5, 79.1, 108.0, 64.6, 70.7, 99.5]        47.60                3   \n",
-       "\n",
-       "       current_ask  current_ask_idx    buy   sell   price  sale  bprofit  \\\n",
-       "53190         51.0                5   True   True  50.265     1   48.535   \n",
-       "53191         67.7                1  False  False     NaN     0    0.000   \n",
-       "53192         66.1                0  False  False     NaN     0    0.000   \n",
-       "53193         55.6                0  False  False     NaN     0    0.000   \n",
-       "53194         62.6                1  False  False     NaN     0    0.000   \n",
-       "53195         69.9                4  False  False     NaN     0    0.000   \n",
-       "53196         75.5                1  False  False     NaN     0    0.000   \n",
-       "53197         62.2                1  False  False     NaN     0    0.000   \n",
-       "53198         60.2                0  False  False     NaN     0    0.000   \n",
-       "53199         61.5                0  False  False     NaN     0    0.000   \n",
-       "\n",
-       "       sprofit  \n",
-       "53190    2.865  \n",
-       "53191    0.000  \n",
-       "53192    0.000  \n",
-       "53193    0.000  \n",
-       "53194    0.000  \n",
-       "53195    0.000  \n",
-       "53196    0.000  \n",
-       "53197    0.000  \n",
-       "53198    0.000  \n",
-       "53199    0.000  "
-      ]
-     },
-     "execution_count": 84,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.tail(10)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 85,
-   "id": "8418b5a0",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>131775</td>\n",
-       "      <td>505</td>\n",
-       "      <td>2468.28</td>\n",
-       "      <td>2977.2</td>\n",
-       "      <td>129</td>\n",
-       "      <td>50</td>\n",
-       "      <td>15</td>\n",
-       "      <td>2915.775</td>\n",
-       "      <td>50</td>\n",
-       "      <td>2024.225</td>\n",
-       "      <td>310.375</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>377040</td>\n",
-       "      <td>1004</td>\n",
-       "      <td>13818.60</td>\n",
-       "      <td>6851.9</td>\n",
-       "      <td>355</td>\n",
-       "      <td>100</td>\n",
-       "      <td>100</td>\n",
-       "      <td>8098.150</td>\n",
-       "      <td>100</td>\n",
-       "      <td>991.850</td>\n",
-       "      <td>4670.650</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>395325</td>\n",
-       "      <td>790</td>\n",
-       "      <td>15707.10</td>\n",
-       "      <td>6877.2</td>\n",
-       "      <td>400</td>\n",
-       "      <td>130</td>\n",
-       "      <td>150</td>\n",
-       "      <td>11370.600</td>\n",
-       "      <td>150</td>\n",
-       "      <td>514.400</td>\n",
-       "      <td>5469.200</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1011763</td>\n",
-       "      <td>4498</td>\n",
-       "      <td>25220.70</td>\n",
-       "      <td>21935.2</td>\n",
-       "      <td>686</td>\n",
-       "      <td>100</td>\n",
-       "      <td>108</td>\n",
-       "      <td>8618.250</td>\n",
-       "      <td>108</td>\n",
-       "      <td>1048.750</td>\n",
-       "      <td>5017.850</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>0</td>\n",
-       "      <td>719597</td>\n",
-       "      <td>2703</td>\n",
-       "      <td>20882.80</td>\n",
-       "      <td>15269.1</td>\n",
-       "      <td>611</td>\n",
-       "      <td>150</td>\n",
-       "      <td>150</td>\n",
-       "      <td>11576.200</td>\n",
-       "      <td>150</td>\n",
-       "      <td>353.800</td>\n",
-       "      <td>5248.800</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "                 rnd   period  step  current_bid  current_ask  \\\n",
-       "current_bid_idx                                                 \n",
-       "0                  0   131775   505      2468.28       2977.2   \n",
-       "1                  0   377040  1004     13818.60       6851.9   \n",
-       "2                  0   395325   790     15707.10       6877.2   \n",
-       "3                  0  1011763  4498     25220.70      21935.2   \n",
-       "4                  0   719597  2703     20882.80      15269.1   \n",
-       "\n",
-       "                 current_ask_idx  buy  sell      price  sale   bprofit  \\\n",
-       "current_bid_idx                                                          \n",
-       "0                            129   50    15   2915.775    50  2024.225   \n",
-       "1                            355  100   100   8098.150   100   991.850   \n",
-       "2                            400  130   150  11370.600   150   514.400   \n",
-       "3                            686  100   108   8618.250   108  1048.750   \n",
-       "4                            611  150   150  11576.200   150   353.800   \n",
-       "\n",
-       "                  sprofit  \n",
-       "current_bid_idx            \n",
-       "0                 310.375  \n",
-       "1                4670.650  \n",
-       "2                5469.200  \n",
-       "3                5017.850  \n",
-       "4                5248.800  "
-      ]
-     },
-     "execution_count": 85,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.tail(1000).groupby('current_bid_idx').sum()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 59,
-   "id": "01db3c49",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "(52200, 15)"
-      ]
-     },
-     "execution_count": 59,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.shape"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 60,
-   "id": "f86befa7",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "def graph(demand_schedule, supply_schedule, P_grid, p_eqbm, q_eqbm, \n",
-    "                        period_bids, period_asks, period_prices, period_sales, \n",
-    "                        redemption_values, token_costs, ntokens, nbuyers, nsellers, nsteps):\n",
-    "    plt.plot(demand_schedule, P_grid, label = 'Demand Curve')\n",
-    "    plt.plot(supply_schedule, P_grid, label = 'Supply Curve')\n",
-    "    plt.plot(period_prices, color='green', linestyle='--', label='Mean Real Prices')\n",
-    "    plt.axhline(y=np.nanmean(p_eqbm), color='black', linestyle='--', label='Mean Eqbm Prices')\n",
-    "    prices = []\n",
-    "    print(nsteps)\n",
-    "    for i in range(nsteps):\n",
-    "        if (period_prices[i] >0):\n",
-    "            plt.scatter([period_sales[i]]*len(period_bids[i]), period_bids[i], s = 10, marker = 'x', c = 'red')\n",
-    "            plt.scatter([period_sales[i]]*len(period_asks[i]), period_asks[i], s = 10, marker = 'o', c = 'blue')\n",
-    "        else:\n",
-    "            pass  \n",
-    "    plt.legend()\n",
-    "    text_content = f'q*={q_eqbm}, mean(q)={np.round(np.nanmax(period_sales),1)},p*={np.round(p_eqbm,1)}, mean(p)={np.round(np.nanmean(period_prices),1)}'\n",
-    "    plt.title(text_content)\n",
-    "    plt.xlim(0,q_eqbm*1.2)\n",
-    "    plt.ylim(0,p_eqbm*3.0)\n",
-    "    plt.show()\n",
-    "    \n",
-    "    plt.plot(period_bids, c = 'r', linestyle='--')\n",
-    "    plt.plot(period_asks, c = 'b', linestyle='--')\n",
-    "    plt.scatter(range(nsteps), period_prices, c = 'g')\n",
-    "    plt.title('Bids (red), Asks (blue) and Prices (green) over trading steps')\n",
-    "    plt.show()\n",
-    "\n",
-    "def graph_period(db, rnd, period):\n",
-    "    period_bids = list(db.get_period(rnd, period).bids)\n",
-    "    period_asks = list(db.get_period(rnd, period).asks)\n",
-    "    period_prices = list(db.get_period(rnd, period).price)\n",
-    "    period_sales = np.cumsum(np.where(db.get_period(rnd, period).price > 0,1,0))\n",
-    "    [_, demand_schedule, supply_schedule, P_grid, redemption_values, token_costs, p_eqbm, q_eqbm] = db.get_round(rnd).iloc[0].tolist()\n",
-    "    graph(demand_schedule, supply_schedule, P_grid, p_eqbm, q_eqbm, period_bids, period_asks, period_prices, period_sales, redemption_values, token_costs, db.ntokens, db.nbuyers, db.nsellers, db.nsteps)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 61,
-   "id": "01b4514e",
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "10\n"
-     ]
-    },
-    {
-     "data": {
-      "image/png": "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tVpttM7R0dFo3bPPPovZs2dj7ty52L59O+rWrYu6desC0NWpjY0N9uzZAxsbG4P9ctdpecMxP0RERERWRpIkSHb2lnnk82W9pI4cOYJz586hR48eAHStGgkJCVAqlahZs6bBw93d/ZHP8++//0Kr1WLOnDlo3rw5goKCEBcXV6JjuLi4wMfHBydPnpTXaTQa/Pvvv4Xu17dvX0RHR2Pfvn1G24QQuHv3LgBdC07eyRUuXLhQrNi6deuGrKwsHDhwADt27EC/fv3kbQ0aNEBOTg4SExON6tTHx6dYxy+LmPwQERERUZmVnZ2N+Ph43Lp1C6dPn8by5csxYsQIdO3aFQMGDAAAdOzYEc2bN8eIESNw6NAhXL9+HZGRkViwYAFOnTr1yOeuUaMG1Go11qxZg6tXr2LLli349ttvS3yc8PBwfPLJJ9i7dy8uXbqEN998U05eCtK7d2/07t0bY8aMwfLly3Hq1CncuHEDP//8MwYNGiTPuhYWFob9+/fjl19+waVLlzBz5swij63n6OiI7t27Y9GiRbh48SL69u0rbwsKCsKzzz6L8ePHY/fu3bh27RpOnjyJFStW4Oeffy5xHZQV7PZGRERERGXWgQMH0LRpUyiVSlSuXBn16tXD+++/j+eee04eqyNJEr799lssXLgQkyZNQmJiIry8vNC6dWt4eno+8rnr16+POXPmYNWqVZg/fz5at26NmTNnYvz48SU6zqhRo3D79m1MmDABCoUCgwYNQvfu3XHv3r0C95EkCStXrsS6deuwceNGLF++XG7ZGjBgADp27AgAGDx4MP777z+MHz8eSqUSI0eOlKfBLo5+/frhpZdeQuvWreHv72+wbfHixVi2bBnee+89xMXFwd3dHc2aNUP37t1LdP1liSRMPZrKjBISEvLt00imJUkSfH19cevWLZMPvqP8sc7Ni/VtXqxv82J9m19ZrfO7d++WeHrk8kKlUvE7oRlZqr4Leg2rVCp4eXkV6xjs9kZERERERFaByQ8REREREVkFJj9ERERERGQVmPwQEREREZFVYPJDRERERERWgckPERERERFZBSY/RERERERkFZj8EBERERGRVWDyQ0REREREVoHJDxERERFRET7++GM8+eSTlg6DHhOTHyIiIiIqkxITEzFjxgyEhoaiZs2aaNKkCYYMGYLIyEhLh/bIzpw5g1dffRWN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33yDiRMnYujQofD390ePHj2gUCjw33//4fz585g+fTpq1KgBtVqNNWvW4Mknn0RkZCS+/fbbok9UCsaOHYuuXbti5syZeOmll2Bra4ujR4+iV69ecHd3x5gxYwqt50WLFqFRo0YICQlBdnY2fvnlF9SqVcsi15KXScf8EBERERGVlrzDK/KaNm0aPDw88Mknn+DatWtwcXFBw4YN8cYbbwAAXnzxRZw5cwavvfYaJElCnz59MHToUPz666+lEu/IkSPRu3dvnDx5Ep06dcLXX3+NJUuWYOXKlVCpVAgODpbHztSvXx9z5szBqlWrMH/+fLRu3RozZ860SINBUFAQ1q9fjwULFqBnz56wt7dH06ZN0bdvXwDAjBkz4OrqWmA9q1QqzJ8/H9evX4e9vT1atWqFVatWmf068iOJcjwSLyEhgbO9mYEkSfD19cWtW7c4cNNMWOfmxfo2L9a3ebG+za+s1vndu3eN7rVYUahUKn4nNCNL1XdBr2GVSlXs2d5MfpNTIiIiIiKisojJDxERERERWQUmP0REREREZBWY/BARERERkVVg8kNERERERFaByQ8REREREVkFJj9ERERERGQVmPwQEREREZFVYPJDRERERERWgckPEREREVEZ0KpVK3zxxReWDqNAx44dg7+/P1JTUy0dyiNj8kNEREREZdKECRPg7++P6dOnG21788034e/vjwkTJpg/sDw2btwIf39/o0dgYKClQytQ7jjr1KmDPn364MiRI4Xu06JFC5w8eRIuLi5mitL0mPwQERERUZnl5+eHXbt2ISMjQ16XmZmJHTt2wN/f34KRGapUqRJOnjxp8Pjzzz8tHVahFi9ejJMnT2LHjh1wd3fH0KFDcfXq1XzLqtVq2NrawtvbG5IkmTlS02HyQ0RERERlVsOGDeHn54c9e/bI6/bs2QM/Pz80aNDAoKxWq8WKFSvQunVrBAUFoWvXrvjhhx/k7Tk5OZg8ebK8vX379vjyyy8NjjFhwgSMGDECn332GZo2bYr69evjzTffhFqtLjROSZLg7e1t8PDy8pK3p6enY9y4cahVqxaaNm2Kzz77DAMGDMDbb79tcJz79+9jzJgxCA4ORvPmzbF27VqD7f7+/vj222/x8ssvIygoCB07dsRff/2FK1euYMCAAQgODkbv3r0RExNTZN1WrlwZ3t7eqFOnDubPn4/M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IiKSEBiogZ8fEBioQUREkqVDojKOuTERERERlUshIRocOZIALy9fJCQkQAhR9E5k1djyQ0RERETlGru6UXEx+SEiIiIiIqvA5IeIiIiIiKwCkx8iIiIiIrIKTH6IiMjseB8OIiKyBCY/RERkNlFRSrRr54WAAKBdOy9ERXGUMhERmQ+THyIiMpvwcHdERytx8yYQHa1EeLi7pUMiIiIrwuSHiIjMQqMB0tIkg3VpaRK7wBERkdkw+SEiIrNQKgEnJ8MbEDo5Cd6fg4iIzIbJDxERmU1ERBICAzXw8wMCAzWIiEiydEhERGRF+HsbERGZTUiIBkeOJMDLyxcJCQkQQhS9ExERkYmw5YeIiMyOXd2IiMgSmPwQEREREZFVYPJDRERERERWgckPERFRBcfpxImIdJj8EBERVVBRUUq0a+eFgACgXTsvREVxsBURWTcmP0RERBVUeLg7oqOVuHkTiI5WIjzc3dIhERFZFJMfIiKiCkijAdLSJIN1aWkSu8ARkVVj8kNERFQBKZWAk5PhfZScnASnGSciq8bkh4iIqIKKiEhCYKAGfn5AYKAGERFJlg6JiMii+PsPERFRBRUSosGRIwnw8vJFQkIChBBF70REVIGx5YeIiKiCY1c3IiIdJj9ERERERGQVmPwQEREREZFVYPJDRERERERWgckPERERERFZBSY/RERERERkFZj8EBERERGRVWDyQ0REREREVoHJDxERERERWQUmP0REREREZBWY/BARERERkVVg8kNERERERFaByQ8REREREVkFJj9ERERERGQVlCXd4b///sOuXbtw5coVJCcnY8qUKWjZsqW8XQiBTZs2Yf/+/UhLS0OdOnXwyiuvwNfXVy5z//59rFmzBidOnIAkSWjVqhWGDx8Oe3t701wVERERERFRHiVu+cnKykKNGjUQHh6e7/adO3diz549GDlyJD744APY2dlh3rx5yM7OlsssX74c169fx6xZszBjxgycO3cOq1evfvSrICIiIiKrpdFYOgIqL0qc/DRt2hSDBw82aO3RE0Jg9+7dePbZZxEaGoqAgACMHTsWycnJiIyMBADcuHED//zzD0aPHo1atWqhTp06GDFiBI4dO4akpKTHvyIiIiIisgpRUUq0a+eFgACgXTsvREWVuFMTWRmTvkLi4+ORkpKCRo0ayescHR0RHByMqKgohIWF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oVmzZmn8+PGKRCL65S9/qdtvv1333HOPcnNzvS4vIwWDQV1yySUqKSmR4zh67rnndNddd+muu+7SmDFjvC4vY7355pvatGmTysvLvS4l440ZM0Y333xz/LZpsuAjVT766CPdfPPNOu6443TDDTdo6NCh2rNnjwoKCrwuLWPdcccdsm07fvvdd9/V7bffrtNPP93DqjLX+vXrtWnTJl111VUaPXq0ampq9JOf/ET5+fk6//zzvS6v39Iu/DzxxBM655xzdPbZZ0uSLrvsMr3yyit69tlnNXfuXG+LyzBTpkzhHXAX3XjjjQm3r7rqKi1atEg1NTX61Kc+5VFVmW3q1KkJt7/yla9o48aNeuONNwg/KdLe3q4f//jHuuKKK7Ru3Tqvy8l4pmn26/Pz8PH95je/0YgRI7R48eJ428iRIz2sKPMNHTo04fb69et19NFH85qZItXV1Zo6dao+/elPS4o+v7du3ao333zT48oOT1q9BRQOh1VTU6PJkyfH20zT1OTJk1VdXe1hZcDAa21tlSQNGTLE40qyg23bev7559XR0aGKigqvy8lYDz74oKZMmaITTjjB61KyQl1dna644gr9+7//u370ox+poaHB65Iy1p/+9CeNGzdO99xzjxYtWqTrrrtOTz/9tNdlZY1wOKwtW7bo7LPPTqslWOmkoqJC27dv1+7duyVJ77zzjl5//fW0e6M8rWZ+PvjgA9m23eNdrOHDh8f/I4BMYNu2Vq1apUmTJumYY47xupyM9u677+rGG29UKBRSbm6urr32Wo0ePdrrsjLS888/r7ffflt33HGH16VkhYkTJ2rx4sUqLS1VU1OT1q5dq+9+97u6++67lZeX53V5GWfv3r3atGmTZs+erQsvvFBvvfWWfvazn8myLM2YMcPr8jLetm3b1NLSwlin0Ny5c9XW1qarr75apmnKtm19+ctf1llnneV1aYclrcIPkC0qKyv13nvv6dZbb/W6lIxXWlqq73//+2ptbdVLL72k++67T8uWLSMADbCGhgatWrVKN910kwKBgNflZIXu78aWl5fHw9CLL76omTNnelhZZrJtW+PHj9cll1wiSTr22GP17rvvatOmTRyQu+DZZ5/VSSedpGAw6HUpGevFF1/U1q1b9e1vf1tjxozRO++8o1WrVqmwsDCtnuNpFX6GDh0q0zTV3Nyc0N7c3MyaZmSMyspKvfLKK1q2bJlGjBjhdTkZz7IsjRo1SpI0btw4vfXWW3ryySd1+eWXe1xZZqmpqdH+/ft1/fXXx9ts29bOnTv11FNPac2aNZyMn2IFBQUqLS1VXV2d16VkpMLCwh5vmowePVovv/yyRxVlj/r6er322mu69tprvS4loz388MO64IILNG3aNEnSMccco/r6eq1fv57wkyqWZWncuHHavn17/JLLtm1r+/bt+tznPudxdcDH4ziOVq5cqW3btmnp0qWcKOsR27YVCoW8LiPjTJ48ucdVI++//36VlpbqggsuIPi4oL29XXV1dWm3RCVdTJo0qccS/N27d6u4uNijirLHs88+q2HDhsVPxEdqdHR09NhXm6Ypx3E8qujIpFX4kaQ5c+bovvvu07hx4zRhwgQ9+eST6ujoSKvEmS66Xii77N27V++8846GDBmioqIiDyvLTJWVldq6dauuu+465eXlxWc48/PzWSaUImvWrNFJJ52koqIitbe3a+vWrdqxY0ePK+/h48vLy+tx/lpOTo6OOuoozmtLkdWrV2vq1KkqKipSU1OTqqqqZJqmzjzzTK9Ly0izZ8/WzTffrHXr1umMM87Qm2++qWeeeYZZ5BSzbVu///3vNX36dPl8Pq/LyWgnn3yy1q1bp6KiIo0ePVrvvPOOnnjiifgVmNOF4aRbXFP0Q04fe+wxNTc3a+zYsfrmN7+piRMnel1Wxvn73/+uZcuW9WifPn26rrrqKg8qymzz58/vtX3x4sWE+xS5//77tX37djU1NSk/P1/l5eW64IILuBKZS5YuXaqxY8fyIacpcu+992rnzp368MMPNXToUH3iE5/Ql7/85fgyTwy8P//5z1qzZo3q6uo0cuRIzZ49W+eee67XZWW0v/71r/HPe+RDwVOrra1Nv/71r7Vt2zbt379fwWBQ06ZN07x582RZ6TOfkpbhBwAAAAAOF4usAQAAAGQFwg8AAACArED4AQAAAJAVCD8AAAAAsgLhBwAAAEBWIPwAAAAAyAqEHwAAAABZgfADAAAAICsQfgAAAABkBcIPAAAAgKxA+AEAAACQFQg/AAAAALLC/wc9VpKABgkiXgAAAABJRU5ErkJggg==\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 10)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 62,
-   "id": "5bfc1126",
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "10\n"
-     ]
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 1806)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "6d798c27",
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3 (ipykernel)",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.10.13"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 5
-}
diff --git a/code/3_deep_reinforcement_learning/.ipynb_checkpoints/9_DRL_comparisions-checkpoint.ipynb b/code/3_deep_reinforcement_learning/.ipynb_checkpoints/9_DRL_comparisions-checkpoint.ipynb
deleted file mode 100644
index 2932002..0000000
--- a/code/3_deep_reinforcement_learning/.ipynb_checkpoints/9_DRL_comparisions-checkpoint.ipynb
+++ /dev/null
@@ -1,1483 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "6ce0ea75",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "from gymnasium import spaces\n",
-    "import numpy as np\n",
-    "from functions import *\n",
-    "from itertools import count\n",
-    "buyer_strategies = ['Honest', 'Random', 'Random', 'Random']\n",
-    "seller_strategies = ['Honest', 'Honest', 'Honest', 'Honest', 'Honest','Honest', 'Honest', 'Honest', 'Honest', 'Honest']\n",
-    "nbuyers, nsellers = len(buyer_strategies), len(seller_strategies)\n",
-    "nrounds, nperiods, ntokens, nsteps, gametype, nbuyers, nsellers = 10, 100, 4, 16, '1234', len(buyer_strategies), len(seller_strategies)\n",
-    "R1, R2, R3, R4 = gametype_to_ran(gametype)\n",
-    "game_metadata = [nrounds, nperiods, ntokens, nbuyers, nsellers, nsteps, R1, R2, R3, R4]\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "rnd = 0\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "period = 0\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.01\n",
-    "max_frac = 1.0"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "87aeeb4c",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "class TradingEnv(gym.Env):\n",
-    "    def __init__(self, db, nsteps, render_mode = None):\n",
-    "        self.rnd = 0\n",
-    "        self.period = -1\n",
-    "        self.nperiods = nperiods\n",
-    "        self.db = db\n",
-    "        self.action_space = spaces.Box(0,1,(1,),dtype=np.float)\n",
-    "        self.observation_space = spaces.Box(0,nsteps,(1,),dtype=np.float)\n",
-    "\n",
-    "    def reset(self,seed=None):\n",
-    "        #self.db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "        self.db.reset_period(self.rnd)\n",
-    "        self.timestep = 0\n",
-    "        self.period += 1\n",
-    "        observation = np.array([0])\n",
-    "        return observation, None\n",
-    "\n",
-    "    def step(self, action, seed=None, options=None):\n",
-    "        [buyer.next_token() for buyer in self.db.buyers]\n",
-    "        [seller.next_token() for seller in self.db.sellers]\n",
-    "        bid_frac = action.item()\n",
-    "        # convert action to bid\n",
-    "        self.db.buyers[0].next_token()\n",
-    "        min_bid = self.db.buyers[0].value * min_frac\n",
-    "        max_bid = self.db.buyers[0].value * max_frac\n",
-    "        bid = np.round(max_bid * bid_frac + (1 - bid_frac) * min_bid, 2)\n",
-    "\n",
-    "        # simulate market\n",
-    "        bids = [buyer.bid(self.db) for buyer in self.db.buyers]\n",
-    "        bids[0] = bid\n",
-    "        asks = [seller.ask(self.db) for seller in self.db.sellers]\n",
-    "        current_ask, current_ask_idx, current_bid, current_bid_idx = current_bid_ask(bids, asks)\n",
-    "        sale, price, bprofit, sprofit, buy, sell = buy_sell(self.db, current_bid, current_bid_idx, current_ask, current_ask_idx)\n",
-    "        step_data = [self.rnd, self.period, self.timestep, bids, asks, current_bid, current_bid_idx, current_ask, current_ask_idx, buy, sell, price, sale, bprofit, sprofit]\n",
-    "        self.db.add_step(step_data)\n",
-    "\n",
-    "        # compute reward, new state\n",
-    "        reward = np.array([0])\n",
-    "        if sale == 1 and current_bid_idx == 0:\n",
-    "            reward = np.array([bprofit])\n",
-    "        observation = np.array([self.timestep + 1])\n",
-    "\n",
-    "        # check termination\n",
-    "        self.timestep += 1\n",
-    "        if self.timestep == nsteps:\n",
-    "            terminated = True\n",
-    "            self.timestep = 0\n",
-    "        else:\n",
-    "            terminated = False\n",
-    "        return observation, reward, terminated, {}, {}"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "56d7618c",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "rnd = 0\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "env = TradingEnv(db, nsteps)\n",
-    "observation, info = env.reset()\n",
-    "for period in count():\n",
-    "    for timestep in count(): \n",
-    "        action = env.action_space.sample()\n",
-    "        observation, reward, done, info, _ = env.step(action)\n",
-    "        #print(f\"Rnd: {rnd}, Period: {period}, New State: {observation}, Action:{np.round(action,1)}, Reward: {np.round(reward,1)}, Period End: {done}\")\n",
-    "        if done:\n",
-    "            # If the episode is done, reset the environment\n",
-    "            #print('done')\n",
-    "            observation, info = env.reset()\n",
-    "            break\n",
-    "    if period == nperiods:\n",
-    "        period = 0\n",
-    "        break\n",
-    "env.close()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "8540088f",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "db.step_data.head(10000).groupby('current_bid_idx').sum()"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "55dfc29c",
-   "metadata": {},
-   "source": [
-    "### PPO"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "ef7b34a2",
-   "metadata": {
-    "scrolled": true
-   },
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "import numpy as np\n",
-    "from stable_baselines3 import PPO, A2C\n",
-    "from stable_baselines3.ppo.policies import MlpPolicy\n",
-    "from stable_baselines3.common.base_class import BaseAlgorithm\n",
-    "from stable_baselines3.common.evaluation import evaluate_policy\n",
-    "\n",
-    "# Define your environment and parameters (replace with your actual environment setup)\n",
-    "rnd = 0\n",
-    "period = 0\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.01\n",
-    "max_frac = 1.5\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "env = TradingEnv(db, nsteps)\n",
-    "eval_steps = 1000\n",
-    "training_step = 50000"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "daa5db6d",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "eval_steps = 1000\n",
-    "training_step = 100000\n",
-    "# Create PPO model\n",
-    "from stable_baselines3.ppo.policies import MlpPolicy\n",
-    "ppo_model = PPO(MlpPolicy, env, verbose=0)\n",
-    "\n",
-    "# Train the PPO agent for 10000 steps\n",
-    "ppo_model.learn(total_timesteps=training_step, progress_bar = True)\n",
-    "\n",
-    "# Evaluate the trained PPO agent\n",
-    "mean_reward_ppo, std_reward_ppo = evaluate_policy(ppo_model, env, n_eval_episodes=eval_steps)\n",
-    "print(f\"PPO mean_reward: {mean_reward_ppo:.2f} +/- {std_reward_ppo:.2f}\")"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "d8ba5b65",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "env.db.step_data = env.db.step_data.drop_duplicates(subset=['rnd','period','step'], keep='last')"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 28,
-   "id": "bcf11b97",
-   "metadata": {
-    "scrolled": true
-   },
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[0.71, 44.9, 63.0, 81.8]</td>\n",
-       "      <td>[42.5, 47.5, 7.0, 41.3, 17.3, 33.5, 31.6, 44.1...</td>\n",
-       "      <td>81.8</td>\n",
-       "      <td>3</td>\n",
-       "      <td>7.0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>44.40</td>\n",
-       "      <td>1</td>\n",
-       "      <td>40.30</td>\n",
-       "      <td>37.40</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[106.2, 27.9, 70.2, 18.1]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 17.3, 33.5, 31.6, 44....</td>\n",
-       "      <td>106.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>17.3</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>61.75</td>\n",
-       "      <td>1</td>\n",
-       "      <td>9.05</td>\n",
-       "      <td>44.45</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[102.3, 47.2, 78.7, 24.2]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....</td>\n",
-       "      <td>102.3</td>\n",
-       "      <td>0</td>\n",
-       "      <td>17.7</td>\n",
-       "      <td>9</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>60.00</td>\n",
-       "      <td>1</td>\n",
-       "      <td>8.20</td>\n",
-       "      <td>42.30</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[19.95, 39.1, 70.4, 19.6]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....</td>\n",
-       "      <td>70.4</td>\n",
-       "      <td>2</td>\n",
-       "      <td>19.6</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>45.00</td>\n",
-       "      <td>1</td>\n",
-       "      <td>37.20</td>\n",
-       "      <td>25.40</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[0.48, 49.8, 45.2, 31.6]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 31.6, 44....</td>\n",
-       "      <td>49.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>31.6</td>\n",
-       "      <td>6</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>40.70</td>\n",
-       "      <td>1</td>\n",
-       "      <td>15.10</td>\n",
-       "      <td>9.10</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>5</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>5</td>\n",
-       "      <td>[0.48, 48.0, 49.0, 29.3]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 35.4, 44....</td>\n",
-       "      <td>49.0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>31.9</td>\n",
-       "      <td>8</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>40.45</td>\n",
-       "      <td>1</td>\n",
-       "      <td>23.85</td>\n",
-       "      <td>8.55</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>6</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>6</td>\n",
-       "      <td>[0.48, 27.1, 51.7, 29.3]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 35.4, 44....</td>\n",
-       "      <td>51.7</td>\n",
-       "      <td>2</td>\n",
-       "      <td>32.9</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>42.30</td>\n",
-       "      <td>1</td>\n",
-       "      <td>19.00</td>\n",
-       "      <td>9.40</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>7</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>7</td>\n",
-       "      <td>[0.48, 44.8, 16.5, 19.7]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 33.5, 35.4, 44....</td>\n",
-       "      <td>44.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>33.5</td>\n",
-       "      <td>5</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>39.15</td>\n",
-       "      <td>1</td>\n",
-       "      <td>13.05</td>\n",
-       "      <td>5.65</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>8</td>\n",
-       "      <td>[14.77, 29.2, 11.9, 17.3]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 35.4, 44....</td>\n",
-       "      <td>29.2</td>\n",
-       "      <td>1</td>\n",
-       "      <td>35.4</td>\n",
-       "      <td>6</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>35.40</td>\n",
-       "      <td>1</td>\n",
-       "      <td>5.70</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>9</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>9</td>\n",
-       "      <td>[15.3, 14.6, 18.5, 18.8]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>18.8</td>\n",
-       "      <td>3</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "   rnd  period  step                       bids  \\\n",
-       "0    0       0     0   [0.71, 44.9, 63.0, 81.8]   \n",
-       "1    0       0     1  [106.2, 27.9, 70.2, 18.1]   \n",
-       "2    0       0     2  [102.3, 47.2, 78.7, 24.2]   \n",
-       "3    0       0     3  [19.95, 39.1, 70.4, 19.6]   \n",
-       "4    0       0     4   [0.48, 49.8, 45.2, 31.6]   \n",
-       "5    0       0     5   [0.48, 48.0, 49.0, 29.3]   \n",
-       "6    0       0     6   [0.48, 27.1, 51.7, 29.3]   \n",
-       "7    0       0     7   [0.48, 44.8, 16.5, 19.7]   \n",
-       "8    0       0     8  [14.77, 29.2, 11.9, 17.3]   \n",
-       "9    0       0     9   [15.3, 14.6, 18.5, 18.8]   \n",
-       "\n",
-       "                                                asks  current_bid  \\\n",
-       "0  [42.5, 47.5, 7.0, 41.3, 17.3, 33.5, 31.6, 44.1...         81.8   \n",
-       "1  [42.5, 47.5, 40.9, 41.3, 17.3, 33.5, 31.6, 44....        106.2   \n",
-       "2  [42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....        102.3   \n",
-       "3  [42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....         70.4   \n",
-       "4  [42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 31.6, 44....         49.8   \n",
-       "5  [42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 35.4, 44....         49.0   \n",
-       "6  [42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 35.4, 44....         51.7   \n",
-       "7  [42.5, 47.5, 40.9, 41.3, 42.3, 33.5, 35.4, 44....         44.8   \n",
-       "8  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 35.4, 44....         29.2   \n",
-       "9  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....         18.8   \n",
-       "\n",
-       "   current_bid_idx  current_ask  current_ask_idx    buy   sell  price  sale  \\\n",
-       "0                3          7.0                2   True   True  44.40     1   \n",
-       "1                0         17.3                4   True   True  61.75     1   \n",
-       "2                0         17.7                9   True   True  60.00     1   \n",
-       "3                2         19.6                4   True   True  45.00     1   \n",
-       "4                1         31.6                6   True   True  40.70     1   \n",
-       "5                2         31.9                8   True   True  40.45     1   \n",
-       "6                2         32.9                4   True   True  42.30     1   \n",
-       "7                1         33.5                5   True   True  39.15     1   \n",
-       "8                1         35.4                6   True  False  35.40     1   \n",
-       "9                3         37.2                8  False  False    NaN     0   \n",
-       "\n",
-       "   bprofit  sprofit  \n",
-       "0    40.30    37.40  \n",
-       "1     9.05    44.45  \n",
-       "2     8.20    42.30  \n",
-       "3    37.20    25.40  \n",
-       "4    15.10     9.10  \n",
-       "5    23.85     8.55  \n",
-       "6    19.00     9.40  \n",
-       "7    13.05     5.65  \n",
-       "8     5.70     0.00  \n",
-       "9     0.00     0.00  "
-      ]
-     },
-     "execution_count": 28,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.head(10)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 29,
-   "id": "d0023c4b",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>7351</td>\n",
-       "      <td>1650</td>\n",
-       "      <td>16877.63</td>\n",
-       "      <td>7083.4</td>\n",
-       "      <td>1505</td>\n",
-       "      <td>184</td>\n",
-       "      <td>212</td>\n",
-       "      <td>11408.045</td>\n",
-       "      <td>220</td>\n",
-       "      <td>1065.755</td>\n",
-       "      <td>5046.745</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>9325</td>\n",
-       "      <td>2618</td>\n",
-       "      <td>10312.10</td>\n",
-       "      <td>10421.7</td>\n",
-       "      <td>1791</td>\n",
-       "      <td>189</td>\n",
-       "      <td>136</td>\n",
-       "      <td>7014.050</td>\n",
-       "      <td>189</td>\n",
-       "      <td>2379.250</td>\n",
-       "      <td>894.350</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6034</td>\n",
-       "      <td>683</td>\n",
-       "      <td>10821.00</td>\n",
-       "      <td>4597.4</td>\n",
-       "      <td>1040</td>\n",
-       "      <td>189</td>\n",
-       "      <td>189</td>\n",
-       "      <td>7597.900</td>\n",
-       "      <td>189</td>\n",
-       "      <td>5493.500</td>\n",
-       "      <td>3146.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>8042</td>\n",
-       "      <td>2517</td>\n",
-       "      <td>9951.30</td>\n",
-       "      <td>8721.5</td>\n",
-       "      <td>1514</td>\n",
-       "      <td>67</td>\n",
-       "      <td>63</td>\n",
-       "      <td>2803.000</td>\n",
-       "      <td>67</td>\n",
-       "      <td>2665.500</td>\n",
-       "      <td>1780.000</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "                 rnd  period  step  current_bid  current_ask  current_ask_idx  \\\n",
-       "current_bid_idx                                                                 \n",
-       "0                  0    7351  1650     16877.63       7083.4             1505   \n",
-       "1                  0    9325  2618     10312.10      10421.7             1791   \n",
-       "2                  0    6034   683     10821.00       4597.4             1040   \n",
-       "3                  0    8042  2517      9951.30       8721.5             1514   \n",
-       "\n",
-       "                 buy  sell      price  sale   bprofit   sprofit  \n",
-       "current_bid_idx                                                  \n",
-       "0                184   212  11408.045   220  1065.755  5046.745  \n",
-       "1                189   136   7014.050   189  2379.250   894.350  \n",
-       "2                189   189   7597.900   189  5493.500  3146.000  \n",
-       "3                 67    63   2803.000    67  2665.500  1780.000  "
-      ]
-     },
-     "execution_count": 29,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.head(1000).groupby('current_bid_idx').sum()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 31,
-   "id": "71ecb576",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>111759</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6985</td>\n",
-       "      <td>15</td>\n",
-       "      <td>[20.92, 16.1, 17.4, 19.4]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>20.92</td>\n",
-       "      <td>0</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>37.20</td>\n",
-       "      <td>1</td>\n",
-       "      <td>10.70</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111760</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[59.62, 54.7, 51.7, 43.1]</td>\n",
-       "      <td>[42.5, 47.5, 7.0, 41.3, 17.3, 33.5, 31.6, 44.1...</td>\n",
-       "      <td>59.62</td>\n",
-       "      <td>0</td>\n",
-       "      <td>7.0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>33.31</td>\n",
-       "      <td>1</td>\n",
-       "      <td>37.49</td>\n",
-       "      <td>26.31</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111761</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[49.62, 51.9, 48.0, 44.8]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 17.3, 33.5, 31.6, 44....</td>\n",
-       "      <td>51.90</td>\n",
-       "      <td>1</td>\n",
-       "      <td>17.3</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>34.60</td>\n",
-       "      <td>1</td>\n",
-       "      <td>21.20</td>\n",
-       "      <td>17.30</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111762</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[39.05, 42.4, 75.6, 49.0]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....</td>\n",
-       "      <td>75.60</td>\n",
-       "      <td>2</td>\n",
-       "      <td>17.7</td>\n",
-       "      <td>9</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>46.65</td>\n",
-       "      <td>1</td>\n",
-       "      <td>35.55</td>\n",
-       "      <td>28.95</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111763</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[29.78, 48.7, 39.3, 45.8]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....</td>\n",
-       "      <td>48.70</td>\n",
-       "      <td>1</td>\n",
-       "      <td>19.6</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>34.15</td>\n",
-       "      <td>1</td>\n",
-       "      <td>18.05</td>\n",
-       "      <td>14.55</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111764</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[23.53, 25.1, 59.8, 74.6]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 31.6, 44....</td>\n",
-       "      <td>74.60</td>\n",
-       "      <td>3</td>\n",
-       "      <td>31.6</td>\n",
-       "      <td>6</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>53.10</td>\n",
-       "      <td>1</td>\n",
-       "      <td>31.60</td>\n",
-       "      <td>21.50</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111765</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>5</td>\n",
-       "      <td>[20.33, 29.8, 39.2, 28.9]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 35.4, 44....</td>\n",
-       "      <td>39.20</td>\n",
-       "      <td>2</td>\n",
-       "      <td>31.9</td>\n",
-       "      <td>8</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>35.55</td>\n",
-       "      <td>1</td>\n",
-       "      <td>28.75</td>\n",
-       "      <td>3.65</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111766</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>6</td>\n",
-       "      <td>[19.36, 36.2, 47.4, 27.3]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 35.4, 44....</td>\n",
-       "      <td>47.40</td>\n",
-       "      <td>2</td>\n",
-       "      <td>32.9</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>40.15</td>\n",
-       "      <td>1</td>\n",
-       "      <td>21.15</td>\n",
-       "      <td>7.25</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111767</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>7</td>\n",
-       "      <td>[19.73, 35.1, 14.8, 31.7]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 33.5, 35.4, 44....</td>\n",
-       "      <td>35.10</td>\n",
-       "      <td>1</td>\n",
-       "      <td>33.5</td>\n",
-       "      <td>5</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>34.30</td>\n",
-       "      <td>1</td>\n",
-       "      <td>6.80</td>\n",
-       "      <td>0.80</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111768</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>8</td>\n",
-       "      <td>[20.83, 18.3, 17.2, 19.8]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 35.4, 44....</td>\n",
-       "      <td>20.83</td>\n",
-       "      <td>0</td>\n",
-       "      <td>35.4</td>\n",
-       "      <td>6</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>35.40</td>\n",
-       "      <td>1</td>\n",
-       "      <td>32.80</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111769</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>9</td>\n",
-       "      <td>[15.62, 24.1, 20.1, 17.7]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>24.10</td>\n",
-       "      <td>1</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111770</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>10</td>\n",
-       "      <td>[16.67, 25.9, 12.4, 16.7]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>25.90</td>\n",
-       "      <td>1</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111771</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>11</td>\n",
-       "      <td>[17.69, 17.8, 11.8, 27.5]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>27.50</td>\n",
-       "      <td>3</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111772</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>12</td>\n",
-       "      <td>[18.63, 20.4, 20.2, 30.9]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>30.90</td>\n",
-       "      <td>3</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111773</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>13</td>\n",
-       "      <td>[19.48, 16.1, 13.8, 20.2]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>20.20</td>\n",
-       "      <td>3</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111774</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>14</td>\n",
-       "      <td>[20.24, 27.5, 13.3, 32.6]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>32.60</td>\n",
-       "      <td>3</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111775</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>15</td>\n",
-       "      <td>[20.92, 15.6, 11.9, 21.6]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>21.60</td>\n",
-       "      <td>3</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111776</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6987</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[59.62, 35.1, 77.0, 44.6]</td>\n",
-       "      <td>[42.5, 47.5, 7.0, 41.3, 17.3, 33.5, 31.6, 44.1...</td>\n",
-       "      <td>77.00</td>\n",
-       "      <td>2</td>\n",
-       "      <td>7.0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>42.00</td>\n",
-       "      <td>1</td>\n",
-       "      <td>40.20</td>\n",
-       "      <td>35.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111777</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6987</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[51.52, 40.2, 53.7, 46.1]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 17.3, 33.5, 31.6, 44....</td>\n",
-       "      <td>53.70</td>\n",
-       "      <td>2</td>\n",
-       "      <td>17.3</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>35.50</td>\n",
-       "      <td>1</td>\n",
-       "      <td>28.80</td>\n",
-       "      <td>18.20</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111778</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6987</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[40.54, 30.2, 55.8, 54.8]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....</td>\n",
-       "      <td>55.80</td>\n",
-       "      <td>2</td>\n",
-       "      <td>17.7</td>\n",
-       "      <td>9</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>36.75</td>\n",
-       "      <td>1</td>\n",
-       "      <td>24.55</td>\n",
-       "      <td>19.05</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "        rnd  period  step                       bids  \\\n",
-       "111759    0    6985    15  [20.92, 16.1, 17.4, 19.4]   \n",
-       "111760    0    6986     0  [59.62, 54.7, 51.7, 43.1]   \n",
-       "111761    0    6986     1  [49.62, 51.9, 48.0, 44.8]   \n",
-       "111762    0    6986     2  [39.05, 42.4, 75.6, 49.0]   \n",
-       "111763    0    6986     3  [29.78, 48.7, 39.3, 45.8]   \n",
-       "111764    0    6986     4  [23.53, 25.1, 59.8, 74.6]   \n",
-       "111765    0    6986     5  [20.33, 29.8, 39.2, 28.9]   \n",
-       "111766    0    6986     6  [19.36, 36.2, 47.4, 27.3]   \n",
-       "111767    0    6986     7  [19.73, 35.1, 14.8, 31.7]   \n",
-       "111768    0    6986     8  [20.83, 18.3, 17.2, 19.8]   \n",
-       "111769    0    6986     9  [15.62, 24.1, 20.1, 17.7]   \n",
-       "111770    0    6986    10  [16.67, 25.9, 12.4, 16.7]   \n",
-       "111771    0    6986    11  [17.69, 17.8, 11.8, 27.5]   \n",
-       "111772    0    6986    12  [18.63, 20.4, 20.2, 30.9]   \n",
-       "111773    0    6986    13  [19.48, 16.1, 13.8, 20.2]   \n",
-       "111774    0    6986    14  [20.24, 27.5, 13.3, 32.6]   \n",
-       "111775    0    6986    15  [20.92, 15.6, 11.9, 21.6]   \n",
-       "111776    0    6987     0  [59.62, 35.1, 77.0, 44.6]   \n",
-       "111777    0    6987     1  [51.52, 40.2, 53.7, 46.1]   \n",
-       "111778    0    6987     2  [40.54, 30.2, 55.8, 54.8]   \n",
-       "\n",
-       "                                                     asks  current_bid  \\\n",
-       "111759  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....        20.92   \n",
-       "111760  [42.5, 47.5, 7.0, 41.3, 17.3, 33.5, 31.6, 44.1...        59.62   \n",
-       "111761  [42.5, 47.5, 40.9, 41.3, 17.3, 33.5, 31.6, 44....        51.90   \n",
-       "111762  [42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....        75.60   \n",
-       "111763  [42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....        48.70   \n",
-       "111764  [42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 31.6, 44....        74.60   \n",
-       "111765  [42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 35.4, 44....        39.20   \n",
-       "111766  [42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 35.4, 44....        47.40   \n",
-       "111767  [42.5, 47.5, 40.9, 41.3, 42.3, 33.5, 35.4, 44....        35.10   \n",
-       "111768  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 35.4, 44....        20.83   \n",
-       "111769  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....        24.10   \n",
-       "111770  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....        25.90   \n",
-       "111771  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....        27.50   \n",
-       "111772  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....        30.90   \n",
-       "111773  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....        20.20   \n",
-       "111774  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....        32.60   \n",
-       "111775  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....        21.60   \n",
-       "111776  [42.5, 47.5, 7.0, 41.3, 17.3, 33.5, 31.6, 44.1...        77.00   \n",
-       "111777  [42.5, 47.5, 40.9, 41.3, 17.3, 33.5, 31.6, 44....        53.70   \n",
-       "111778  [42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....        55.80   \n",
-       "\n",
-       "        current_bid_idx  current_ask  current_ask_idx    buy   sell  price  \\\n",
-       "111759                0         37.2                8   True  False  37.20   \n",
-       "111760                0          7.0                2   True   True  33.31   \n",
-       "111761                1         17.3                4   True   True  34.60   \n",
-       "111762                2         17.7                9   True   True  46.65   \n",
-       "111763                1         19.6                4   True   True  34.15   \n",
-       "111764                3         31.6                6   True   True  53.10   \n",
-       "111765                2         31.9                8   True   True  35.55   \n",
-       "111766                2         32.9                4   True   True  40.15   \n",
-       "111767                1         33.5                5   True   True  34.30   \n",
-       "111768                0         35.4                6   True  False  35.40   \n",
-       "111769                1         37.2                8  False  False    NaN   \n",
-       "111770                1         37.2                8  False  False    NaN   \n",
-       "111771                3         37.2                8  False  False    NaN   \n",
-       "111772                3         37.2                8  False  False    NaN   \n",
-       "111773                3         37.2                8  False  False    NaN   \n",
-       "111774                3         37.2                8  False  False    NaN   \n",
-       "111775                3         37.2                8  False  False    NaN   \n",
-       "111776                2          7.0                2   True   True  42.00   \n",
-       "111777                2         17.3                4   True   True  35.50   \n",
-       "111778                2         17.7                9   True   True  36.75   \n",
-       "\n",
-       "        sale  bprofit  sprofit  \n",
-       "111759     1    10.70     0.00  \n",
-       "111760     1    37.49    26.31  \n",
-       "111761     1    21.20    17.30  \n",
-       "111762     1    35.55    28.95  \n",
-       "111763     1    18.05    14.55  \n",
-       "111764     1    31.60    21.50  \n",
-       "111765     1    28.75     3.65  \n",
-       "111766     1    21.15     7.25  \n",
-       "111767     1     6.80     0.80  \n",
-       "111768     1    32.80     0.00  \n",
-       "111769     0     0.00     0.00  \n",
-       "111770     0     0.00     0.00  \n",
-       "111771     0     0.00     0.00  \n",
-       "111772     0     0.00     0.00  \n",
-       "111773     0     0.00     0.00  \n",
-       "111774     0     0.00     0.00  \n",
-       "111775     0     0.00     0.00  \n",
-       "111776     1    40.20    35.00  \n",
-       "111777     1    28.80    18.20  \n",
-       "111778     1    24.55    19.05  "
-      ]
-     },
-     "execution_count": 31,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.tail(20)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 33,
-   "id": "c04ff6fd",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>4870227</td>\n",
-       "      <td>6683</td>\n",
-       "      <td>20826.3</td>\n",
-       "      <td>22494.2</td>\n",
-       "      <td>4203</td>\n",
-       "      <td>713</td>\n",
-       "      <td>120</td>\n",
-       "      <td>24999.16</td>\n",
-       "      <td>713</td>\n",
-       "      <td>22634.54</td>\n",
-       "      <td>2504.96</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>11044282</td>\n",
-       "      <td>12491</td>\n",
-       "      <td>54555.6</td>\n",
-       "      <td>52748.6</td>\n",
-       "      <td>10122</td>\n",
-       "      <td>936</td>\n",
-       "      <td>729</td>\n",
-       "      <td>33179.45</td>\n",
-       "      <td>936</td>\n",
-       "      <td>13339.75</td>\n",
-       "      <td>5191.35</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6482692</td>\n",
-       "      <td>2565</td>\n",
-       "      <td>53463.9</td>\n",
-       "      <td>20205.0</td>\n",
-       "      <td>5201</td>\n",
-       "      <td>939</td>\n",
-       "      <td>937</td>\n",
-       "      <td>36548.95</td>\n",
-       "      <td>939</td>\n",
-       "      <td>28492.45</td>\n",
-       "      <td>16720.25</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>11754986</td>\n",
-       "      <td>15769</td>\n",
-       "      <td>61421.8</td>\n",
-       "      <td>54622.1</td>\n",
-       "      <td>10728</td>\n",
-       "      <td>375</td>\n",
-       "      <td>318</td>\n",
-       "      <td>15315.40</td>\n",
-       "      <td>375</td>\n",
-       "      <td>13196.30</td>\n",
-       "      <td>9128.90</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "                 rnd    period   step  current_bid  current_ask  \\\n",
-       "current_bid_idx                                                   \n",
-       "0                  0   4870227   6683      20826.3      22494.2   \n",
-       "1                  0  11044282  12491      54555.6      52748.6   \n",
-       "2                  0   6482692   2565      53463.9      20205.0   \n",
-       "3                  0  11754986  15769      61421.8      54622.1   \n",
-       "\n",
-       "                 current_ask_idx  buy  sell     price  sale   bprofit  \\\n",
-       "current_bid_idx                                                         \n",
-       "0                           4203  713   120  24999.16   713  22634.54   \n",
-       "1                          10122  936   729  33179.45   936  13339.75   \n",
-       "2                           5201  939   937  36548.95   939  28492.45   \n",
-       "3                          10728  375   318  15315.40   375  13196.30   \n",
-       "\n",
-       "                  sprofit  \n",
-       "current_bid_idx            \n",
-       "0                 2504.96  \n",
-       "1                 5191.35  \n",
-       "2                16720.25  \n",
-       "3                 9128.90  "
-      ]
-     },
-     "execution_count": 33,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.tail(5000).groupby('current_bid_idx').sum()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 34,
-   "id": "d70f785e",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "array([[70.8, 68.2, 47.9, 27.2],\n",
-       "       [55.8, 52.2, 41.1, 28.4],\n",
-       "       [82.2, 64.3, 61.3, 20.4],\n",
-       "       [84.7, 33.1, 27.2, 26.2]])"
-      ]
-     },
-     "execution_count": 34,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.round_data.redemption_values.item()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 35,
-   "id": "01b4514e",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 1)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 36,
-   "id": "89b2c239",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "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XVxcjHvuuQcXXXQRdDod2rRpg5deesnt8Q64Pw/W9DUvLCzEzJkzq2z78OHDbq/v8UQIgaVLl6J3795ITEyETqdDamoqhg0bhuXLlwM4d44+evQojh49Wmkfn7+df//9F1OmTEFqaio0Gg0aNWqECRMmYN++fR73x+HDh/HSSy+hTZs20Ol0uOiiizBr1iy3x/LOnTtxww03IC0tDVqtFomJiejSpQtmzpwJi8Xi1XOmwOJUNKrC+aW0W7duXrVfsWIFxo8fD41Gg/HjxyMlJQWbN29Gr1690LFjxyrt33rrLdx+++1ITk7GiBEjkJCQgDNnzmDnzp149913MWPGjAtus7CwEDt27ED37t2rncLy4osvYv369RgxYgQuu+wy15e4goICDBo0CH/++Se6dOmCm2++GXa7Hd9++y0mTJiAPXv2VJozL4TAuHHjsGbNGrRo0QJ33HEHzGYz3nnnHezatavaWPv06YOPPvoIe/bsQfv27S/43C7EbDZj6dKliI6OxpgxY2AwGHDvvfdiyZIleOCBB6pcbD9lyhR8/PHHaN++PSZNmgS9Xo9Tp05h8+bN+OabbzBkyBCP27Lb7Zg5cyZee+01jB07Fh999BF0Ol2t+3XatGkTzGYz+vbtW227cePGYfv27bj22muhVquxZs0azJ49Gzt27MDatWt9LjDgjaNHj2LgwIHIzMxEv379cMUVV6C0tBRffvklrrjiCixatAi33nprlcf16dMHP/74IzZt2oSrr776gtvJy8vD3Xffjd69e+Pyyy9HYmIiTp8+jS+++ALDhw/H4sWLccstt1R5nMViwbBhw3Dq1ClceeWVUKlUWL16NR566CEYjcZK00wBx+jKq6++ipSUFNx2222u/bh161aYzWZoNJqa76wKnEnV+a/JihUr8M033+DKK6/E9OnTcfTo0Wr7MZvNuPrqq7F+/XqkpqZiwoQJiIqKQmZmJlatWoW+ffuiZcuWrn0xYsQIfPvtt2jdujUmTJgAnU6HH374AXfeeSe2bt2KDz74wNV3MM5BZ86cQa9evXD06FH0798fvXv3RlZWFmbMmHHBaaPXXHMNtm/fjiuvvBKjR49GUlISAOCPP/7A0KFDkZeXh2HDhmHs2LHIycnB6tWr0bdvX6xatapSEQNf94vT0aNHcemll6J58+a46aabkJeXh+XLl7t+tLjs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yMjIEAqFQhw8eLDKY5yff74kNr685i1atBAKhcLt+fSpp57yObFJS0vzar9Ul9g4j/8FCxa4vd95PFRMepz7o2Ly4nTo0CGhUChEWlqa6zZnYuPumKW6g1PRGjhRYS5+aWkp9uzZg4ceeggTJ07Enj17MHfu3Gof/8cffwAABgwYUOW+6OhodO7cucqw+MSJE3Hvvffi4osvxvXXX48BAwagT58+SExM9Dru3NxcAEBsbGy17S699NIqt23fvh02m83jdRXOebIVS17/8ccfUCgUbqdMXajEZ1xcHAD4ZT2bgwcP4ocffkDr1q3Rq1cv1+1XXHEFkpOTsXr1auTk5CAhIQEAEBUVhREjRuCLL75A586dcc0116Bfv37o0aOHxyl82dnZ6NOnDw4fPowPP/wQEyZMqNKmJv264+3r6O746tu3L5RKJf7880+vt+et3377DYBjupG7Y8R5/Zm7sug1eb337NmD559/Hps2bcLp06dhNBor3X/y5Mkqj4mOjkZGRkaV21NTUwGg0rz86t6nzv1YE6+88goAx7SziIgIdOzYETfeeCOmT59epa2796In//77LwoLC9GjRw80bty42rb79+9HXl4eWrZs6bHksl6vr/RaBfoctG/fPhgMBnTr1q3S9CGnvn37YsmSJR77drevnMfk0aNH3R6TzmuO9u7di+HDh9dovzh17tzZ7TGRmprqiuN8vh73znOqu/PngAEDqry39Xo9xo0bh8WLF+Pbb791Tbn7/fffsWfPHowZM8Z13gPO7a+ffvrJ7fVHZ86cgc1mw/79+9G1a9dK9/lyrPqiU6dO0Gq1bu+zWCxYtGgRPvnkE/zzzz8oLCyscp2RU3FxMQ4ePIjU1FS0aNGiSl8DBw7EE0884VNs3r7mRUVFOHToEFJTU92WXr7QtOLzTZw4Ea+99houvvhijBs3DgMGDECvXr18LlLkjPHvv/92+/7Yv38/AMf74+KLL650n7vzYvPmzZGamorMzEwUFBQgJiYG48ePxyuvvILRo0fj2muvxZAhQ9CnTx+3rwHJh4kNuYSHh+PSSy/FypUrcdFFF+G5557D9OnTXV+U3HFes9KoUSO39ycnJ1e57Z577kFCQgLeeOMNvPrqq3j55ZchSRIGDBiA559/3qtre/R6PQBU+QLozfadX0i2b9/u8YJbACgpKXH9f2FhIeLi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Jk6cWOVxqampuOyyy7Bx40aoVCp06NDB7ahtmzZt8M477+Dmm29Gu3btcMUVV6BVq1awWCw4duwYfv75ZyQmJtZo1N+dwYMH45NPPsGIESPQpUsXqNVq9O/fv8oPWu50794dffr0wcqVK9G7d2/07dsX2dnZWLduHVq3bu22gMa9996L1atX4/PPP0eXLl0wbNgwFBQU4NNPP0X//v2xdu1avzwvdx544AGsXr0an3zyCfbt24ehQ4eisLDQtW1vj22DwYC+ffsiIyMDXbt2RbNmzWA0GrF+/Xrs3bsXI0eORNu2bV3tnev2XHHFFejfvz+0Wi06deqEESNGID4+HitWrMCYMWPQs2dPDB48GO3atYMkSTh+/Dh+++035Obmur0mrk+fPujcuTPGjx+P6OhofPvtt/j777/RtWtXPPDAA652zz33HL7//nv069cP6enpiIiIwJ49e7Bu3TrExsbitttu888OptrxX4E1CiVwU+ZZqVSK5ORkMXLkSPHdd99VeYy7cs9O3333nejTp4/Q6/UiJiZGjBw5Uuzdu9dteck333xTjB49WqSnpwu9Xi9iY2NF586dxbx589yWRvXEWZL3/HUihDhX7vKHH37w+HiTySRee+010atXLxEVFSU0Go1ITU0VgwYNEvPnz6+yFovJZBJPPPGESE9PFxqNRjRr1kw88sgjwmg0eiz16SwJu2rVqir3OctTLl68+ILP9ZFHHhEAxKxZsy7Y9tZbbxUAxEsvvSTy8/PFE088IS677DLRuHFjodFoRHJyshgwYIBYtmxZlVLNnp7HDz/8ICIiIkRsbKzYtm2bz/1Wx7kfvv766yr3OcuvGo1G8X//938iLS1NaDQakZ6eLmbPnu22RKin53Ds2DExbtw4ERsbK3Q6nejWrZv4/PPPPa5jI4QQRUVFYu7cuaJLly4iPDxc6HQ6kZaWJoYPHy4WLVokSkpKKrX/9ttvBQAxf/58r5+/EI5y3T169BAREREiOjpaXH755eKnn37y+J6rruypp2PfbreL1157TbRp00ZoNBqRkpIiZsyYIQoKCqrtzx1P69i4U915w8nTa2axWMRrr70munfvLsLDw0VYWJjIyMgQt956a5VS13a7Xbz//vti0KBBIjY2VqjVatG4cWPRp08fMXfuXHHs2DFX22Ccg4QQ4sSJE2LSpEkiISFB6HQ60alTJ/Hee++Jzz77zO1x4jzeq5OdnS0efPBB0a5dO6HX60V4eLjIyMgQ11xzjfjggw+qlHb2Zb84S/96KtXrKb6aHvc2m028/vrromvXrkKv1wu9Xi+6dOkiFixYUO2aIB988IHrc+uFF16odhs7d+4UkydPFk2bNhUajUbExsaKdu3aidtuu01s3LjRq+fnjezsbHHDDTeIpKQkoVAoKp1TLrRfhXCsifaf//xHNGvWTGi1WtG8eXPx8MMPi9LSUo/vz8LCQjFr1izRuHFjodVqRevWrcULL7wgDh065HO5Z19f8/z8fHHnnXeKlJQUodFoXNveunWrqxT8hZjNZjFv3jxxxRVXiNTUVKHVakVCQoLo0aOHePPNN4XJZKrUvqSkREyfPl00adJEKJVKt3EfOXJE/Pe//xUZGRlCq9WKyMhI0bp1a3HjjTdW+Rx27o9Dhw6JF154QbRu3VpotVrRuHFjcffdd4vCwsJK7b/99lsxZcoU0bZtWxEVFSXCwsJEq1atxJ133llpHRySlySEm/F4ohAxbNgw7Ny5E4cPH/ZL1TF/69atG0pKSrBnz54qoxFjx47F9u3bcejQIb+t+h6KioqK0KJFC/Tu3Tvk5yhfc801+Omnn3Do0CGfy5VSaKrJOej//u//8PTTT+Obb77BsGHDAhxh4PG4J6fFixfjtttuw8KFC3H77bfLHU61pkyZgqVLl/pU3ZHqPl5jQyHthRdewNmzZ/HGG2/IHUoVq1evxu+//44XXnihSlIjyqe+3HvvvQ06qQEcF6M+8cQTWLt2LX7//Xe5w6mxP//8E6tWrcLs2bP55a4Bqe4c5K7wwa5du/Dqq68iLi7ObUWuUMPjvmFyd2wfO3YMc+bMgUqlwogRI2SIiojX2FCI69ChA9555x23lYfkZjAYMH/+fFx99dVV7pMkyauSsg3F7bffjoKCgoCWKQ20rKwszJkzx+3ilFR/VXcO6tatGzIyMtC+fXuEh4fjwIED+Oqrr2C327Fo0SLodDoZIvYvHvcN0zXXXAOLxYKuXbsiJiYGmZmZ+PLLL1FWVoZnnnnmggvrEgUKp6IREREFwBNPPIHVq1cjMzMTxcXFiImJQc+ePXHfffd5XQ2RqC5644038MEHH+DAgQMoLCxEREQELrnkEtxxxx0YO3as3OF5hVPR6icmNkREREREFPJ4jQ0REREREYU8JjZERERERBTymNgQEREREVHIY2JDREREREQhr86We87Pz4fVapU7DABAYmIiS/PKgPs9+LjP5cH9Lg/ud3lwv8uD+10e3O+1p1KpEBsb613bAMdSY1arFRaLRe4wIEkSAEc8LCAXPNzvwcd9Lg/ud3lwv8uD+10e3O/y4H4PPk5FIyIiIiKikMfEhoiIiIiIQh4TGyIiIiIiCnlMbIiIiIiIKOQxsSEiIiIiopDHxIaIiIiIiEIeExsiIiIiIgp5TGyIiIiIiCjkMbEhIiIiIqKQx8SGiIiIiIhCHhMbIiIiIiIKeUxsiIiIiIgo5DGxISIiIiKikMfEhoiIiIiIQh4TGyIiIiIiCnlMbIiIiIiIKOQxsSEiIiIiopDHxIaIiIiIiEIeExsiIiIiIgp5TGyIiIiIiCjkMbEhIiIiIqKQx8SGiIiIiIhCHhMbIiIiIiIKeUxsiIiIiIgo5DGxISKSkXrrVuC666A4dUruUIiIiEKaSu4AiIgasoQxYwAAMWfOIPfjj2WOhoiIKHRxxIaIqA5Q//673CEQERGFNCY2RER1gKK0VO4QiIiIQhoTGyIiGRkHDpQ7BCIionqB19gQEcmoYOFCJD/2GEpSUgC7HVDw9yYiIqKaYGJDRCQjERUFfPopik+fBoSQOxwiIqKQxZ8GiYjkYjRCcfYsYLXKHQkREVHIY2JDRCQTzbZtaNSpE9CpExQnTkB54oTcIREREYUsJjZERDJR5uU5/ueff9Do0ksR+eKL8gZEREQUwpjYEBHJRJGTU+lvZWamPIEQERHVA0xsiIhkosjNdfxPr14AANWRIzJGQ0REFNqY2BARyeT8xEZ59iyk4mIZIyIiIgpdTGyIiGTiSmxatoQtPh4AoDx6VMaIiIiIQhcTGyIimSid19gkJsKWng4AUB0+LGNEREREoYuJDRGRTIyDB8MwejTQsiWszZsD4HU2RERENaWSOwAiooaq5K67IEkS9CkpMF1+OWyJiTD36CF3WERERCGJiQ0RUR1gvOoqiOHD5Q6DiIgoZHEqGhGRHMxmKM6cAaxWuSMhIiKqF5jYEBHJQLV/P5IvuQRJ3bq5blOcPg3Nr78CBoOMkREREYUmJjZERDJQlpd6tpeXeQaAxCuuQMJ110F98KBcYREREYUsJjZERDJQlJd6rpjY2NLSAABKlnwmIiLyGRMbIiIZKNyM2Fida9mw5DMREZHPmNgQEcmg2sQmM1OOkIiIiEIaExsiIhm4EpuEBNdtHLEhIiKqOSY2REQycDdiYytPbJRMbIiIiHzGBTqJiGRg7tMHIjwcllatXLc5R2yUubmQioogoqLkCo+IiCjkMLEhIpJB6S23AAAkSXLdJiIiUDxrFmzJyYBSKVdoREREIYmJDRFRHVJ8331yh0BERBSSeI0NEVGw2WxQZGcDFovckRAREdUbHLEhIgoyRVYWki+9FEKjQdZ5hQKkoiKo9+4FhIC5Z0+ZIiQiIgo9HLEhIgoyZV4eAMAeFwdUuMYGALQ//oiEsWMR9fTTcoRGREQUspjYEBEFmSInB0B5YnMea/PmAFjymYiIyFdMbIiIgsy5ho2twuKcTra0NACOUR2psDCYYREREYU0JjZEREHmGrGpsDink4iIgC0xEQCgyswMZlhEREQhjYkNEVGQOUds3CU2wLmFOlWcjkZEROQ1JjZEREGmvEBiYytPbHidDRERkfdY7pmIKMjM3boBFgss7du7vd9afp0NR2yIiIi8x8SGiCjIyiZMQNmECQAAyc39xkGDYI+OhqVTp+AGRkREFMKY2BAR1THW9u1h9TCaQ0RERO7xGhtvWCxyR0BE9YgiOxswm+UOg4iIqF5hYlMN/eefo1Hr1sANN8gdChHVE5LBgOQuXdA4PR1ScbHHduqdO6H/9FMoTp4MYnREREShi4lNNURYGBTFxcDx43KHQkT1hLPUs9BqISIiPLaLmj0bsbNmQbt9e7BCIyIiCmlMbKpha9zY8T9MbIjIT1yLc8bFAZK70gEOtvLKaCz5TERE5B0mNtVwJTZZWZwPT0R+4RyxsSUkVNuOi3QSERH5holNNezx8RAaDSAElNnZcodDRPWAa8TGw+KcTkxsiIiIfMPEpjoKBWwpKY7/PXVK5mCIqD5Qlo/YXDCx4VQ0IiIin/i0jo3dbsenn36Kn3/+GQUFBYiLi8OAAQNwzTXXQCqfKy6EwKeffoqNGzeitLQUbdq0wS233IKU8gQh1NgaN4bq6FEomdgQkR8ovExsbOUjNsr8fEgFBRAxMYEOjYiIKKT5NGKzevVqrF+/HtOmTcP8+fMxceJErF27FuvWrXO1WbNmDdatW4dbb70VTz/9NLRaLebOnQtziF6jYuneHRg+HPbYWLlDIaJ6wNKhA8rGjoX5kkuqbSfCw2FLSgIAqDIzgxAZERFRaPNpxGb//v3o1q0bunTpAgBISkrC5s2bcfDgQQCO0Zqvv/4aY8eORffu3QEAd9xxB2699VZs374dffr08XP4gVf80EOISEmB+fRpQAi5wyGiEGcYPRqG0aO9als4dy5EeDisLVoENigiIqJ6wKcRm1atWmH37t04VT4tKzMzE/v27cMl5b88njlzBgUFBejYsaPrMWFhYcjIyMD+/fv9GDYRUf1nHD4cpgEDICIj5Q6FiIiozvNpxGb06NEwGAyYNWsWFAoF7HY7rr/+evTr1w8AUFBQAACIjo6u9Ljo6GjXfeezWCywWCyuvyVJgl6vd/2/3JwxSAYDUB4XBZ5rv9eBY6Ch4D4PDsWZM7DHxAAaDQDud7lwv8uD+10e3O/y4H4PPp8Sm99++w2bN2/GXXfdhdTUVGRmZuK9995DbGwsBg4cWKMAVq1ahRUrVrj+Tk9Px7x585CYmFij/vxu716gdWsk63QASz4HXXJystwhNDjc5wEkBNCiBWAwAEeOAOWVzwAP+z03F1i3DigrA267LXhxNiA83uXB/S4P7nd5cL8Hj0+JzYcffohRo0a5rpVp2rQpzp49i9WrV2PgwIGIKa/aU1hYiNgKF9sXFhYircIHeEVjxozB1Vdf7frbmdWePXsWVqvVl/ACQmG3o1FREVBUhNOZmYBWK3dIDYIkSUhOTkZWVhYEr20KCu7zwJNKS5FsMAAAsmw2iNOnq93vqt27kXjTTbDHxiJ7xAg5Qq63eLzLg/tdHtzv8uB+9w+VSuX1gIdPiY3JZIJCUfmyHIVC4XqxkpKSEBMTg127drkSmbKyMhw8eBBDhw5126darYZarXZ7X104COyxsYBOBxiNUJw6BZuHBI0CQwhRJ46DhoT7PHAUZ88CAOw6Hex6faWCJO72u3MtG0V+PpCfz5LPAcDjXR7c7/LgfpcH93vw+FQ8oGvXrli5ciX++OMPnDlzBtu2bcOXX37pqoAmSRKGDx+OlStXYseOHTh27BgWLFiA2NhYV5uQI0lAaioAQHn6tMzBEFEoc61hk5DgVXsRHg5bo0YAWPKZiIjoQnwasbn55puxfPlyLFmyBIWFhYiLi8Pll1+Oa6+91tVm1KhRMJlMWLRoEcrKytCmTRs88sgj0JRfKBuSUlOBAwe4SCcR1YoiJwfAhRfnrMialgZldjZUR47A0rlzgCIjIiIKfT4lNnq9HlOmTMGUKVM8tpEkCePHj8f48eNrG1vd4RyxYWJDRLWgyMsD4GNik54O7datUB45EqiwiIiI6gWfpqI1WExsiMgPlDUYsbGlpwMAVExsiIiIqsXExhudO8M4ZAgsrVvLHQkRhTBLq1YoGzsW5ksv9foxViY2REREXvFpKlqDdc01yO/dmxUtiKhWTEOHwuShQqQn5h49kPvBB7A2bx6gqIiIiOoHJjZERHWYPSEBpkGD5A6DiIiozuNUNB9IxcWAzSZ3GEQUohS5uYDZLHcYRERE9RITGy8lde2KlDZtWJmIiGoscdgwNE5Ph3rnTp8ep9m8GRHz50O9fXuAIiMiIgp9TGy8ZI+IAMDKaERUQ0KcW6DTh6poAKBfvRpRL7wA3aZNgYiMiIioXmBi4yV748YAAOXp0zJHQkShSCopgVQ+Dc0WF+fTY50ln5WZmf4Oi4iIqN5gYuMlmzOx4YgNEdWAwrmGTXg4oNf79FhrWhoAlnwmIiKqDhMbL9k4YkNEtVDTaWgA17IhIiLyBhMbL9lSUgBwxIaIakZZi8TGVj5ioygogJSf78+wiIiI6g0mNl7iVDQiqo3ajNiIsDDYkpMBcNSGiIjIEyY2XrKlp8M4eDBMAwfKHQoRhSBrairKrrkGpj59avZ4TkcjIiKqlkruAEKFrVkz5L3/vtxhEFGIMvfrB3O/fjV+fOGTTwIaDaxNm/oxKiIiovqDiQ0RUQiwXnyx3CEQERHVaZyK5iOpuBhSWZncYRBRiFHk5QEmk9xhEBER1VtMbHwQe+utSGnTBvrVq+UOhYhCTPz48WjcvDm0P/1Uo8dLxcWIeOUVRD/0kJ8jIyIiqh+Y2PjAHhsLgGvZEJHvXFXR4uJq1oFKhajnnkP4Bx9AysvzY2RERET1AxMbHzhLPitY8pmIfCGEK7Gx1TCxEXr9uZLPmZn+ioyIiKjeYGLjA65lQ0Q1IRUWQrJaAdRsHRsnlnwmIiLyjImND2wpKQCY2BCRb1zT0CIjAZ2uxv0wsSEiIvKMiY0PKo3YCCFzNEQUKpTOxKYWozWAY6FgAFByKhoREVEVTGx8YHdeY1NWBqmwUOZoiChUKPyU2FjT0gBwxIaIiMgdLtDpA6HXo2zUKIioKEg2GzhmQ0TesCUloey662Bt1qxW/bimonHEhoiIqAomNj4qeOMNuUMgohBj6doVBV271rofa4sWOPPDD7A2beqHqIiIiOoXJjZERKFCo4G1VSu5oyAiIqqTeI1NDUhFRa4580REFyLl5wNGo9xhEBER1WtMbHwUvnAhUtq2RdSTT8odChGFiLjbb0fjFi2gX7261n1pf/gB0ffdB/3y5bUPjIiIqB5hYuMje1ISAK5lQ0Tec1VFi4urdV/qvXsR/vHH0G7aVOu+iIiI6hMmNj6qtJYNEZEXnImNzQ+JDSujERERucfExke2lBQAgDIri4t0EtGF2e1Q5OU5/jchodbdVVrLhucgIiIiFyY2PrIlJwMAJKPR9WWFiMgTqaAAks0GwD9T0WzliY2isBCK/Pxa90dERFRfMLHxlVYLW2IiAE5HI6ILUzqvr4mOBjSaWvcn9PpzI8dHjtS6PyIiovqCiU0N8DobIvKWq3BAfLzf+nRdZ8PEhoiIyIWJTQ0Yr7gCpTfd5PrVtK6R8vIQO3UqNFu2yB0KUYNnj45G2XXXwTh0qN/6dCY2yuxsv/VJREQU6lRyBxCKSu66S+4QqhXxzjvQf/cdVCdOoGDePNhSUmCvo0kYUX1nbdsWBS+/7Nc+ix56CEWzZ0OEhfm1XyIiolDGEZt6RiouRvg77wAAVIcOIXHECIStWCFzVETkTyIujkkNERHReZjY1IQQkAoLoTx2TO5IqghfuhSKwkJYWrZE4eOPAwB0GzbIHBVRwyUVFgIGg9xhEBER1XtMbGpAvWMHUi6+GPHjx8sdSiVSWRnCFy0CAJTceSeMl18OAFD//jtLUxPJJOaBB9A4IwNh773nv06FQPSDDyL+uuv43iYiIirHxKYGnNerKE+fBux2maM5J+yjj6DMy4O1WTMYRo2CvXFjWNq1gyQEtN9/L3d4RA2SqypabKz/OpUkaL//Htpff4Xy8GH/9UtERBTCmNjUgK1RIwhJgmSxQJGTI3c4DiYTIhYuBACU/Pe/gMpRF8I4ZAgATkcjkosrsfHD4pwVORfqZMlnIiIiByY2NaFWw96oEYA6tJaNQoGi+++HqVcvlF17retmZ2Kj/fFHwGyWKTiihsv544c9IcGv/XItGyIiosqY2NSQa+XvupLYqNUwXH89clesALRa182Wzp1hi4+HorgYmm3bZAyQqAGy2aDIzwfg3wU6AcDavDkAQJmZ6dd+iYiIQhXXsakhW+PGwJ9/Oq6zqcsUChQ+9RTsjRrB3LWr3NEQNSiK/HxIQgDgVDQiIqJA44hNDdkaNwZQB0ZsbDbE3XQTwj780ONUM+PIkTD36OG67oaIgsN5fY0tNtbv779KU9HKkyciIqKGjN90a8jcqxdKTSaYL71U1jh0X38N3fffQ/P77zCMGgWh0cgaDxGdI3Q6lI0bF5D3pbVZMwhJgtDrIRUXQ0RF+X0bREREoYSJTQ0Zhw2DcdgweYMQApGvvgoAKL35ZojISI9N1X/+ibDPPoO5UycY6tj6O0T1la1ZMxTMnx+YznU6ZO3fDxEWFpj+iYiIQgwTmxCm3bAB6n/+gT08HCU331xtW83vvyN86VKoevdmYkNUTzCpqR2bDbBaq87kUyoBSTrXprqZfhXb2u3VL23mS1uFwvEvFNsK4dhv7khS5X6qa+tsr1SGZlvAcXz5oy1QeTarr20lyfFfd8d7bfr1tu2F3ke+tK3p+1OOtpJU+b5QO0eEIiY2NSUEpKIiKE+dgrVVq8pnpyBtP/KVVwAAZZMmQVzgwmTjkCGIfvxxaLZtg1RUxGkrREEgFRdDqFSAXi93KHSeN98Mx9y5gN2eUuW+H344g1atHN/a5s+PxPz5nkfDv/76LDp1sgAAFi6MwNy5ns+tK1bkoFcvx7WQS5eG4dFHYzy2ff/9XAwebAIAfPaZHvfc43mB10WL8nD11UYAwJdf6vCf/3j+PJg/Px/jxhkAABs3ajFliudqfXPnFmDKlDIAwG+/aTBunOeS5Y89Vojp00sBAH/9pcbVVyd6bDt7NnDbbY7/37dPhcGDkzy2/c9/SvDoo0UAgOPHlejVq5HHtlOmlGLu3EIAQG6uAp06JXtsO25cGebPLwAAlJVJaNWq6nHgdPXVBixalO/6u1mzxh7bDh5sxPvv57n+bt06GUaj+2+JvXqZsGJFruvvzp0bIT/f/XeJzp3N+Oqrc+vm9e6dhJMn3X+Fa93agu+/P+v6e8iQRBw4oC7/q/LzTE21YsuWM66/R4xIwM6d7qfOxsfbsHNntuvv8ePjsWWL1m3bsDA7DhzIcv09ZUocvv9e57YtAJw8ee565enTY/H1157PmQcPnoZe78gW7rknBitWeP6BZ9euLMTFOb7FP/poNN5/P9xj261bs3HRRY6sde7cKCxaFOGxrS/niO3bgSZNHP8faueIUBTCOZnM7HYkd+yIpCFDoMjOvnB7P9Ns3gzNn39C6HQocX5CVMOWlgZLRgYkqxXan34KQoREFDV3LhpnZCAiQNPRNJs2IX78eET9738B6b8+++wzfbW/WhIRUeiRhKib5XTOnj0Li8UidxiQJAkpKSk4ffo0zt9VSZdeCtXJkzi7Zg0s3boFNa74666D9tdfUTJ1Koqeesqrx0TNmYOIhQtRdu21KCgf7amrqtvvFBjc5/4Xe+ut0H/9NQqeegplU6e6bVOb/a779lvE3XwzzB06IOebb/wRcoNgtwPXXJOAXbs0WLfuLBITK8+piYwUrkF4gwEwmSSPfUVECNc0GqMRMBo9tw0PF1CrfW9rMgEGg+e2YWECzvoUZrNjBMITvV64ljq7UFudTkBX/iO7xQKUlnrX1moFSkrct5UkCWlpySgocBzvNhtQXOy5X60Wrl/nfWlrtwNFRZ7bajSO/QY4pgoVFnpuq1Y7Xg9f2wJAQYHntiqV4/hxKiyUPE5pUiodx6VTUZHkMTFXKICoqMpthZCQnJyMrKysSueZ89sWF0vVTiOMjj7XtqREqnY6WkxMzdqWlkqo7utfdLRwTdcqK5OqXXs8Kkq4plUZDBJMJs9tK7/vfWnr+RwhSRJatkzG2bOO4z3UzhF1hVqtRmKi51HgijgVrRZsjRtDdfIklKdPI9gpWPH990MsWIDS//zH68cYhwxBxMKF0H7/veMTItjT54gaGGe5Z38vzunkKvmcmen4xiV5/rCicxQKYPXqXCQlpSA72wrAc0Kp15/7snwhOp3jC76/22q1gFbrXVuNBtBo/N9Wra785bM6KpXntpLk2KcFBY6/lUrv+/WlrULhfVtJCkxbwLe2FZOGC6mYjHjTVpKA2FjAaBTV/oBSMXm6kIpJmT/bVkwMLyQsTMDbSw31euH1rGDf2no+R0hS5euHQu0cEYo4Fa0W5FzLxnzppch7/33YnBM3vXlMt26wR0dDmZcH9Z9/BjA6IgIARY5jTnzAEpumTSEkCYriYlcSRd6reKEuERGFPiY2tWBPcVyEJ/sind5Sq2EcOBDWpk2hyM+/cHsiqhWlc8QmwfNF17Wi0537geXIkcBsox6qrqoVERGFLk5FqwXXF4rTp4O2zZiZM2GPjUXJjBmweznfsKLCF16A0Ov5MyVRoFksUJTPtwnUiA3gKAyiOnkSqiNHYOnePWDbqU9Gj05AaamE998HUlPljoaIiPyFIza1EOypaKr9+6FfsQIRb70FRV7ehR/ghggLY1JDFATOUVEhSbDHei7DWVuVrrOhC7JYgD171Ni3T40A5ptERCQDjtjUgqVVK5ROmgRL69ZB2V7Ea69BEgKG4cNhre02LRYo8vJgb+R5TQAiqgVJQun110MyGgNaqMOang5bfDx/sPDSwYMqmEwSIiPtSE9XQIZq/UREFCBMbGrB1qIFCp95JijbUmZmQr9mDQCg5M47a9WX7ptvEDNzJszduyPvgw/8ER4RnceemIjCF18M+HZKb7sNpdOnB3w79cWuXY76qO3aWaBQ1LGapkREVCucihYiIt54A5LNBuNll8HSsWOt+rKmp0NRXAztL79AKivzU4REJAsFT+O+2L3bkdh06CD/OmlERORf/ESsJamoCKq9eyEFsMqY4tQphH36KQCg5O67a92ftVUrWFNTIZlM0GzeXOv+iKgqqbSUPxzUQc7Epn37alYLJCKikMTEppbipk5F0pAh0P30U8C2EbFwISSLBaZevWD2R9UjSYJxyBAAgG7Dhtr3R0RVRLz+OlJatkTU//4X8G3FzJyJpF69oN6xI+DbCmV2O0dsiIjqMyY2tRSMymgl06ejZNo0FM+c6bc+TRUTm2pWISaimnEtzhkTE/BtKU+fhurYMagOHw74tkJZaamEYcOMaNfOgowMjtgQEdU3LB5QS87ERhHAtWzsjRuj6Mkn/dqnqWdP2MPCoMzOhnr3blg6dPBr/0QNnbMkeyDXsHGypqdDu3kzVFyks1qRkQKvvVYAAJBYRY6IqN7hiE0t2VJSAARoxCaQIyk6HUz9+wMAtJyORuR3rhGbYCQ2aWkAwMSGiIgaNCY2tRTIqWgRL7+MuEmToN61y+99A0DZ+PEouu8+GK+6KiD9EzVkytxcAIA9ISHg27I2b+7YJhfprNbJk0rYbHJHQUREgcLEppYCldhIJSWIWLIEuo0boQzQr7CmoUNRMmsWrK1aBaR/ooZM4UxsgjBiY0tPB1A+YsNr5twSArjiigS0apWMAwc4C5uIqD5iYlNLdmdik5MDmEx+6zf8/fehKCiApUULjqgQhRqzGYrCQgCALRhT0VJTISQJipIS1xQ4quzUKQXy8pSwWCSkprJwABFRfcSfrWrJHhuLkqlTYW/UCJLNBr/8VmowIHzRIgBAyR13AEqlP3p1SyothfaHH6A8cwalN98csO0QNSSSxYLS66+HMjcXIghV0aDTwdK+PaBSQSoqAhITA7/NELNnj6PMc6tWVuh0MgdDREQBwcSmtiQJRU895dcuwz/+GMqcHFhTU2EYM8avfZ9PdegQ4m6/HfawMJROnAhotQHdHlFDIMLDUfjii0HdZs433wR1e6Fm1y4NAKB9e65fQ0RUX3EqWl1jNiPijTcAACUzZgBqdUA3Z2nfHrZGjaAoK4N2y5aAbouISC67dzt+x+PCnERE9RcTGz+QSkqg2rsXyqNHa92XftUqKE+fhq1RI5SNG+eH6C5AoYBx8GAALPtM5C9SWRmksjJ5Ns7iAW5xxIaIqP5jYuMHEa+/jqQhQxCxcGGt+zKMGoWCp59G0UMPIVgTwU1DhgAAdBs28EsRkR+EffQRUlq2RMxddwVtm+o//kBSnz5IGDEiaNsMFbm5Cpw+7bhW8eKLmdgQEdVXvMbGD1wln0+frn1nOh3KJk+ufT8+MPXtC6HVQnXsGFQHDrD8M1EtuRbnjI4O2jZFZCRUmZmwnz3r+IFCkoK27VBw771FyM5WIjKSP94QEdVXHLHxA7+sZWO3Q66V40R4OEy9ewMAtBs3yhIDUX2iyMsDEJw1bJysTZtCKBRQlJZCcfZs0LYbCuLj7bjnnhLMm1codyhERBRATGz8wJnYKGqR2Oi++QZJAwdCt2aNv8LyibF8Opp6/35Ztk9Un7hGbIKY2ECrha1JEwCAKjMzeNslIiKqI5jY+IEtJQUAoMzPh2Qw+N6BEIh49VWoDh+Get8+P0fnHcPo0cjeuhUF8+fLsn2i+kSZmwsAsCckBHW7trQ0x/aPHAnqduu6TZu0OHVKwUsIiYjqOSY2fiCio2EPCwNQs1Eb7Q8/QLNrl2MtmVtu8Xd4XhExMbBddJEs2yaqbxTOxCaYIzYArOnpAADV4cNB3W5dVlws4YYb4tG9ezLy8/mRR0RUn/Es7w+SVPPrbIRA5CuvAADKbroJ9rg4f0fnO5mu9SGqL5xT0WxyJTaciuayZ49jLbDGja2Ii7PLHA0REQUSq6L5SdnkyZBKS2FLTfXpcZrffoNmxw4IrRYlt98eoOi8o8jNRcysWVDv2YPsrVsBFQ8PIp/Z7TCMGAFlTg7siYlB3bS1TRuYO3VyJTgE7N7tSGy4MCcRUf3Hb65+UnrzzTV6nGu05vrrYW/UyJ8h+cweEwPN779DUVAAzY4dMPfsKWs8RCFJoUDhCy/IsmlT//4w9e8vy7brql27HIkNF+YkIqr/OBVNRqo9e6DdvBlCpULJjBlyhwMolTAOGgSgfLFOIqIQ55yKxsSGiKj+Y2LjLwYDVHv3Qv3XX14/xHrxxchZvhxFjzxSZy7cd5Z91jKxIaoZgwFSaSlkLcFlswEmk3zbryMMBmD/fsfEBCY2RET1HxMbP9Fu24akIUMQc++93j9IkmDu2xelMl9bU5Fp4EAIpRLqAweg5AXIRD7Tf/UVUlq1QtykSbJsP/ree5HSogX0q1bJsv26ZN8+NWw2CXFxNqSksHAAEVF9x8TGT3yuilaT9W6CQERHw3zppQAA3caNMkdDFHpci3NGR8sTgFYLyWKBimvZoGlTK157LR8PPFAMSZI7GiIiCjQmNn7iXKRTUVQEqaSk2raqAweQ3KULIp95Rt7pKh5wOhpRzSny8gAEfw0bJ2v5Ip1MbIC4OIGxYw246aYyuUMhIqIgYGLjJyIiAvaoKAAXHrWJWLAAiqIiqA4cQF38GdE4ZAhMvXrBVJ7gEJH3lM4RG7kSG65lQ0REDRTLPfuRrXFjKIqKoDx1CtZWrdy2UR496pr7XnLXXcEMz2u2jAzkrlghdxhEIUmRmwsAsCckyLJ9Z2KjPHLEMSJcB388CQarFXj77XB06GBBjx5mKJVyR0RERIHGERs/8uY6m4g33oBks8E4YAAsnTsHKTIiChZXYiPTiI2taVMIhQKKsjIozp6VJYa64MABFZ58MhpTp8Y11NyOiKjBYWLjR87rbJSnT7u9X3H6NMI+/RQAUHL33UGLq6YUOTnQf/45YGc1ISJvOYsH2GRKbKDRuMrHN+TrbJwLc7ZrZ4GCn3RERA0Cp6L5kfGKK2BLTYWpVy+390csXAjJbIapRw+Ye/QIcnQ+slqR1L8/FIWFsDZvDssll8gdEVFIMF5+OZQnTrh+6JCDadAgWHJzIfR62WKQ2+7dXJiTiKihYWLjR6ZBg2AaNMjtfZLBgLDlywGExmgNVCqY+vaF/quvoNuwgYkNkZeK5syROwQUzp0rdwiycyY2HTowsSEiaig4QB8kQq/H2fXrUfTQQzD17y93OF5h2WciCkV2O7BnD0dsiIgaGiY2/mSzQbV3L7Tff+92fRpbaipK7rwzZKoUmQYNgpAkaHbvhsLDdUNEVIHJ5FjHqi6sT2W3Q5GdLXcUssjMVKKkRAGdTqBlS6vc4RARUZAwsfEjyWxG0pAhiL/pJkhFReduLywMfiwlJdB/8gmk8sUCa8KekOCagqb7/nt/hUZUb2k3b0ZK69ZIGDlS1jiUx44hJSMDSX371o0kK8ic09DatLFAxQnXREQNBhMbPxJ6PewxMQDOlXyWSkuR1LcvYm+5pVZJhq+innwSsffei9g77qhVP5yORuQ9V6nn8sV65WJLTgYsFkfJ5zNnZI1FDpdfbsQXX5zFo48WXbgxERHVG0xs/Oz8tWzCPvgAyrw8qP/9FyI6Omhx6Natc/z3p59q1Y8rsfnlF8BsrnVcRPWZ3GvYuDTwks96PdCliwW9evGcRUTUkDCx8bNKiY3BgIhFiwAAxXfeiWAufZ3/5psAAGvTprXqx3rxxchfsABnfv0V0Gj8ERpRvaWsK4kNAGt6OgBAmZkpbyBERERBwsTGzyomNmHLl0N55gysTZrAMHZscONo1swRR1ZW7RbYlCQYxoyBPSHBT5ER1V/OxTnrQmJjK09sGtqITXa2Ag8/HI3lyxvuGj5ERA0VExs/cyU2J08i4o03AAAlM2YAanVw40hJgVAqIZnNUGRlBXXbRA2VcyqarQ78EGBNSwMAqA4fljeQIPv7bzXefz8cixdHyB0KEREFGRMbP3MmNuqdO6E6eRK2pCSUXX99UGOQ8vORMGIEJJsNAKA6frzWfYa99x7ir7sOqr17a90XUX3lusYmLk7mSM5NRVM1sKlozopo7dpx/RoiooaGiY2fmTt3RtFDD7n+Lrn9dkCnC2oMypMnodm5EwBgadcOsNZ+HQfdDz9A++uv0K1fX+u+iOorU79+MAwb5poKKidr69YwDB8Ow/DhcocSVLt2ORKbDh2Y2BARNTSs8O9nthYtUHLnnSi95RboP/kEhnHjgh6DsyKbuVMn5Hz9tV/6NA4ZAt2GDdBt2ICSu+7yS59E9U3xww/LHYKLLTUV+YsXyx1G0DlHbNq3Z2JDRNTQcMQmQIRej7KpUyHCw4O+beXJkwAAW5MmfuvTOHgwAED9xx+u6TZERHVJbq4Cp045fq/jVDQiooaHiY2fKc6cgWrfPmg3bJAtAXCO2NhSUhw3+GHlcXvjxrC0awdJCGi//77W/RHVOxYLpOJiv7zf/MZuh+LUqQazSKdztCY93YrIyDr0OhARUVAwsfEnIRA3ZQoSrrwS8ZMnQ/3777KE4RyxkcxmJF52GZL69fNLv87FOnUbNvilP6L6RL1rF1LatEFS375yh+ISNXs2krt3R/iSJXKHEhSHDjlGazgNjYioYWJi40fan36C5u+/IVkcH6rOkZNgc27X0rYt1Pv3OxboMxpr3a8zsdH+9BNg5oreRBW5KqJFRckcyTm28gV6G8paNjffXIpdu7Lw6KNFcodCREQyYGLjRxGvvALAkVAAgPL0aXkCUakgtFpYOnSAPTwckhBQnjhR624tnTvDetFFMF96KRT5+X4IlKj+cCU2dWANGydrA1ykMy7OjosusskdBhERyYBV0fxEs2ULtNu2QWg0MA4ZAs2ePbKN2OSuWOGY5y8EbE2bQrF3L1THj8OWkVG7jhUKnPn1V0Cp9E+gRPWIsg6tYePkXKRTmZnpOCdIkqzxEBERBRJHbPzEOVpTNn48bK1aAZBvKhoAxxcYhQLW1FRHLEeP+qdfJjVEbilycgDUrREbW9OmEEolFAYDFFlZcocTUH/8ocYNN8ThzTeDX4mSiIjqBiY2fqD+80/oNm2CUCpRMmMGbI0bA5BxKloFrjn2x4/7tV/liRNQ5OX5tU+iUOacimarQ4kN1GrYyn/cUGVmyhtLgP3xhwabNumwbZtG7lCIiEgmTGz8QL92LQDAMHYsbE2bVk5s7PagxqL79lskXHklIp97DsC5xEZ57JjfthH9wANo1KMH9J995rc+iUKdog5ORQMaznU25xbmtMocCRERyYXX2PhB0f/+B1P//q757LZGjVD0yCOOdWTsdkARvPxRdegQNDt3wlp+PY01IwOWiy92/WrrD9byqXa6DRtQevvtfuuXKJSZe/SA0OlgbdFC7lAqMQ4fDmubNrC0aSN3KAHlTGw6dGDFRiKihoqJjT9IEkyXXXbub7UaJf/9ryyhKJyLc5aPGpkGDMDZAQP8ug3jkCGIfvxxaLZtg1RYCBEd7df+iUJRyV13yR2CW2UTJsgdQsAZjcD+/Y6Ps3btuIYNEVFDxalotaDIyXGsNF6HOBfndCY2gWBLS4MlIwOS1epY04aISEb//quGzSYhLs6Gxo2DO/2XiIjqDiY2tRD19NNo1KMHdGvWVLlPefw4tBs2QLV3b1BjclZiszVpUvkOIQCb/9Z2MJUv1qnbsMFvfRKFLJsNUlGR431WA6KGj/OycyjOnIFm69agX/MXLLt2Oa+vsbCiNRFRA8bEpoaUJ05A//nnUBQWur1+JXzJEsRPnoywFSuCG5ebEZuYO+5AcsuW0H3zjd+2YyxPbLTff+/XhIkoFCmPHUNK27ZIbt/e68eUmEvw2K+PoceyHkidn4oey3rgsV8fQ4m5xL/BWa1o1K0bEsaOhSI727991xFlZRKio+3o0IHT0IiIGjJeY1NDEW+8AclqhalfP1i6dKlyv6syWhDXspEMBijz8x3brzhiIwQUBoNfK6OZu3WDPToayvx8qP/4A5bu3f3WN1GocVVEi4z0qn2JuQQj1o7AwfyDsOPcKMp7e97D5lOb8cXILxChifBPcOUln1WZmVAdOQJzSop/+q1Dbr+9FLfdVgqTSe5IiIhIThyxqQFFdjbCPvkEAFDs4YJhZ2KjCOJaNlJ+Pqzp6bDFx0NERZ2LxbmWjR8TG6jVKHrwQeQtXAhr27b+65coBCmdiY2Xa9jM2zGvSlIDAHbYcTD/IJ7b8Zxf43OVfK7Ha9lIEqDTyR0FERHJyecRm7y8PHz44Yf466+/YDKZkJycjBkzZqBFeYlTIQQ+/fRTbNy4EaWlpWjTpg1uueUWpNSjXwkjFi2CZDLB1L07zL16uW0jx4iNvXFjnNm82THPv8JE80CsZQMAZZMn+7U/olDl6xo23x39rkpS42SHHd8d/Q5P9n7Sb/FZ09OBH36Ash6uZXPe6Y6IiBown0ZsSkpK8Nhjj0GlUuGRRx7B/PnzMWnSJISHh7varFmzBuvWrcOtt96Kp59+GlqtFnPnzoXZXD/WFlDk5SHs/fcBACV33+3xE9WV2GRlBf8alPNisgZixIaIXBQ5OQC8G7ERQsBqr34RSYvd4teCArZ6vEjn55/r0atXEp5/3rtpgEREVH/5lNisWbMG8fHxmDFjBjIyMpCUlIROnTohOTkZgOMD++uvv8bYsWPRvXt3NGvWDHfccQfy8/Oxffv2gDyBYNNs3gzJZIK5Y0eYBg702M6elAShVEKy2aA4cyZ4AbrhGrE5ccLvVZFUBw8iYv586L7+2q/9EoUS54iNzYvERpIkqBTVD5arFCpIfhyGcC4eXB+nou3cqcaxYyoUF3PYhoioofNpKtqOHTvQqVMnvPTSS/jnn38QFxeHoUOHYkh5hawzZ86goKAAHTt2dD0mLCwMGRkZ2L9/P/r06VOlT4vFAovlXCUbSZKg1+td/y83ZwzO/5pGjcLZDh2gKC6GpKgmL1SpYG/UCMpTp6A6fRqWAK4r4xT5xBPQ/PYbSmfMgHHkSNft9saNIVQqSGYzlNnZsPsxFt233yLqhRdgHDQIpquu8lu/5+93Cjzu85pzXmMj4uO92n/Dmg3Du3vedTsdTQEFhjUb5tfXwda8OQDHiI0kBFDduSvE7NnjKPXcoYPVp33G410e3O/y4H6XB/d78PmU2Jw5cwbr16/HVVddhTFjxuDQoUN49913oVKpMHDgQBQUFAAAos9biT46Otp13/lWrVqFFRVKIqenp2PevHlITEz07ZkEmHNUCgDg7fVCzz4LKBRI6NEDCMbzOXQI2LkTGp2uaozDhgEqFRrFxnofvzcmTACefhq6X35BSlQUUGFaoj9U2u8UFNznNTBgAAAgqndvRHnx/po/Yj62nNmCvTl7YRfnkhuFpEDbhLaYP2I+IrV+nFqVmAjccw+kli2RkpQEqNX+61tGdjuwZ4/j/wcNikFKSozPffB4lwf3uzy43+XB/R48PiU2drsdLVq0wIQJEwA4kpBjx45h/fr1GFjNtKzqjBkzBldffbXrb2dWe/bsWVit1c9DDwZJkpCcnIzsw4chnToFW3mRBK+Uj2TBagWCUB0t8cgRqADkhofDfP72Fi8+9//+jCU2FompqVAdP468zz6Dadgwv3Tr3O9ZWVmBXbyQXLjPa2HcOMc/wOv316qrVmHe9nn47pijkIACCgxtOhQPdn8QJXklKIGf17O57z7Hf8uvB6oPjhxRorg4CVqtQHR0lk+nNh7v8uB+lwf3uzy43/1DpVJ5PeDhU2ITGxuLiy66qNJtF110EbZu3QoAiImJAQAUFhYiNjbW1aawsBBp5XO8z6dWq6H28OthXToI9O+/j8g5c1B6++0oevRRucOpSggoyhfntKakBHXfGYcMQcS770K7YQOMQ4f6tW8hRJ06DhoC7vPgCFeH48neT2JOnzlVPvi4/72zc6fjI6xtWwtUKoGa7DYe7/LgfpcH97s8uN+Dx6eJ1q1bt8ap88oXnzp1ypVFJSUlISYmBrt27XLdX1ZWhoMHD6JVq1Z+CFcmRiPCFy6EZLfDWj5X3RuKnBxoN2yA9qefAhicg5SfD4XRCACweZoKIwSk0lK/b9tUPjKl27ABNfpmQRTKhIBUWFirYz8Y86+lwkKot2+HeufOgG8rWJzX17RrZ7lASyIiagh8SmyuuuoqHDhwACtXrkRWVhY2b96MjRs3Ylj59CNJkjB8+HCsXLkSO3bswLFjx7BgwQLExsaieyivTP/uu1BmZ8OWkoKya6/1+mGabdsQP3kyIp9/PoDBOTjXy7ElJLhdpU67cSOSW7VC3I03+n3bpp49YQ8LgzI7G+rdu/3eP1FdJhUWIuXii5HSvDlgMskdjkdhn3+OxNGjEfHqq3KH4jdJSXZ06mRGly71YzkBIiKqHZ+momVkZOC+++7DsmXL8PnnnyMpKQmTJ09Gv379XG1GjRoFk8mERYsWoaysDG3atMEjjzwCjUbj9+CDwmIB5s0DAJTMmAH48Dxca9kE4foaV2LTpInb++1xcVCUlQVmLRudDqb+/aH95RcoMzNh6dDB/9sgqqOcpZ6FRgNotTJH45mr5HM9Wstm2rRSTJvm/1FoIiIKTT4lNgDQtWtXdO3a1eP9kiRh/PjxGD9+fK0Cqyv0K1cCR4/ClpCA0htu8OmxzsRGceaMo4CAyufd7TXJboc1Pd3jVDnXWjZZWYDR6HZUpzYKn3kG9tjYelNtichbzlLP3izOKSdr+SKdysxMRzmxelTymYiICKhBYtOg2GyIeO01AEDp7bcD5evreMuekAChVkOyWBxT2TyMpviD8YorYLziCs+xxMXBHh4ORWkplCdOwJaR4dft25OS/NofUahwjtjY4+JkjqR6ttRUCJUKCqMRiqwsv65nJYfiYgkajajLg2RERBRk/MmuGqpDh6DIywNiY1E2ebLvHSgUsJXXLleeV3Qh6CTJNWoTkOloTgEqUEBUVynKyyfb6viIDVQq2MqrWtaH6WiLF4ejVasUPPusH9f7ISKikMbEphrWVq1wZts24MsvISIiatSHazqa3IkNAKtzOlqAEhvtDz8gqU8fxNx9d0D6J6qLFCEyFQ2Aa6qqKjNT3kD8YNcuNaxWCfHx9gs3JiKiBoGJzQWIiAigd+8aP95VQCDAiU3CsGFIuPJKKA8d8hxLaiqAwI3Y2OPjoTp61FHeug5XhyLyp1CZigacu86mPozY7N7tuJ6vQweWeiYiIgdeYxNgZRMnwjR4MMydOgVuI1Yr1P/8A8luhwgP99jMcsklMAwdCkvr1gEJw9K+PWyNGkGZnQ3tli0wDRgQkO0Q1SXWiy+GYfhwWNq3lzuUCzJedRWszZvD3K2b3KHUSl6eAqdOOT6+uIYNERE5MbEJMHOvXgHfhiI725HUqFSwly+W6o5h9GgYRo8OYCAKGAcPRviyZdBu2MDEhhqEshtuQJmPFRPlYu7RA+YePeQOo9acozVpaVZERnJRYCIicuBUtHpA5VzDJiUFUCpljcU0ZAgAQLdhQ61WYici8mTXLk5DIyKiqpjYBJrBAO2GDdAvXx6wTTgLE9i8Kd8qhKPSmyUwXwhMfftCaLVQHTsG1YEDAdkGUV0iFRWFVBKv/usv6D//HFJ+vtyh1JhzxKZ9eyY2RER0DhObAFMYDIifPBmx99wTsAvqVSdPAoBX6+Qk9e2L5A4doN67NyCxiPBwmMqLLeg2bAjINojqDLsdye3bIyU9HYrsbLmj8UrsHXcg9q67oN6zR+5QamzAACNGjSpDjx5muUMhIqI6hIlNgNljYyF0OgCAMisrINvwZcTGHh/viCWAa9kYxo5F6aRJMF16acC2QVQXSAUFkGw2SBYL7LGxcofjFVdltBAu+Xz99Qa88UYBundnYkNEROcwsQk0SXJc+4LAlXwW0dGwNm8OW1raBdtag7BIp2HsWBQ+8wwsIV55iehClM5Sz1FRgEYjczTeqU8ln4mIiCpiVbQgsKWkQHXkSMASm+L770fx/fd7F0uAF+kkakhca9iUj4SGAmdiowzRxObwYSWEANLTbVDwpzkiIqqAHwtBEKxFOr1hDVZiY7VCs20b9KtXB3Y7RDJS5OQACK3ExhbiU9FefTUS/fs3wiuvRMgdChER1TEcsQmCupTY2IIwFQ0ANH/+iYQxY2CPjobh6qsBFQ81qn+cIza2hASZI/Geayra0aOA3Y5QG/ZwVkS7+GKrzJEQEVFdE1qfaCEqkImN8tAhNOrYEfHXXutdLM4RmxMnAJvN7/E4mbt0gT0mBorCQmh27AjYdojkFIpT0WxNmkCoVJCMRihPn5Y7HJ8YjcD+/Y4fSdq3Z+EAIiKqjD+jB4GpXz/kL1gAa0aG3/tWnjwJZW4u7OVfsC7ElpICw9ChsKWmQjKZIMLC/B6TIzAljIMGIWzlSug2bIC5Z8/AbIdIRtYWLWAYPhyWzp3lDsV7KhUKnnsO9sTEkKnk5vTvv2rYbBJiY21o3NgudzhERFTHMLEJAltaGgxeVCyrCaUvi3MCgFKJ/HffDUgs5zMOGYKwlSuh3bABePTRoGyTKJiMo0bBOGqU3GH4zDB+vNwh1IhzGlqHDhZIkszBEBFRncOpaCHOldh4sThnsJkGDoRQKqE+cADKEL1QmYjqjl27ziU2RERE52NiEyTan35C2NKlripK/qI8eRIAXGvleEUISHl5AV8pXURHw1y+SKdu48aAbotIDlJxMSCE3GH4THHmDPSrV0O3Zo3cofhkzx5HYtOuHRMbIiKqiolNkET973+IeeQRqP7916/91mTEJnzRIqR06ICouXP9Gos7xiFDAACaLVsCvi2iYEvq0wcpaWlQ7dsndyg+Ue/di9j//heRL78sdyg+ufvuYtx9dzG6dWNiQ0REVfEamyCxp6QABw/6vTKaa8TG22tscG50JxiLdBrGjIG5Rw9YOnUK+LaIgspmgyI/H5LdHnIX4VvLr/kLtZLPl19uwuWXm+QOg4iI6igmNkESqJLP1hYtIAkB20UXeR9Ls2YAANXx436NxR17o0awN2oU8O0QBZuioACS3VGZK9QSG1uTJhBqNSSTCcpTp3w6fxAREdVVTGyCJFCJTU0qnLnWssnKAgwGQK/3a0xEDYFrDZuYGECtljcYX6lUsDZtCvWhQ1AeORISic2mTVpYLECXLmbExobedU1ERBR4oTH/oB5wJTZ1YEE8e2ws7BERAABV+VS2QFLk5SH6vvuQOHSoY9oLUT3gLARiC6HFOSuyOaejHTkibyBeeuWVCEyaFI/163Vyh0JERHUUE5sgCUhiU9NqTJIEW2qqI56jR/0Xjwf2iAjov/gC6j17oP7774BvjygYnImNPSFB5khqxpqeDiA0Ehu7/VxFtPbtWTiAiIjcY2ITJIGYiha2dCkadeqEqDlzfH6stfw6G2UQrrOBRgPTgAEAAN2GDYHfHlEQKPLyAAD2EB2xcSY2obDG1NGjShQXK6DVCrRsaZU7HCIiqqN4jU2QWFNTkb9ggSPBEQL+WDZbefIklDk5gMX3XzCNl18OW+PGsLZpU+s4vNrekCHQf/UVtBs2oPj++4OyTaJAsjVpAsNVV8HctavcodSIafBg5DZpAmurVnKHckG7dztGa9q0sYTc5UxERBQ8TGyCRa+HYcwYv3ZZk1LPTobrr4fBr9FUzzRoEIQkQbN7NxSnTzvKXxOFMNPll8N0+eVyh1FjttRU15TUus6Z2HAaGhERVYdT0UJYTRbnlIs9IQGWSy4BAOg2bpQ5GiIKJbt2ORKbDh2Y2BARkWdMbLxRPpe+ttR//omwpUv9dgF9bUZsIASk/Hyod+2qeRECHxmHDAHA62yofpBKSkK+yp/2xx8R8corUP37r9yheCQER2yIiMg7TGyqoTx0CPEjRgC9e/vlC0zYxx8j5pFH/PPF3mqFMjsbQA1HbIxGpLRvj8QrroBUUFD7eLzZ5JAhsGRkwNKuXVC2RxRICVddhZS0NGi2bZM7lBoLf/ddRD33HDRbt8odSrU++SQX8+fno00bJjZEROQZr7Gphr1RI6j27weKi6H94QcYBw2qVX+28utKFH6ojKbIzoZks0GoVLAnJvregV4PW1ISlGfOQHX8OCxBWDnd2q4dzv70U8C3QxQMitxcSDYb7NHRcodSY66Sz3W4MpokARdfbMXFF7MaGhERVY8jNtUQEREomzABABD+1lu17s+fa9lIFgtMffvCfOmlgFJZs3iaNnXEE4S1bIjqFasVyvx8AKFb7hkArCG2SCcREVF1mNhcQNnNNwMKBbQ//wzV3r216sufa9nY0tKQu3w5cj/7rMZ9WMsTG1Uw1rKpyGiEZtOmoF3bE1RWKzQ//wzJEMyacw2bVJ5gBJOifJtCkmAPwmhnoNiaNwdQt9eyefvtcLz9djhOneLHFRERVY+fFBdgS00FrrkGABC+ZEnt+iqfiqY8dapOfKmXZcTGakWjSy9Fwg031DpRrIvUf/+NmHvvReLll0O9Y4fc4dR7itOnkThsGKKeeiqoF/IrcnIAwJHU1HDEtC5wjdgcPQrYbPIG48HCheH43/+icewYZ04TEVH1mNh4Y9YsAEDYqlWuLzQ1YS+/yF9RWgqpuLh2MfnhS5xzxEYZzBEblepc2ed6WB3NcsklMIwZA9WRI0gYMwaRzzwDmExyh1UvSQUFiL/xRqhOnkTYu+8i7qabEHfDDUHZtiuxSUgIyvYCxdakCYRGA8ls9ssUWX/Ly1Pg1ClHQtOuHQsHEBFR9ZjYeKNXL5i7dIFkMkFfi6lfQq+HPSYGQO2no8XecgsadewI3Rdf1LgP54iN6tixWsXiq3pd9lmhQMmMGSi75hpIdjsiFyxA4lVXQbV7t9yR1S8GA+KmToX6339hS05G7urV0P34I3SbNtX+RwMvKMpLwIfy9TUAAKXy3A8chw/LHExVzjLPaWlWREbKP8pNRER1G8f2vVT84IOQCgpgvOKKWvWT/8orEJGRrqSippQnT0KZmwuh19e4D2tGBkqmToW1RYtaxeIr4+DBAAD1H39AkZsb+l8OAah37YJ6926UXXcdRHQ0Cl59FcYrr0T0gw9CvXcvEq+6CsWzZqHkjjsAFd92tWK1InbGDGi3bYM9Kgq5H34Ia9u2sCUnQ5mVBfW//8LcvXtAQ7AnJsJw1VWwtm4d0O0EQ8FLL0FERrqmpdUlXL+GiIh8wW9YXjL36wfhh+tiTOWjFbVVq8U5y9kTE1H01FN+icen7TZuDEu7dlDv2QPt99/DcN11QY/B36LmznUUmDh0CEWPPgoAMF55JczduyP6oYegX7cO4UuXonTyZIgQvthcdkIg+uGHof/uOwitFnnvvgtr27YAAMvFF0OZlQXVP/8EPLEx9+4Nc+/eAd1GsFi6dpU7BI927XIkNh06MLEhIqIL41S0mrBYZL34XzIYXKVma7Q4Zx1Qn6ajaTZtgvbnnyHUapROnlzpPntCAvIXL0b+a6+h4MUXzyU1QoT8qvVyUP/xB8I+/hhCoUD+G2/A3LOn6z7LxRc72vzzj1zhkZ9xxIaIiHzBxMZH4UuWoFHPntD8/HONHq88fBhhS5dC9+WXNY5BUT5aYw8Ph4iKqnE/ACAVFUG9c2dwCwjgXGKj/eknwGwO6rb9SghEPfssAKB00iRHFb3zSRIMY8fCVGGBV/2qVYgfNy7o+z3UWbp2Rf4bb6Dw2WerTAsNZmIjlZbWm8RUkZODiAULEFl+HNcVZWUSjh51VJxjYkNERN7gVDQfKTMzoczKQsTixcjr39/nx2v++AMxjzwCU58+MF59dc1iKC88YGvSxLEsdy1EPfUUwj/6CMUzZ6L4/vtr1ZcvLJ07o/Cxx2AaOBBQq4O2XX/Tff01NH//DXtYGEruusu7B5nNiHr6aShPn0bi4MEomj0bZTfcUOvXsl6z2wGF43cY48iRbptYyxMb1b//VmofCHE33gjN778jb8kSmIYODdh2gkEyGBD1zDMQGo3jHFBHyleHhQns3ZuFf/9VISGhfiSRROS7L77QYe3aytcTR0XZ8eKLha6/582LxMGD7r/SarUCCxYUuP6ePz8C//zj/nuHJAFvvXVubbQ33wzHH39oPMb2+uv50JTfvWRJOLZurdpWpwOMxhjMn1+AiAjHbJ8PPgjDpk1aj/3Om1eIuDjHeW/5cj02bNB5bPvEE4Vo3NjRdvVqPb76ynPb//u/IqSlOUr7f/21DqtWeb5O+/77i9GqldXj/XUVExsflU6bhvD33oPu+++hOngQ1owMnx7vj0U6XYlNLa6vccXTrJmjzyBXRoNCgdLp04O7TX+zWhE5bx4AoPT2270v/avRIGfFCsTMmgXttm2Iuf9+6NatQ8Hzz8OenBzAgEOTZvNmRM2di7x33oG9fC0od6zp6bBHRcF20UVQ5OcHtCiFMicHks1W6xHTusDWuPG5ks+nTrkfdZRJeLhA164crSFqqAoLJdxzTwzKyir/UJWYaANwLrHZskWDbdvcJwrh4ZV/GNmxQ4Mff3T/5V+hqHyZwR9/aPD1156//Nvt55Kgv/9WV9NWj3nzClx/7d5dXVtg9uxzz+3ff6tv++CDxQAcz3H/flW1be+8swSAI7E5fLj6trfcUurxvrqMiY2PbOnpMF5+OfTffYfwJUtQ6OP0DWcyojh92nGdRQ1+pRexsTD16wdL584+P/Z81vIvMcEu+VwfhH32GdSHDsEWG4uS22/36bG2tDTkrliB8MWLEfXcc9B9/z2SBg9GwdNPO0YkOHoDAFDt3o24adOgKClB5IIFKJw7t5rGKmTt3h2UEQdFbi6AelDuGXCVfFYfPAjVkSN1KrEhoobt44/DUFamQIsWlkpftHW6ygnI7beXYswYg9s+zp8UMnVqKYYNM7pte/5H78SJZejXz/NadBWLnI4bV4bu3StPrZckCdHR0SgsLERY2LmYx4wxVLs2V0zMubbDhxuQnu555CQh4dziypdfbkRysufFlps0OXffwIFGREV5Hg1PSwu90RqAiU2NlN56K/TffQf9Z5+h6IEHIOLivH6srfwXZ4XRCCk/36fHOhmHDYNx2DCfH+c2HueIjUzXeui++AK6b75B8b33wta8uSwx1JSlbVuYevaEcdgwiMhI3ztQKlE6fTpMl12GmJkzodm5E3EzZuBMy5auaVUNmfLoUcTfeCMUJSUw9eqFwsce8+JBQZhGZTZDUej4Nc1WHxIbOH6wUR88COWRI0ANptgGwqxZMYiIsGP69BI0acKpaEQNkXMK1vTppZgwocxjuyuucJ+ouDNkiPeLZg8c6H3bfv3M6NevamKTkhKN06fLKtWc6tnTjJ49vbu+uHt3C7p3927k+pJLLLjkEu/atm9vRfv2oZm8VIfFA2rA3KsXzO3bQ2E0IvzDD317sFYLW/mUpdou0ukPzhEbZXY2YHD/a0cghX/0EcJWr4Zu/fqgb7u2LJ07I3fFCpROm1arfqytWyNn7VoU3XcfSm6/nUkNAMXZs4ifMAHKs2dhufhi5L3zjmOisrcCWLXQuTinUCohyhfcDXXW9HQAgOrIEZkjcTAagc8/1+OddyLkDoWIZPTJJ7lYsiQPY8Z4TmqIKmJiUxOShNJbbwUAhC9dClh9y3idozY1Tmz8WEVMxMbCXj7aoDpxwm/9eivkyz5Lkn9GCdRqlMyahaL//c91k/LoUUQ/9BCkoqLa9x9CpJISxN10E1SZmbCmpiL3ww+9vpZFeegQEq64AokDBwYsPkVODgDAHhcX0AIFweRcnLOuJDb79qlhs0mIjbW5LoolooZHpQKuvNKIWqxFTg1M/fhUloFh5EiUTp6MvPfe83kl+VoVEBACye3aoVHHjq6yz7UiSa459UEvIIBziY1m2zZIhYUXaF03RLzyCqLmzIFU/st9QAiBmHvvRfgHHyBxyBBoNm8O3LbqmOhHH4Vm1y7Y4uORu2wZ7I0aef1Ye3w8NLt2QX3wYMASQmX5614vrq8p5xyxUWZmyhtIuYoLc/JyM6KGJy9PCumVIEg+TGxqSqNB4dNPw9Khg88PLZk5EzkrV8LgoWxtdaSCAijKyqDMzfXbF6vSKVNQ+NhjsLZo4Zf+fGFLS4MlIwOS1epY06aOU5w9i4jXXkPEwoXQbtkSuA1JEoofeADWZs2gOnkSCePHI+qxxyDJMF0w2IoeeADmLl2Q98EHPl93JWJiYC3/4UD977+BCA/26GgYRoyAqV+/gPQvB0vXrjizYQNy1q2TOxQAXJiTqKGbMycaPXs2wjff+DAFmQhMbPzHhzn9lo4dYe7Ro0aFA5TlozS2hATfrjmoRtnEiSidPh228ukowWYKoeloEa+8AoXBAPMll8B45ZUB3Zb50ktxdv16lE6a5Nj2O+8g8fLLod6xI6DblZu9cWPkrF0LS6dONXq8az2bAC3UaenUCfkLF6Jo9uyA9C8HER4Oa9u2EGFhcocCgIkNUUOWk6PA6tV6ZGcry8s6E3mPiU0tKY8fR/R99yHmv/8NzvYqLs5ZTzino2m//x6w1d2TmPLoUVexiKKHHw5KSWYRHo7CZ55B7rJlsCUnQ3XkCBLGjIH2xx8Dvu1gCl+4ELo1a87dUIt9a2nbFgCgDlBiQ4FltQJ79zKxIWqoPvggDGazhEsuMXMdK/IZE5takoxGhH/8MfRr13o9P13Kz0fYe+8h4o03fN6ePxfndDGZoNq9G9pNm/zXpw/M3brBHhMDW2oqFGfOyBKDNyJfeAGSxQLjgAEw9+kT1G2bBgzAme+/R9k118DaujVMvXoFdfuBpF++HNFz5iD2v/+FavfuWvdnKR+xCVRiIxkMgL3+XdCuW7cO0Q88AO1338kaR3a2EjExdoSH25GeXnd/6CAi/zObgfffDwcATJsWmgtEkryY2NSStWVLGC+7DJIQCH/nHa8eoygpQcz//R8in3/e5y9IrqlofkxsVMeOIWnYMMTeemtAy+R6pFYje8sW5KxbV+3K8nJS/fMP9KtWAQCKH3pIlhhEdDQKXn0VOatXA9ryFZYtFoR99JHPlfnqCu369Yi5/34AQMmMGbC2b1/rPp2JjWrv3oCMAMb8979IadYM+uXL/d63nDTbtiH8o4+g/eUXWeNo0sSG33/PxrZt2fWl6BwReemLL/Q4c0aJRo1suOqq+n9NKfkfPzb8wFn6OeyTT7yqxGRLToaQJEhms2tNDG8FYsTGetFFABwJl5Sf77d+fVGjBS6DKHL+fEhCwDBiBCwdO8oai4g4t7ZHxIIFiHngASSMHg3VwYMyRuU79fbtiJ0+HZLNhrLrrkPxww/7pV9bejosbdrANGgQpJISv/RZkTInB5Ld7nUJ6lBR19ayqbjyNhHVf0IAb7/tGK2ZNKkUGo3MAVFIYmLjB6b+/WFp3RqK0lKELVt24Qeo1bAnJQHwveSztW1bmPr1g7V165qE6p5eD1t5SV3V8eP+67cGpJISSKV1b/i58MknUXrjjSgqH12oK2xpabBHRUHz559IHDYM4UuWhMQ0KdX+/YifMgUKoxHGwYNR8Pzz/rtmSanE2Y0bkb94MUR0tH/6rECRmwugfpV7BupeyWcialj27lXh77810GoFbrqJC3JSzTCx8QdJQukttwCAYzqaF9OCarqWTckddyD3k09guuwy3+OsLh7nWjZHj/q1X19EzZmD5A4doP/sM9li8MSekoLCefNgk6EkdnUMY8bgzMaNMA4YAMloRPTjjyN+3DgoZU5Qq6PIzUX8hAlQFBTA3KUL8hctAtRqucPymjOxsdWzxMbmHLE5dky2qY12O9C/fyJuuikOOTn8eCJqSC6+2Ipvvz2Dp58uQHx83f+BjuomfnL4SdmYMbDFxUF18iR0X399wfa28mtJarRIZwBYmzYFIO+IjT0+HpLZDN3GjbLFcL5ATGXyN3vjxsj76CMUPPMM7GFh0P72GxKHDJH9InBP7LGxMIweDUtGBnKXLoUI1JLSQvg81fOCTCYoiosB1L8RG1vjxhBaLSSLxXUtX7AdO6bEoUNq/PKLFtHR/GJD1NC0b2/F9dfz2hqqOSY2/qLXo+Suu1B0770w9+59weY1SmysVsBorGmE1cdTntgojx0LSP/eMA4eDADQ/vILpLI6MAxtsyFh9GjETp0KhUxf9LwmSSibNAln16+H6dJLAasVVh8XtwwahQJFjz6KnK++qtFaTt5Q7d6N5LZtkXDFFX7t1zlaI1SqgExzk5VCAWuzZgAAlUzT0XbtcozctWljCaVBPCKqJbNZ7giovmBi40elt96KknvugT0h4YJtnVPRFD4kNuq//kLjFi38/mUNODdiI2diY23VCtbUVEgmEzQ//yxbHE761auh3rsX2i1b6szChRdiS0tD7ooVyF29GraMDNftqj175Kl452S1IvzNNysl5hWLIPibLTUViuJiqE6ehFRQ4Ld+nSNA9vj4oKxjFGzW8kV65Rqx4cKcRA2PwSChV69GuOeeGBQW1r/zKgUXExuZGEeMQM6qVSj63/+8fozzy0YgvmSbu3VD4WOPoXT6dL/37TVJci3WqduwQb44AMBsdpTjhqMMsYiNlTceXyiVsHTo4PpTs307EocNQ+z06f6fmuUNIRD94IOIfuopxAWppLiIjoa1fBFb9b//+q9jrRaGESNgHDTIf33WIYXPPovT+/ejbMIEWbbPxIao4Vm5Uo+sLCV+/VWDiAhWQ6TaYWITANrvvkP8+PHV/uppa9IE5ksvhT052et+A7I4pzOeFi1QOn06TAMG+L1vX5jKExvthg2yjjCEffQRVMePw5aUhNJp02SLwx9U//wDKBTQf/klEgcNCvq1N5Hz5iH8k08gFAqU3nRT0EY6rAFYqNPasiXyFy5E4Qsv+K3PusTeqBFEeLgs2xbi3FS0Dh2Y2BA1BBVLPE+dWgqlUuaAKOQxsQmAiCVLoN282esFO73lSmzKf4muj0w9e8IeFgZldjbw55+yxCCVliLy5ZcBAMWzZoXMNDRPyiZPRs6XX8LSqhWUZ88ifupUxMya5dWaS7UV/vbbiHztNQBA4bx5MA0dGvBtOrkW6vRjYkOBk5WlQG6uEkqlQJs2TGyIGoLNmzXYt0+NsDA7rr++DlxbSyGPiU0AlDgX7Fy2rNo1WcI+/BCRzzzj9fQg5whQIEZsAEB14AB069bJNr8eAKDToWTGDBTOmQOULxyq+flnhH38seM6EUvgv/CEL14MZU4OrGlpKLvhhoBvLxgsHTvi7Lp1KJk+HUKSEPbpp0gcMgSaAK4yr1uzBlGPPw4AKHrggaBPb7K0bQsAUO/d67c+JYMBsNn81l9dI5WVIfrBBxF3ww1BL/lcVKRAjx4mdO5sQaAK5RFR3fL2245rLceNMyA6mtPQqPaY2ASAafBgWJs3h6KoCGHLl3tsF/HKK4hcsMDrBfECORUNAKIefxxxt9wCzebNAenfWyWzZqFs2jSgfBHTsOXLEXPffUgaOhQpbdogYeRIRD32GPSffQbV/v3+XZDSbof+iy8AOL6M16vSTDodih57DLmffw5rs2ZQnTzpWLMkADSbNiH27rshCYGSqVNRctddAdlOdVwjNv/+67dkJOrRR5GSlobwhQv90l9dI3Q6hH32GXSbNgX9B47Wra1YuTIXa9fmBHW7RCSPzEwlNmzQAgCmTq37SytQaGBiEwgKBUrKr8sIf/ttj1+q7D4u0ukasQnQVDTnIp0qGRfpdMfSsSNMffrAHhkJyWiE5vffEfHOO4idOROJQ4ZAMplcbdU7d0J55EjNr89RKHD2q6+Q/9JLMI4Y4adnULeYe/TA2fXrUTB3Lsquv/7cHf4ssa3XQ4SFwXD11Sh64glZKojZ0tJgGDoUpdOmQfJTmXRlTg4kux0iMtIv/dU5FUs+HzkiczBEVJ+9+244hJAwaJARGRn1dyScgksldwD1lWHcOEQ9/zxUmZnQbdgA47BhVdr4tJaN3Q7j0KFQnTwZuMTGWfK5jq1aX3rbbSi97TbAbofyyBFodu6E+q+/oN650/Els8K8lehHHoHmzz9hj46GpWNHmDt1gqX8n61xY+++YOt0MIwfH8BnJD8RHo6yKVNcf0uFhUgcNgyYOBH4z38AVe1ODebu3XH2yy8dx6pcV4Mqlch/912/dulcx6a+Lc5ZkTU9Her9+70eSfaX0lIJ4eGcikLUUNx5ZwliYuzo0YOL2JD/MLEJEBEWhtKJExH5+usIX7zYfWLjy4iNQoHCF1/0d5iVONeyCdT0pFpTKGBr0QKGFi1gGDPGcVvFkRkhILRaCI0GisJCaH/+GdoK6+GYO3RAzjffuP6WioogoqJcf2u2bYO5S5daf6kPRfqvvoLq+HHg2WcRmZ/vUxlyJ8XZs1CcPeuqRmarqwuE1oIzsbHV48TGlp4OAFAdPhy0beblSejYMRnNm1uxfv1ZaLVB2zQRySQhwY5ZszgFjfyr4X2DC6LSKVOg/e03x0XTQlQZLfApsQkCWx1YpNNnFfepJCH3888Bsxnqffug/vtvqHfuhOavv6Dat8811Q4AIASSevcGdDqYO3WC7aKLEP7227CmpyPn66/r71QjD8omTAA0GsTcfTfClyxB2bXXuhIUb0jFxYi78Uaojh5F3tKlMPfoEcBofaPIyYEiKwvW9u1r35dzxMaLRXhDlXORTlUQR2x271ZDCAk2m8SkhoiIaoyJTQDZGzdGTvmF6O74kthIpaUQCgUCWS7IWv7FX3nmDGAwBHRbAaXRwNKhQ6VFKmEwQFGhvLEiKwuKggJIQkB/+rTrdvXhw0gcOhRl48ahZNasYEYtO8N11yFm0yZIn3+OmIcfRs6qVYDCi8vwTCbETZsGze7dsCUkwNaoUeCD9ZJ6xw4kjhoFW0oKsnfsqF1nBgMU5VUO6/tUNCC419js3q0BwIU5iRqCDRu0WLgwAjNmlGDQINOFH0DkAxYPkJErsanwxdqT8LfeQuOMDETVYIqQt0RsLOzlIxWqEycCth1Z6PWwV/jCbU9JQda+fchZuRIlt9wCAHBOalMdO+b6AgsAUkEBEvv3R8yddyJ8yRJotm+H5M8L7euS+fNhDwuDZscO6D/99MLtbTbE3nUXtL/8Ant4OPI+/BC28l/86wJrq1YAHO8xKT+/Vn0py8uyC42mXo/oOaeiSWVl/q04WI3dux2/sTGxIar/liyJwG+/afHLLxyeJf/jiE0QSEVFCPv4Y0CpRGn5l2gAsLZujZxVq7wq3+ysiGaPjQ1YnJAkFD7xBER4OGzlpZbrMxEeDnOPHoh86SUAgOHaa1H45JNQ79pVKQlS79wJ9aFDUB86BKxc6XisQgFr69awdOyIsmuvhbl3b1meg9+lpqLkvvsQ9eSTiHrqKRiHDoWIi3PfVghE/+9/0H/5JYRajby33648SlYHiKgoWFNToTp+HOq9e2v1OgkAhpEjHV/2ZajyFiy2lBSc3ru30vVngbZrl2PEpkMHJjZE9dm+fSr8/LMWCoXA1Kme1/kjqikmNl4oLQXKyiS3FYQVCgGd7tzfZWVVv/BoN26B6skXgOgoSBMnuqp4lYowoH35tQjnDQBIkqg0E8x0PBdAGIrim8J43jYkCdDrzwVnMLiP1X1bQIhz/ZWNqFj+FwgL89z2fBXbGo2A3V7ztpIkufa7Tidc3yNNJsBm89yvXu99W51OQLd5E7SbN8OkDkfWfx+AXR0DdOnnaFD+mhhad4F4/0NodzoqseGvf2A/kwfsPQrsPQpT+x4wdHZsR3ngAOI/XAJrv94w9e0LU0QcrFbPMWi1wlU0zGIBLBbPbTUa4apr4EtbqxUwmz23VauFa7keqxU4e8MtsH/yBewJCTDkmWDXSW7b6l9+DXjvU5QgHPnPzYepa/9Kx7FKJaBxfF+FzQaYTJ5jqNjWbgeMRv+0VSoFLG3bQnX8OFR7/kFB5z7VtnVe3yGE431USexFKHnRsX6Nwnjh973Thc4RFY91oPL7vrp+zz9H+Pa+r66tEvoKSY0v7/uanCNKSiQcPuw4WFu0sLqesy/nE1/e9+e39XRuBxznCOdsTLMZ1b6XfWlb8X3vS9u6co7wtq27933F412prBvniGrf9zVs6813g5q0Pf9971tbz8e7P79HnK/ie3nRonAAwOWXGxEXZ68Svz+/R1RUm3PEhb5HVPe+r3i8a7Whe44IKaKOOnPmjDh58qTs/06dOiUcpzD3/wYNMlRqr9fbPLYdgB9E/rPPutrGxVk9tu3UyVSp32aq4x7btmplrtS2VSuzx7YXXWSp1LZTJ5PHtnFx1kpte/Uyemyr19sqtR00yFDtfqvY9qqryqpte+DAKVfb664rrbbtzp2nXW0nTy6ptu2W304LU8eOQgDirg7rqm37/ffZrn7vuaeo2rbb0E0IQNglSTyd8lK1bT/77Kyr37lz86ttu3RpjqvtSy/lVdt24cJcV9uFC3OrbfvSS3muY/3LLz23A4SYOzff0e/Ro+LbjndV2/bRRwtcMXz11Zlq295zT5Gr7fffZ1fbdvr0YlfbLVuyqm07eXKJKJo5UwhAHBl9a7Vtr7uu1NXvgQPVv++vuqqs0jFcXVtfzhG9ehkrtfXlHHHRRRaPbXmOOPfPeY44deqUmDGj+uN9y5YsV7/TpxdX29aXc8RXX537fHv00YJq29alc8TJkyfF0qU51bZ1nSNOnhSffXa22rZ15RzhbLtz5+lq24byOeLUqVOiWTPPMQTjHLFr1ykhSXaPbevaOcKr7xEN5Bwh978zZ854nT/wGpsgC1+yxPd560L4beV0OkcqLITQ6WAPD4elS1e/9Vs2ejQsbdtCEgKq03Wj4p3fqVQoevhhuaPwiqW8upt6/36ZIwkdunXrEDdhAiJefVXuUIionli2zLEgJ1EgSUIIIXcQ7pw9exYWi/zzrSVJQlRUCrKysuBuV3k7hCwVFyO5Xx+El+Yg94MPYBo0CGVlEqLvuQdhX6xF4YMPoazC9TcVh5Cl/HxEt+8OAQmnd+6qUq3Mn0PImh9/RPytt8DSug1yvvxS1qloycnJyMrKgk5nD9wQsiSgPHoUhsZpfp9mosjKgvTDL1Bs+g3aX36BoqAA2Tt2QEREOPbBO+8g4vA/sA7sB1PfvjBHxsk6zUSSJCQmpuDo0XPHulRQgMgXX4Q1IwNlkydDe/YklE1TAEnyaeqInNNMwk4dQaO+fWHXaHH47wMe1ym60DSTyHnzEL5kCUr+8x+U3TfLr1PRnMc6YK8DU9GA+BXvI+ahh2AcNAgn3/rA6/d9MM8RFdVkmokkSYiLS8GJE+7P7QCnojn5eyqa83hXKu114hzREKaiSZKE6OgUnD7t/ngP9FQ0iwXo1asRTp9WYt68Aowda/DY1knuc4Q3bb2ZiuY83rVae8ieI+SmVquRmJjoVds6EnLdFh7ueAN5kwNWfKNVviMCYsIYYPFihC9eDNOgQQgLE9ClxiEcZRA5RwEPj1WePIkwGGCLj0dYvA5A9XFUPOFciOOkd669qlUThKMM9pP7Uaa3A5A8tq2O4yRd87aSVHG/n7vd8aHiXb/etZVgS0uDBo43sTc0Gu/a2pOTgRuuge2Ga2Cx26HMzIQ+KdwVU8LXn0Hz99/A8mUQkgRLp04w9e8P04ABjoVCnZ/MbqjVji8Q3lCpHB/03rateKzr165D7CdvOyqetU9H3O23o+zaa1E0ezaUSoXn4/08SmU1743zKBT+bWtr1gwlt9wCa5s2CNNYAJ3ygv1KUtV+IwtPIQylsMeoYddVbu9tvO7aejrWfe3Xt/d99W0rlnz25X0fzHOEJ76eI7w9t3v7vg9kW1/e94E8R3jb1t373tPxLuc5omJsgWgL1JW23h/vtfke4Y4kAY88UoRVq/S47royr9arqivnCG/bunsvezreQ+0cEUo4FS2ISqdNg1AooNu0Cap//wXg3Vo2Qq9H6fXXw3jVVQGP0XrRRQAARUkJFLUsj1tnGQyImD8fUkFB8LapUMDWvHmlm4offBAlt90GS5s2kISA5q+/EPnqq0i45hok9e8Pjz+XBZFh3DiYu3SBorQU8VOmQFFY6EjGTCG09oBCgaInnkDZDTeg0s+ivnbjXJyzHq9h4+RMbJTHjzt+og8QsxnYs0eFOjA4T0QBpFIBY8ca8MEHeVyElwKKIzZBZEtNhfHqqwEhIMrH9+xeJDa2Fi1Q+OKLQYkROh1sjRpBmZ0N5bFjsHsq9RvCwpcuRdQLL0D/9dc4+913spXuNQ0YANOAAQAc09a0P/8M7aZN0G7a5BixccYlBBJGjoSldWvHiE7fvp5LMPubQoHChx9GwnXXQTIaYW3SBLnvvRe6i7fWgjOxsTWAxMaekgKh00EyGqE8cSJgaxPt3avG8OGJSE624fffswOyDSIiajiY2ARZ/uuvV1rN3ZsRm2CzNm3qSmwsnTvLHY5fSYWFiHztNQBwLMxZR9YjsScnw3DddTBcdx1gt0MqKXHdp9q/H5o//oDmjz8Q/vHHjmlrHTuem7bWtWu109ZqQyorQ/TTT5+bkChJrnLlIcVggHr3bigKC2EaMqRGXbhGbBIS/BlZ3aRQwNqsGdT79kF15EjAEpvdux0XY7RsGbhRISKS19NPRyIuzo4JE8oQFSX/TASq3zgVLdgUlXe5K7E5e9YxL8PdQ86edVydFyS21FQAgOrYsaBtM1giFi6EoqAAllatYLj2WrnDcU+hqLQ4orVpU+R++GHlaWt//43I115DwrXXImrevHOPtdv9N4XNYkHs7bdD8+efsEdHwxYfD9WJE4h4803/9B9E6t27kTh6NGIefLDGfShycgA0jKloQIXpaJmZAdvGrl2OxKZDB/fnPiIKbdnZCrz1VgTmzInGkSP8LZ0Cj4mNTJSHDiFqzhzYw8IgyiecKrOy3LaNve02NM7IgO7rr4MSm61ZM0c89SyxUZw5g/DFiwE4rm9xlRGp6/R6mC67DEWPP46zGzci6/ffkT9/PsrGjIEtPh6mfv1cTbWbNyPp0ksRfd990K1dCykvr8ab1WzdCu2PP8Ku0yH3/fdROGcOACD8ww8dJWhCiLVtWwCO91hN9olUVgZF+XNuECM2AGzp6bDHxEAK4PVUzhGb9u15kQ1RffT+++GwWCR062ZGp058n1PgMX2Wg92O+BtugOrkSVhatULOypWwJyTAlpLitrny5EkAgC0pyedNCSEg+TjdynDVVbC0bg1L+ZfB+iLy5ZehMBhg7tIFxmHD5A6nxuzJyTCMGwfDuHFVRmi0mzZBdeoUVB9/fG7aWqdOMPXr5/O0NXPfvshftAhCrYalWzdYunZFYVaWY7pcLS7Cl4OIiIC1WTOojh6Feu9emPv08a0Dsxllo0ZBUVgIERYWmCDrmKKHHkLRo48GrH+r1XGNDcDEhqg+MhqBDz5wnC+nTSu5QGsi/2BiIweFAmVTpiBq7lxELF6Ms+vXe77Ww2ZzjeTYmjTxqvsScwnm7ZiH745+B6vdCpVChaHNhuLBbg8iQhNxwcdb27Z1/cJdXygzMxH20UcAgKJHHqkz19bU2nlTG4vvvRemvn2h/eknaDdtgvrff6H56y9HxbXXXsOZ9ethLV+wUjIYIHS6qvvCbIZzIQrj8OHnbpcklN5+e0CfTiBZLr7Ykdj884/PiY2IiUHBG28EKLI6KsALGBw6pILRKCE83I70dC5ATFTfrFmjR26uEo0bWzF8eGiN8lPo4lQ0mZROmAC7Xg/13r3QbN7ssZ0iOxuSzQahUsHuxYhNibkEI9aOwHt73sOJkhPIKsvCiZITeG/PexixdgRKzA3zVxMRFoayceNgHDwY5l695A4nYIReD9PAgW6nrVnOS1ijH3gAST16IPr++89NW/voIyRcfjmUJ05cYEMC2u++q1TkoK6zlCd06n/+kTkSAs5dX9OuneX8/JyIQpwQwNtvO35InTKlrM4s9Ej1Hz9OZCJiYmAYPx4AEPnCC4h85hnoP/20SjtntTRbcrJX14TM2zEPB/MPwg57pdvtsONg/kE8t+M5r+LTbtyI8MWLXZWgQp09KQmFzz+PvHfflTuUoHJOWytYsABnN2yoVEJas3UrVCdPInzZMsT95z9o1KEDMGkS1AcOIGz58mr7jf6//0P81KmIfOmlIDwL/3Amdaq9e31/sMkU0PVc6qrYW29FUp8+ASkg0LGjBQ8+WITrry/ze99EJK+tWzXYs0cNnc6OCRNK5Q6HGhAmNjIqmTYNQpKg3bEDkQsWQO+mOIDr+pry6mkX8t3R76okNU522PHd0e+86if68ccRPXu2ayHReiNUCgYEmiTh7E8/IfejjypVW4PdDsOoUSieNavahxvLSyaHL1kCVYiMgLhGbPbv9zlJiViyBClpaYh++OFAhFZnqQ4fhiozE6ojR/zed6tWVtx1VwnGjw9exUciCo7YWDtGjjTg+usNiI1liWcKHiY2MrI1b15pTQ3F6dNV2ijLb/Pm+hohBKz26r+wWewWCC/KAVubNnVs//jxC7atyzRbtyJ22jSo9u+XO5Q65/xpa9m//w5s3IiCBQuqXLtzPtOgQTAMHw7JZkPMww87ihjUcbbUVBTOmYPcDz/0+bGKnBxIQjSYwgFOzpLPgUhsiKj+at3aijffzMdTTxXKHQo1MExsZFZy662wR0YCcL9Ip7VVK5Ref71XFztLkgSVovqJrCqFyqsqabbyxCak17IRwjHF75tvEP7223JHU+fZU1KAQYO8HtUqnD0b9rAwaHbscDuNss5RKFB6880w9+7t84XxrsU5G8gaNk7OhTmVfk5scnIU+OorHY4f5wgqUX1WX+r0UOhgYuMFb0Y4asrcuzfO/PgjAECZl1dlIU7ToEEofPFFlN1wg1f9DW02FAoPL6sCCgxr5l2ZY2diE8pr2Wg3bIB2+3YIne6CU6vId/YmTVB8770AgKinnqrVmjl1nTOxsTWwxCZQIza//abBbbfF4fbbY/3aLxHJq6xMwuOPR+HgQf5oQfJgYuNBibkEj/36GHos64HU+anosawHHvv1Mf9XFZMk2Bs1gr18iovSzXQ0XzzY7UFkxGZUSW4UUKBlbEs80O0Br/qxpqYCCOERG5sNUc8+C8BxLZM9OVnmgOqn0mnTYGnTBsr8fNf+rssUubnQf/aZq/S3L48DGt6ITaASGy7MSVQ/ffaZHkuWRGDKlHgE8DdhIo+Y2LhRsWTy8ZLjOFl8EsdLjgeuZLIkuYoD6Navr3SX8siRKqM41YnQROCLkV9garupSI1IRXJYMlIjUjG13VSsHbnWq3VsAMDWrJlj+yF6jY1+9Wqo//0X9uholMyYIXc49ZdajcJnnoE1La3ymjd11P+zd97hTVVvHP/c7DTdg7bsDbIRUBQFRUEERBRR3CJOVFREcODCgaKIA3+KIoLiAicgS0FBAUVkCIIM2dDSvbPv/f1xm7RpkzRt0yaF+3keHprkm3NPbu49Oe8571AfOkTcQw8RNXNm9d6XlQWAmJhYF90KWxwuV7Rjx8AePCNEMWwUFE4/RBHmzTMBMHZsseKGphASlMziXggkZfK086cF96ClSxumjz6i+K67ZMdUs5nkCy4AIO2ff5BiYwNqKlIXybTzpzHt/GlIkhRQTE1FXDs26owMuZCj0VjtNkKG1UrUq68CUDR+fMDnTaFm2M45h4x16+q8oGMwcJx1FpIgoD51ClV2dmA7MJKEqtTN7kwzbMSUFJwpKTiTk1Hl5SEmJdW6TUkqq2GjGDYKCqcP69bpOXBAS2SkyLXXKmncFUKDsmPjhWClTK4OeW++iaTXozl2DN2ffwJlyQTEiAikmJgatVsTowbkOjs5771H5g8/IJVWoW8oRCxahObYMZzJyRSPGxfq7pwZlDdqbLbQ9aMKJJPJvRsZcJpqux3z5ZdjvfDCM84VDZWKU3/9Rdby5UExagDS01VkZ6tRqyXOOksxbBQUThc+/FDerbnuuhKiohQ/NIXQEP5LrPWM15TJNs8Ur1aLhuJi2WhQqSQMhrLXSkp8GxKCIFF+48ND2+FspJE3YvryC/jfAsxdzyHGVZyzSRPMFpVPf1VBAKOx7EWzWaiGFiTJW58FSi4ZQUREIFqZ8lqLBUSx5lpBECguls+RwSC5t7StVnA6fbdrNEqUXHMNQnEx5phGFEsR4GPhyGCQ3FmNbTZwOHy3Wx2tXi+5E4tVR2u3g93uW6vTSW77oTpahwNsNt9arVbCZbs6HPI593X9lNc6nWC1lmvX6STik0+I/OADsr7+GlXTZHQ6H9oKaDSSWyuKYLEER6tWS+j18t+SJN8bee17YjycgW37fkp69ferldFT8ur/Sl8ASqjWfV+Vtvy1Dn7GiApUHE+qd98HY4yQqe4Y4XJDa93agSQJlPi4P6sznhiN1Rsjymv9Xe/KGCFTcYwIVOvtvi9/vavVUliOEcHQBnOMKI/feUSVWt/Xe23HiAMHNPz8swGQuP76Yo9+hWoeUZ7ajBH+tFXd9+Wvd72+4Y4RDQopTMnIyJBOnDgRkn9NX2sq8Sxl/5B8/hs40OzxXqPR6VN73nkWD218vMOntnvHQinn9dclCSTzgAFS06Z2n9r27W0e7bZvb/OpbdrU7qHt3t3qUxsf7/DQnneexafWaHR6aAcONPs9b+W1w4aV+NXu33/SrR09utiv9u+/09zaW28t8qv9/fd0t/aeewr9ateuPeXWTpxY4Ff7ww9l1+7UqXl+tYsXZ7q1L76Y61e7YEGWW/v66zl+te+9l+3Wvvdetl/t66/nSCdOnJBOnjwpLVvmWweS9OKLue52Fy/O9KudOjXPrf3hhwy/2okTC9zatWtP+dXec0+hW/v77+l+tbfeWuTW/v13ml/t6NHFbu3+/Sf9aocNK/G4hv1p62yM6G71HLcayBgxaVK+BJKUkuL7s0HdjxEnT56Uxo/3f70rY4T8zzVGnDhxQlqwIMuvVhkj5H/hNkacPHlSatHCdx/CaYxQ5hHhN0aE+l9GRkbA9oPiiuYFfymT6wt1VqbbFS2Q4px1geB0Ypo7F8OKFSE5fo1wOkPdA4VS1P8dDHUXFIKAUFgY1Pauu66Ed9/NoUkT5V5VUFBQUAgugiRJUqg74Y3MzEzsQczCUx1cWdHcCQRKXdEEVLSNbcuiYYvc2cWCtYWs3rePRsOGIhojUJlLIMIIl1+E6euvKZg0icx7JuLrm6orNxPjwoU0eW4y5ssuI3fevHp3RUtJSSE9PR2DQQxoWzhq+nTifltNwYsvYDv//FpvIddUG25byIG6jgiCQFJSKkeOpONrWKjKzQQg6vnnifx4AUKLJuStXQkGQ1i5maiOHSN54MVIGi3pO3bgasyXm4lx0SJinnwSy9Ch5L35JhB8VzTXtQ5i2LmiOX/+nfibbsbRvAWZa9ZU0jdUNxNBEIiPT+X4cd/XuzJGyATbFc11vavVouKKVk1tTV3RBEEgJiaVtDTv13sw5hFmMxgMlYtyNtQxIhBtIK5orutdrxcb7BgRarRaLUkBxnmGSZfDC1fK5BlbZsiJBAQRlaRicIvBTO49mUidCfB+x5e/0aqivFZok4KJEjCXYG/bFtRqxMOHAXA2buwxiFRF9bTg67Po26YCZbVs/GkrIg/SNdcKAphM8jkqP7jKPyqV21WdOEGjT99HsFoRSoPXfWm9odPJN3EotVqtPCkItlajkX/oA9XK57xqvVrt/XoXn3gQw6pvUB/Zj+Pddyl6+GGfWm+oVHWjFYRSbfsmWD6Zg/2ss4iI0YDg/Ufe1W5kQRqRFKOKFLD5OFZN73vXsbxd69Vtt67GCG3HFpgoQTqxj2KtDfwkE6nPMcIX1bnv9frAr3dljKi+1tt97+t6D6sxIshaCBdt4Nd7TeYRERFVKRvmGFGbeYSv672hjRENCcWw8YErZfLz/Z53W9t1ubklRUUhRkWhKiwkb8YM7OecQ8SCBTjatcPeuXOdHdcfzubNAVAfPSovT4VxUvqoWbMQrFas552HdcCAUHfnjEaKiiL/mWeIHz+eqLffxnzVVThL66HU6XGlAFObCwLWgQMDbtdVnNN5hqV6diGmpCAaDKgsFtTHjuFs3brGbe3eLQcYn3OOjT59wjd7noKCQmD8+aeOoiKBAQOs7t0IBYVQolyGAVDTlMnVxVWkU2W1giBQcttt5M+ciaNLl3o5fkUcTZvK/SkuRpWbG5I+BILmwAEivvwSgILHHw9rA+xMwTJiBJb+/cHhQPf773V2nCJbEU9tfIpzPz+X3p/15tzPz+WpjU8FtYiuy7A541I9uxAEnK1aAaA5dKhWTa1bp+ell6L54ANTMHqmoKAQYl55JYqbbkpgzhzlnlYID5QdmzDC2bgx2r17UZUmDRBKStD/9BOWESNC0yGDAWdKCur0dNRHjiDGx4emH1UQ9corCKKIecgQ7L16hbo7CgCCQP706QglJTg6daqTQ1SKhStl/j/z+e3kbywdsdQdC1cR9ZEjRCxaBCoVhY884vc4Z7xhAzhatUK7Zw+aw4ex1qIdV2HOrl2V+jUKCg2dXbs0bNqkR62WuPJKc6i7o6AAKDs2YYUzVY5pUZ88iZCdTaNzzyX+3nvRbtsWsj45yrujhSHabdswLl+OpFJROHlyqLujUA5ny5Z1ZtQAvLLllUpGDchFdA/kHmDGlhk+36vKzibqjTeI+OSTKo+jzsqS2z2TDZtSV0J1LXdsXDVsFMNGQaHhM2+evHA0bJiFxo29FzVXUKhvFMMmjHC5oqlPnkT311+oc3IAMH3wQej61KwZUJZAINwwfv89AOZRo3B06BDi3ij4QrNnT0BGRHVYfWR1JaPGhYjI6iOrfb7X0bEjkiCgzsxElZnp9ziq0vtQPENjbAAcZ52FrWtXxOTkGrdRXCxw8KDsJNCli2LYKCg0ZLKzVXz3nZxybdy44Ln+KijUFsUVLQBcVWO95Q4IZppGy6hbyLpiDGJSEqZFX7ifNy5bxqlHnsKZ2thHu3VXVVwzfjzFt92Go02bek/37DrvBoPv1Isljz6LrvcAHB06IJYIQU3TWFNtuKVprG4qV3+V2ANJ9+zClXJV/d9/xA++HAsGrJ364DzrLJ9aCCyVq1Yr4RAdIArgMHrVWS0aLBYJg0FuyzM9q4mC5mehOXIY27Z92C5o5DOVa875g1Cnp1MYnYpYes8GO92z61qHmlcVr6t0z2YzlAwZRfaQUaWd8tQHmsp161YtkiSQkuIkMVEMm1Su/q53ZYyQCXa6Z9f1rlZLSrrnamprmu5Z1vq+3qs7RnzySQRWq0CPHjY6dbL77ceZnu7Zdb3r9Q13jGhQBFzKs57JyMgIeaVTV7Vef5VZ66picM9GhyUJJHtqqiSB1DzKd7VnpWKwUjG44r+aVBU/efKktGyZbx3UvKr4+vMf9KutSVXxpq81lXiwhV/tmVJV/MSJE1LTpnaf2nAYI7Ra+XNfeqk5LMaIkydPSuPH+7/elTFC/ucaI06cOCEtWOD7twhqPkb88EOGX21NxogTJ05Iv/+e7ld7powRJ0+elFq08N2H6owRTZrYpeRk+bhvv52jzCPOgDEi1P8yMjICth8aoi12RuCqxWLt3x/Nl18iFBUBZ66Pv0LDpviuu2BjcNsc3GIwHx37OcAKAwp1gcMBU6bEuFfaDxzw/ZPiWnE8eVLNQw/Fsnu373o4AA89FOv+e8cO/9rJk2PcK4ubN+v8aqdOjUGvl1dkd+zwK2XatGhMJimgPrzyShTR0bL2n3/8a19/PYr4eNmNcu9e/z/Ds2dHsmiRrPV3fgE++MDEsmXyEv3hw2q/2vnzTaxZI28THDvmX/v55xFs2iRvVaSl+fdg/+qrCLZvl7+DjAz/2iVLjOzdK5+rnBz/2pUrDe5+FhT4z3y5dq2e7OxYQHaB9Mdvv+nc15q/HSOQry2X1uHwK2XHDq3HNeyP3bs9tf52xA4c0Hhoi4p8a48eVbu1ggCl4YJeSU9Xe7Sbnu77msjOVqHXg8Eg8ssveo4e9a0tKhI82vV3DdtsntpQjxEg7zT743QfI/r1s7n70VAQJEkKy3lBZmYmdnvo/bAFQSA6OtVnHZugbiGLIpEzZ6JOT0d77Aix2zaS8847RL/2GrZD6eQ+/Szmm2/20m7duaJFaKyYFi5EffQopyY9haTyfdME2xXNVT/IYBA9t4UtDpIuvxxVXh45c+Z4ZEJTXNEqawN1HREEgaSkVI4c8V2zqSauaC6t+p0PiXnlZZyxcWSuWoVULsteTdxMimxFDP9uBAcyTyCVi7URUNE2ti2Lhi0ixmjy6TqiW7OGhHvuxt6hI1nLlnl3M3GNQRWKUgbbFc11rYMYlq5okiQQO348hnXryHnnHWwXXURamoorr0wkN7fyj2PTpg5+/rksdmnkyESfP+QJCU5+/z3D/fj66+PZskXvVWsyiWzffsr9eNy4ONavN3jVCoLEvn3p7sf33RfL6tXe3RYBdu5Mc39Pjz4aw3ff+a42uHlzOnFx8jl6+uloPv/cd6rbdetOuQOrp0+Pcgdce2PFikzatpVnzG+8Eck770T51H77bSZdusjaOXNMvPZatE/tp59mc8458mLZxx9H8PzzMT61c+fmMGCAnPtu8WIjTzwR61P79tu5DBliAeCHHww89FCcT+2MGXlcdZUZQRDYujWFa6/1KeXZZ/O58UbZ53HTJh233OJ7Ue+xxwoYN64YgO3btYwe7TsWbsKEQh54QI4H2btXw/DhviuZ33lnEZMnFwKygXDJJY18am++uZinny4AICtLxXnn+Y5FGzWqhJdfzgfkSX/Pnik+tUOHmnnzzTxAHhc7dEj1qb34Ygvvv5/rftylS4rP8blvXyuffJLjftynTzJ5ed4Ny27dbHz9dbb7cf/+jUhL8z4hbt/ezg8/lFlPl12W5I6rq8iZMkYIgsD06Sl8+KFPaViPEX/8cYqmTZ2+O19PaLVakpJ836/lUXZsAqCsamzVNmDtKgYLNFr0Eaq8PByN5EHU2bQpRXfcQczUqYgn9iEE0H5NKgb7RNQQ/fzzCDYbxXfcgbO0tk1V1LZisK9qvXo9RHz1JTFHduOMj6eoZ3u0Ps5JbSsG17c2XKqKB3qtV6dSuFoN3HsLuu8/Q/vvv6jfmk7+DO9ZywKtFB6pi2TZyCXM2DKD1UdWYxftaFVaBrcYzOTek4nUeU42K1YKV/dsj4kSxLQDlOjslHcmdmkNK38iftw4LP37k/P55z77Upv73te1Xt12q3ffV3+MMGltGG25OE/upzhiAAsWmMjNVXPWWXZGjfIMvImKkjz6fuedRWRleZ84GY2e2rFjS9yT5Yq4rk8XN95YQv/+vhNQl9ded53Z/cMtIxAdHU1BQQEgERVVZrRfdZXZb4KD+PgyA/SKKyy0aeN7+T45WXT3Y8gQC40b+54kNG3qcGsvvdRKXJzvldKWLZ1u7YABVgyGfJ/adu3sbm2/fjamTvWt7dSpTHvOOf613bvb3NqePe1+tb17y1pBgJ49YepU+bx747zzrO52O3Rw+G33vPPK+tC6tX+tqw8AzZs7/Wp79Cg7D6mp/rWdO5dpExNFv9oOHcq+Y41G8qtt06ZMK0n41bZo4fS43h97rACnx6VWdr03buzw0D7ySCFWH7dRo0aih3bChEKfu2Dx8Z7a8eOLyMvzrm0YY0TlPld3jBAEuPZaSE31fb2H8xgRHd2wdmtA2bGpEkEQSE1NJS0tLaDJXm1JuvRStHv2IKlUCKJI+pYtSDExqE6dchfJq28aXXghmoMHyVq0CFu/fvVyTJ/n3Wwm+YILUKenk//ccxTfcUe99OdMoD6udd3mzSRedRUAmcuXY+/ePWhtS5JUvWK6koT64EGcLVvi3jarQMTChcROmYJl0CBy5s8PSj8rUt9jTE2Jeuklot55h6KxYyl44QUcDpg1K4rrriuhefPQr+hVl4Zy3k83lPMeGoJ13n/5RU+fPja3+5WCf5TrPTgoOzYNGGfjxmj37MFyySWICQmIjRqBWh0yowbkWjaagwdRHzsWsj64MM2fjzo9HUeTJhR7cctTCG9s55xD0bhxOJs3x965c1DbrpZRI78BZ5s2fiWu4pzOMzjVswvXGKQprWWj0cCjjxYG9N5Vqwz89JOeQYMsDB5cmxKfCgoKoeLkSRW33BJPZKTE+vUZJCY2vNV8hdMfxbAJM1y1bBydO1P46KOVXncZF676MvXSp9IinZojR+rtmN4Q8vOJmj0bgMJJk3AHRCg0KAqmTQt1FwLGZdicycU5XThatmQ73fnor5t42IY7JioQfvlFz2efmYiJkRTDRkGhgbJggQmnU6BTJ5ti1CiELYphEwD1VccGQEhoDkRgO+pZNNBsFjDOX4DpxRcxjxhB4WuvlWu3DpMHREg4Sg0b2+FTAeeqr4s6NpHvvos9rwRz2+5kX34NeOmLkjygsjbUdWz8ai0WBLMZdVJsSGpUqHfvJvKDD5BMJoqnP19Jq00vRCCCwqgUj2v/TKtjI0kCpyLaM4pvOFTYGvPz+Ux+XI6rCaRGhStbUNeuZf7r4VKjQqljo9SxUerYVD1GWCzw6ady3OLNNxd7vLc6tWmUOja+teUJtzGiQRG0wjNB5kyvY9MrYpd04sABtzaUNSqy58yRJJD6R/7pU1sf+ecLx46VbmW+X62Sf17+F251bJQaFXVboyLUY4Trn78aFSBJ69aV3XOhrlGh1LFR6tjAmTNGBLuOTV2MEUodm7J/4TZGhPpfderY+E8crxAyhJISot54I9TdAMDZooX8h6+0KfVEwQsvYL58SEj7oFA3qA8fDnUXECzes+woBAuJ1q0bXpIBBQUFT6obzqigUJ8oWdGqoF7r2ACYzcTdey8RG9ZjffEpSm67rfRpeVtYv3Il8Q/cjzM2joz168Fo9LqFfPKkirffjqSoqLLtGh0t8frrea7D8dZbkezf7z1/vMEgMfvVNLR79lDUqAXvftWCXbu8azUa+N//clGp5G3hefNMbN3q3RFfo4FZs/IwGiUsFli4MILff/eMmTEajZjNZtRqeOWVPGJjJaxW+PJLo8+89Go1PP98Po0aiVit8O23Rn76ybf2qacKaNrUic0Gy5YZWL7cew57tRomTy6gTRtZu3q13mcOe7UaHnqokLPOcmCzwS+/6Fi0yHudC7VaTonZvbsdux02bNCxcKF3rUoFd95ZTJ8+Nux2+PNPrc989yoV3HJLMRdcYMPhgO3bNbz3nvd89yoVjBlTwiWX2EhKSmXNmkzefNN3u1dfbWbIEAtOJ+zfr/aZG1+lgmHDzFx5paw9elTNiy96arW7d6M5cgjBaOTCaX0YfYMDUZSLOD77rO92+/e3ctNNJYiiXCzu8cdjvGoFAc4/38rYsSVIklzY75FHYj00hnXrEEqKsPXpQ88hsdxzTzGSJN9Hky49DsXF2Dt1QjJFebTbpYudBx+Ua2KUlAhMnhzj1eVFEOQUr5MmFbq1U6dGU1BQdm+6rnVBgFatHDzxRJl22rQosrIqZ20TBDkN7bRpcv0Ms1lg+vQoTp70nuEtKUlk+vR8t3bmzEgOH/buZ1B+jFi1Ss/tt8cDAl272irVNDAYJGbPzittF+bMifQYI06cUPP33zri4pxccIEtqGOEi5qMEcnJEvHxqbzzTq4yRgQ4RgwcaMXhgN27Nbz1lm9tVWOE63oPZIwo3+6gQRZGjzbX+xhRXturl81jjHjwwVi8zaKCPUaU19ZkjBAEgZiYVCZMKKr2GJGVpeLPP/Wo1RIXX2xBq63BPMLPGFGeYM8jXIRyHlF+LtPQxojp0/NJSAh9PJWSFS3I1F8dGyDCQFRBGjoslDRp4n7abbhceSn6GQlojh1DXPEVJTfdVKkJo1His89MLF7s/cKOjRXLaeGvv/Rs2OB9MNDpJGbPNmI/+2z0wPbtOn780fsNDvDOO7mAXJtm1y4tK1b4Lnb16qt5bu2ePb608nMvjd0OfVug18P+/f7bffxxeaKn18OhQxq/2gcfLCz9nHDkiH/tnXcWAU50Ojhxwr/2ppuK3e2eOuVf66oBotVCVpbar3boUAt9+sjavDz/2osvtgI2NBooKvKvPfdcm1trNgt+tV272hkyRB5M7XaVX61cSMyCWi370FfW9pL/mSHli/VwQ1tUKnkRwF+7rmtYpZL96f1pDQaJsWNLEAT578ra0l3AP8GZaAaK3XVslh7rLfttr6/cbvlaDhEREj/+aPC6kACQlWVl0qQy7c8/G8jIqDi5kPvVpYvNPWmJiJBYv97AkSPeh+rWrR2AfL0bjRIbN+rZs8f7hCE11emetBiNEn/8ofc5YXCd32PH1EycGAfIn3XnTh07d3pq5TEir7Rd32NEbq6apUuNdTBGyEyblg9I1RgjpNIxwr9WGSNk5DHCWjpG+L/vAxsj5OeqHiPKaNzYyejR5hCMEWXI04CyMWLlSoPP2I7gjxEyNR0jIiKo1RjhdAr89JN8bqo/j8hza+t/HiFT/TEimPMI+bmGNka4Cs82JBTDJgxRnzgBlGVI83xRTfHttxPz3HOY5s6l5MYbve4Lt2tnp3NnO1FRIsOGebrYVCwYOXZssc9iVyqVp/bGG4v9Frsq35XRo8307u17102vL2t75EgznTt7FrmLiYmh6N9/ifzfO7S69mOKfl+D2LgxQ4daaNXKt0tLfHzZgHvppRaSk32vNqSklL120UVWYmJ8F7Bq1qzsmP36WXn+ed9a+cdEpk8fm19thw5l2h497H615YOvO3Xyrz377DJt27YOv9pzz5W/U0mSaNHC6Vfbq1dZu6mp/rXdu5dpExNFr1rN339jWryI7n/vRn34eZwtWxITI/ltt337suvKaPSvLV88UaOhklb/yy8Y1vyErXt3ksZc5fHatGn5+Ap0bdLE8xp88skCnwGejRp5aidPLvQIPI6JiSE/X+5XQoKn9qGHCn1OhioWT7vvviJyc71rTSZP7V13FZGZ6X3i5BojjhxR43RCy5YObr21WA4klUQoMcsrPlQ9RixebOTvv3VcdVUJZ59tD+oYUZ6oqDJtdcaIQYMsJCf71ipjhIxrjABo0cK/tqoxovz1HsgY4aJz57JrpT7HiPI0b+55DdbXGFGeUIwROTkCarV83qHhzCPKU9MxorbziPLXe0MbI2JiQr9bU11q5Yr23Xff8dlnnzF06FBuK3WZstlsfPzxx2zcuBG73U737t254447iI2NrVbb4eSKVq/FlcxmGrdtC0DWwoXYLr64cp8KC0nu3RuQixxWVYsjGOh//hn9+vVY+/XDeumldX4813m3XHophjVrKLnySvL+9786P+6ZSJGtiFe2vMKPR35EFERUkopBLQYxpfcUInXet6iDiiQRf8MNGNavx3LxxeR88km9OnHrV68mYexY7B07krlmTdkLDoe8PKv1vroZLMK9gNvBg2r0enmSpt2xg4Srr0Zs1IiMTZsCbiM/X0CjIayK+oX7eT9dUc57aFDOe2hQzntwqI4rWo2TBxw4cIAff/yRFq7A8lIWLFjAX3/9xcSJE3nuuefIzc1l5syZNT3MGYf65En335qjR71qpKgocubP59SWLfVi1ADof/uNyPffR//rr/VyPADWr8ewZg2SRuO1po9C7SmyFXHFkiuY/898jhUd40ThCY4VHWP+P/O5YskVFNmK6r4TgkD+Cy8g6XQgCAhmc90fsxyOzp2R1GokjUbODVuK7q+/aNyyJYlDh9Zrf8KB8nlCWrd2uleenSkpqCwW1MePyzlIAyQmRgoro0ZBQaFqiosFjh3zvquroBCu1MiwsVgsvP3229x9992YTGVxHCUlJaxdu5Zbb72VLl260Lp1a8aPH8/evXvZt29f0Dp9OlPesCn/d0Vs552HFOU9ePPECTXZ2cFNeOeqZeMqEFrnSBI8/jgAJddf7656rhBcXtnyCgdyDyDiud0sInIg9wAztsyol34427Qh88cfyfn4Y6QI78GUdXbsxo1J27+frFWrcBcZAFRZWfIfdbxjE27s2KGlX79kfv21cvyN2KgRYkQEgiii9rHwoqCgcHrwxRcRnH9+I6ZN856kQUEhHKlRjM3cuXPp2bMn3bp145tvvnE/f/DgQZxOJ127dnU/16RJExITE9m3bx/t27ev1JbdbvdwORMEAWNp6jAhDHIKuvpQX30RmzbFeuGF6H/9FXVaWtXHlSTUhw7hbN3a/dSrr0axeHEETz9dwD33FPt5czX6Vbozpzl6tF7OheHHH2HjRiSDgaKHHw6La+F05McjP1YyalyIiKw+sprn+z1fL31xtmtHSL5lOWK40tPqnBwAxMTEOr3+6nuM8UdOjsBdd8WRlqZmwYJI+vfP9RQIAs6WLVHt3o328GHEdu38tvf22ybWrdNz660lXHFFeKXTDqfzfiahnPfQUN3zLorw0UcmRFGgZUun8n3VEOV6r3+qbdhs2LCBQ4cOMX369Eqv5eXlodFoPHZxQA6cysvL89ret99+y1dffeV+3KpVK1555ZWAfenqi5SUlPo5UGoq3HMP/PorEVlZRKSm+tbm5MCll8Lu3XDsGJSesx075Jf79o0mNTVIKy29egGgPXaM1JSUuo2BcDrh1VcBEB56iOSePevuWGcwkiQhCv4DA0VBJCUlpX4H5exsebfu/vuhW7f6O25FSv2xDM2akervPgwS9TbG+MDphLFj4fhxaNsWPvvMQGysl8/dqRPs3k18To48Bn3+ufx9mSpnYdy2DTZuhJtu0lMPp7BGhPq8n6ko5z00BHrely2DQ4cgNhYeeCAGk8l7umyFwFCu9/qjWoZNVlYW8+fPZ+rUqeh03tOEVperrrqK4cOHux+7JlCZmZk4HL6zW9QXgiCQkpLis45NXaCNiCARcBw+TGZamm+hJJEgiuisVgpffZWihx8mN1dg3z75BmrePJ20tCD1WacjRRAQioo49c8/iAkJwWnXhSQhFBcjRUaCzUbkyJFElZRw6tZbEf2dA4VaoaqiRq9KUpGenl5PvZGJeeghIhYtwrZtG9nffefhHlZXaP/4g+jnnkNMSiJ3wQIAog8fxgQURkRQVIfXYCjGGG/MmBHJqlVRGAwS772XhdnswFu4U1RKCpFA8datRDz2GILVSmFxMUWTJ3voJAm2bGkEqGnePIu0tNAngylPuJz3Mw3lvIeG6p73GTPiAT1jxhRRUFBIQcPL+hsWKNd7cNBoNHVTx+bgwYPk5+czZcoU93OiKLJnzx5WrlzJk08+icPhoLi42GPXJj8/32dWNK1Wi9aHD3s4XQSSFFgdm9qi2bULqTQoV52WhuR0+p3YFd95J7r77ydi/nwK772XbdvkHZqWLR3ExYleC4fVCL0eMTkZdXo6qiNHcMbH17pJoaQE3YYNGH7+Gf3PP+No3ZqcTz8FrZai8eOJevZZxIyMsLoOTjcGtRjE/H/me3VHU6FicIvB9X7+CyZNwrBsGbotWzB8+SXmMWPq/JiSXo9u+3ac8fFIogiC4I6xEePj6+Uc1NcY440ff9TzxhtyzN6MGXmcdZbd59hhL413023ahFC6q2VcvLhSgo/0dBVZWWpUKomOHe1hex+H8ryfySjnPTQEct737tXw6696VCqJsWOLle8pCCjXe/1RLcOma9euvPbaax7PvfvuuzRu3Jgrr7ySxMRE1Go1O3fupG/fvgCcPHmSrKwsr/E1CpWJu+8+tAcOIAkCOByocnP97o6Yhw8n+oUXUKenY/z+e7Ydvx3wrE8QLBzNm6NOT0d99Cj2GrqHqf/7D8PatXL66N9/d0+MAFS5uXKmJdduoFrJxlLXTOk9hd9O/lYpgYAKFe3i2jG592Q/764bxCZNKHzkEWKef57oF17AMngwUhAMaX/Y27dHUqlQ5+SgyshATE4uM2wSE+v02KHm6FE1EybEATB2bBGjRvnPSufo3BnzoEHoN26UH7duTdbXX1fSuSqLt2vnKCswrKCgEPZ8+KG8MD1kiIWmTX3XelFQCEeqZdgYjUaal2bHcqHX64mKinI/P3DgQD7++GMiIyOJiIhg3rx5tG/fXjFsAkGS3MU5s77+GnuvXnK1MH9otRSPHUv09OlEfvABWxvdA9SNYZM3axaSyVS9iZ7F4hGYHTN1Kob1ZWXcHU2bYr34YiwDB2Lr16/MqFGoFyJ1kSwdsZQZW2aw+shqdx2bwS0GM7n35PqpY+OF4nHjiFi8GO2//xL98svkz6jj7GxGI442bdDu3492926sycnYevVC0uncGQFPV5KSRAYPtnDokCagKtP2rl2xd+uG8ccfcbRsScaaNV7v2507ZcOmfFFFBQWF8MZmgx9/lH+zx40LTvIhBYX6pEZZ0fxx6623IggCM2fOxOFwuAt0KlSNkJeHqtSp3d6tW9VGTSnFN95I5BtvoNm9m21HZLe1nj2DP5lwtmwZkE598KDHrsypDRsQSwPnLJddhiCKWAYOxDpwII62beu1GKNCZSJ1kUw7fxrP93s+fHyBtVryp08n8aqrMH36KSXXXou9tChtXWHv1KnMsLn4YgpL042f7hiNEm+8kUdJiRDQuoIqM5PId98FoGDKFJ+LEf/8Ixs2Xbsqho2CQkNBp4Nff81g1SoD554b/AVSBYW6ptaGzbPPPuvxWKfTcccddyjGTA1w7dY4ExKgNOV1IEhxcZhHj0b38We80u0jNrS7iU6d6m8yIZjN6DZuRP/zzxh+/hnN4cMer+s3bMA8ahQAJbfdRsltt9Vb3xSqRzilpLSdcw4l111HxJdfEv3aa2R/8UWdHs9x1lnw/fdo9uyp0+OECzt2aOna1Y5KJa8tBFpAU4yOpnDSJAw//YT1ggsAMH77LRGffUbho49iO+ccAKKiJBISnIpho6DQwIiMlKp0SVVQCFeCvmOjUHNcBTmdTZqgX70a4/ffY+vbl5Kbb67yvUX33INm4ECGX3IJw1X5ddI/1alTRM6Zg1BcTP6LL7p3lAwrVxJ3//1unaTVYjvnHHlX5uKLcShuiAo1pODJJxGjoih86KE6P5a9UycAtLt3y0UcHI7T1jXyr7+0jBqVSP/+VubMya1eDIxej3bXLvQbNxLx1VcU33UX+nXr0G/ciOPbb92GzaxZecFLXqKgoFDn5OYKxMZKihOFQoNGMWzCCLdh07gxmoMHifjuO4CADBtnixY4S4to1glmM7pffyVyzhwkZOOraMIEAKwDBsixMgMGYL3kEqz9+slpmxUUaomYkEDBc8/Vy7HsnTrhaN4cR9u2aPbvp9HAgTiaNydj06Z6OX59kZWl4q674rHbBfR6CYOhGtaHKIJKhbNxYwD37qz5qquIWLwYw7Jl5E+bBqWZLpUJkoJCw2Hs2HiKi1W8/nqestOq0GBRDJswovyOjbO0mp3ruUD45hsjLVo46Na+EJ1aRIqIqF1/Dh+W3cvWrkW3cSMqi1w5XAAMP/3kNmzE+Hgyfv9dmcUo1C2ShG7LFmx9+tRJ82JqqtuI0ZX+L/lIRd9QcTjg3nvjSE9X07atnVmz8gK+bbVbtxI7cSIFTzyBo3VrANSHDgFg7dcPZ2Ii6qws9L/+StGFAznNTp2CwmnNjh1a/vxTj1Yr0aiRkglNoeFS95XvFALGevHFFDzyCNaBA90rooEaNmYzPPxwLCNGJOHsezWmjz6qfgfK+43YbCQNGkTs1KkY1q5FZbHgTE1FjJJrXRSWcz0DFKNGoW5xOom/5RYSR45Ev25dnR/udE31PGNGFBs36omIEJk7N5fIyAB3aySJ6BdfRLt/P8YVK9yJRDSlhg0aDZbSQsvG777jwQdj6d07maVLDT4aVFBQCCfmzpVTPF9xhZnk5Mp1zRQUGgqKYRNG2M47j6KJE7FedFGZYZOeDs6qV0927dLicAg0iiqmVd4OTPPmgb3qrWT1kSNEzJ9P/M03kzhkSNkLOh3Wiy7Cet55FDz5JBlr1nDqzz+xlWamUmdn1+xDKijUBLUaR2lhyJgnnpDTiNcVkoSqdEHBXw2phsaKFQbeeUdemJg5M4927RwBv1f/00/of/8dyWCgYNIk93ehPnECSmtRlYwcCcgxd7t2akhLUwduOCkoKISMU6dULF0qJyy64w4lxbNCw0ZxRQtTxORkJJUKweFAlZnpTpfsi61b5SDnnn1B3J4kF+z84QfMpZMNNxYL+j/+QL92LYa1a9EcPOjxsvroUZyldTty33+/0k6Ms1kzWXfkSC0+nYJC9Sl89FGMy5ahOXyYyHffpejhh4N+DP3atcQ98IB7Z/J0MWzMZoHHHosB4K67ihgxohqGodNJ9PTpABTdfjtikyYgSYgmE6riYjTHjuFo2xZ77944mjbFcjyXg4dkP7QuXRQ/fQWFcMCwdCls2waPPUZFP9FPPjFhtwv07m2je3flnlVo2Cg7NuGC04lu/XrU//0nB+hqNIjJyQCo09KqfPu2baWGTS8nxbfeCoDpgw+omJYo5plnSLjhBiLnzkVz8CCSRiPvyjzxBBk//ug2XACv7mWO0gQF6mPHavQxFRRqihQVRf4zzwAQ9fbbqCukFQ8GYlISqrw81BkZ8uPTxLAxGiU++SSHq68u4Yknqi7C6fHexYvR7t2LGBtLkcsFVRDc7miuOBsEAfNVV7G5+61IkkBKipOkJMWlRUEh5EgScXffDe+9R0SFtPlWK3zyiRyPO25cUSh6p6AQVBTDJkxQZWSQeP31NBo40G2MOBs3RlKp3P7+/ti2TV6B6dnTRsnNNyPp9ei2b6fRBReg3brVrbMOGIAzJYXi668n5/33Sd+5k+yvvqLovvtwdOpUZayMe8cmAGNLQSHYWEaMwNK/P4LVSszUqZUM99pib9cOSa1GKHWvcp5GMTbdutl5++28agX1C2Yz0a++CkDhhAlIMTHu10quuoqiu+/G2aSJ+7nCKVPYNPpFQNmtUVAIF1w18qDcQkQpK1cayMpSk5rq5PLL69DFV0GhnlBc0cIEd3HOlBRQqwHIXrAAKSrKXS/GFxkZKo4f1yAIEj162BEjEykZNQrTZ5+hOXwYw88/Yz/7bAAsl12G5fLLaxzsb73oItK3bUNMSqrR+880rr8+ngMHvH9/yckiy5aVGa233x7Hzp3eZ53R0RJr1mS6H48fH8uff3qvsaLTwYYNGe7HEyfG8uuvvuux/P57huuS4/774dtvGwHeDYaff850x008/3w0S5b4Dg5fvjzLvWL/2mtRfPml76Kz336bTdOmcizZ7NmRLFjgO6PfFy/P5ILf+2H4+WcWPHKE2b+e41P74Ye5dOsmT7A//TSCN97wnYb8nXfyOOcccLRpw6J9vXlc+xrirGik/+kraWfOzKd/f9n4+eEHA88+G+2z3RdeKOCyy+QJw9q1eqZMiamgEFCrwelsxNSp+Vx5pazdtEnHhAmxPtt95JFCxoyRi+ht26blrrviKmlKSlRotRIPPVTIbbeVALBnj4Zbbon32e64ccXcc4/sZ582/1fOTf8D1GqcHyTD3PLKZ7jhhhIe7iSv8qanq7jiikTy8uT1sj/+0NGnTyO3+qqrzDzxRCEA+fkCl17qewy5/HIL06bJO0tWK1xwQSOf2osvtjJjRlntrnPPbYToY6Oob18bb7+d537cqRPk53u/3nv0sPPBB7nl+pRIVpb3tcCOHR188kmO+/HIkQmcOKH2qm3RwslXX5XFKDa0MeLJJ2NYvbryPeGi6jGi7HpfvjyzTsaIzz7LcceQzZ1rYs4ck09t9ccIGyBnIZ0+PcqnNrhjRBlTpxZUe4zQbt3KZvpwDV8hzTcgLvW8/+PjnQwYYHEvelRnjDh8WM3o0b53tm+4oYSHH/YcI3wRjmPERRclUVzsfb4U2BghX+/t2sU16DGiIaEYNmFC+Ro2LqS4yhMVb7jc0Dp0cLh/UAqefBJn48Y42rXDeuGF5Q7k/UYKFMlkQjL5/pE401mwIIJ+/Wy0bSv/qGZmqjl50vttJkmeSSH8aUtKPEfhrCzfWp3Oc5KWk6Pyqa1IdjacPOn7Gim/QZKXJ/htt/wPR36+f62jXBx7YaF/rTW1OUXjx2NYupQCIdav1mYr+7uoqIp25TkI9k6dKNoXyTF7KvjIkVE+d4HZ7L9ds7nsR9Fi8adVU1JS9qNotfpvt7i4TGuz+dceOlT2msPhX1tQUNZu0aDLOfZCMjgBL5u0+fllWqcTj3YLC1UUFpa97jJ4QL42/PUhN9dzcuBPm5PjuTN08qQaUfQ+EcnO9kyYcPw4FBZ6v95dk2gX6elqMjK8a+PjPe/PjAzf96ehwjy/oY0Rubn+r5/Axwh1nY0R5fPmVKWtyRgBUFzsX1s3YwQ1GiPE1FRKUltxLK05WAEvyVZbtiy71qozRjgc/u9Pf2NERcJxjEhLU1NU5H1BozpjREyM5/MNbYxoSCiGTZhQvoZNdenf38o332R5DI5SbGydBFcr+ObIETVPPBGLSiWxdespkpJE3nknF4vF+wCq0XgOHK+/nkdJiXetWu2pfemlPI+JbXkqbsY9/XQ+Dz9c6LPfqnLNvPgi3HprFpIPF6+IiLLnH3qoiFtuKfHZblxc2SB6zz3FXHON2ac2JaVscL711mKGDvXtEtGqlZPCCRMonDCB0blG+t+S6VPrMjBBXg3s29fmU9u6tax1dOrE1d+9T+f+kRQ+9phXbcuWZe0OHGhh+XLffWjWrEx7/vlWD63NBh9/bGLVqgjsdglzuVNUUiKg0/mOUSmvtVgqaoXSCZuASiURGSmW0+K33fITMqvVfx9seRY027bh6NkTu11u1+EQkEQRLXZ52a/cZ3Xh0vqi/MTU4fCvtVX4SrVayef1WzHBpFrt+gGvrHc6K96Lks9+VDycJPnWCoKnWBR9f76KWn/nouIY4U+rq7BIa7P5P8flqXyteVLeWPGuFRAEAUmSPL4Ps9l/u+WvieLiKq7LctdEVfdR+Xar0lqtQsDa8uN+VZ+tohEU6H0fyBhRZCviFfsSVl6mQrPAgiSApFKhUXlO/8r3IZhjRHljsKr7PjzHCN/3cmBjRNn17qFsYGNEQ0IxbMIEtytaOcNG8++/RL79thw0/fLLPt9rNEqce67vCVuwMc2di+6PPygeNw5b3771dtxwpshWxH1v7AGuRNNmPcN/uonBLQYzpfcUInW+XRvKU530u23bOpGX0aumdevqaMFotPsc9MvTrJmTZs0Ca7dJEydNmgSmbdxYpHHjqiZZsitMSopISooozyyrcK9s1EikUaOqJ2/2jh1JIovYtKVkdn+kSn18vER8fGDxJLGxErGxsnb/fg2TJsWxe7fLbUDwMBwNBgmbzXcYZPn6u3q9b60oChW0+G3XaJRj/iStFp0uya82YfECEr6aRPvpTegdfT0226ulr6ixoYZyw1L5VUiNxn8fyv+oqlT+tfoKXlE2m4Akeb8WKsYXORyyXi477EnFhQdRFHz2Q1Xpad9aQXBWeOzv83ler2q1b63TGbhWpfL8bFqt/3Nc/tbS6fxryzsF+L/WBI/vo6rrvfw1YTT615a/JiIiAtdW1a7BEPj9WR2t0Vid+z5wrVpn5YolV3Ag9wAi/UAyyDa86HFrlrZb9ncgY4SLqq6H8ve9Vuv7vqioDZ8xwnefqzdGVDxewxojGhKCFMgMJgRkZmZiD6AOS10jCAKpqamkpaUFNNmrKXHjxmFcuZK8F1+k5LbbANBu20bS8OE4U1I49ddfdXbs6hJ3550Yly8nf9o0iseNq5Nj1Nd5DwZFtiKGf38F+59bDrlt4OobodtnqFDRNq4tS0csDdi4CSUN6Zy7sdsxffgh+l9/JeeTT7zNMKuNZvduGg0ahKTXk7Z/f63dNysiSfDZZxE8/XQ0FouK+Hgnc+eqadIkg9hYp9ud1GwWfMZ0AMTGikRFyVqLRXZBAHjzzUg+/9xERITIRx9l06KFSEyMSHS0rLVa8ekuARAVJdJy6n0Y1q4lY/pMjpw93OP1Ynsxd/x4B4fzD3Hof/m0sOfS8T7YF6+lpXABcwfNJfHrpUS/MQtb5y7kfvghACaTSHx8aWIUp3+Xx4gIiYQE+UdYFPHpiw7ypDAxsewH+9gx31qDQXLHdAiCgM2WyqlTGV6vd51O8ihUeOKE2qdfvlYryQZ2KSdPqrys5spoNBKpqWXatDQVDod3rUol0aRJmTY9XYXd7kuLx+JBRobKY4ehPILg6UaTmanyubMMstZl3GRlqTy8AyrSpInTfRvm5KgqxScIgkCjRo3IyMggNdXhvr1ycgSfu9Ag7+q6Jp25uYJP9yCA5GSne+Kbny94uE5VpFEjp3viW1AgeLhOVSQx0eme1BcWCh6uU5W1ottgKS4WyMnxs0CQILoNlpISgexs39q4ODHgMWL23mn8uPNdkoskdsXpEUvKlY349QnYehe9e1uZPTuv2mNEbKystdng1Cnf2shIkbg4WetwyK5dvgi3MQLg+HG1zxw1gYwRrus9N/cUycll91xDGyNCjVarJSnA2G5lxyZM8LZj44q3UWVkyCOClyQCBw+q+egjE3372hg2rH4ymrjq3Ci1bGRe2fIKB3akyEaNrhA6fgeAiMiB3APM2DKDaedPC20nT1NUWVlEzZyJqqQE46JFmMeMCUKjpX7pJlPQjRqA556L5oMPZEP3wgutvPVWHj16JJOW5vSYYBuNUsA7YgaDvIO2ZImBzz+XY+DeeiuPCy6ovDik1+O3Xe3OnUR8+y0A6tZNK2mf2vgiR1TrkOJEshOgRTp0zIK9SXYO5x3i4yOv8fItd5L81kSEf45wSjrkHjNcqNX++1AelSpwLVRP26IF6HTOgAz5QHccgQB2HMsoP4GpivLGU1UEsjvpojppuctPEKsiPl4kvkIMuryAAnq902PCKO98BnaO4+Ik4uIC08bESMTEBKaNjpaIjg5MGxUlERUVmNZkkjCZAtNGREhERASmrWqM+OW3JVy9W+J/y2FpeyujRx+h+ymILozgp92jAbjvvqJKbVQ1RpRHpwtcq9EErg2XMaI6k3tvY0TZ9S56XO8NbYxoSCjpnsOEonvvpeCRR+SUy6WISUlIWi2CKKI+dcrr+37/Xc+8eZF89FH9BfQ7XIaNUssGgNVHViNtv1l+0Gkx6MriTkREVh9ZHaKenf6IqakUPiK7i0W/8AJCTk4V76gaV3p1sY5SPY8YYcZgEJk6NZ/PPsv2WPGrLStWyMvJ991XWOPUrdEvyumaS666CnvXrpVeX31kNWKp+8PWVPm511ZDYjFIX33GgpvfZtXfzbGdfz4Axu+/r1E/FBQUao4kSThEB+eWZnrelgLnnIA/5sKA728BSxzqhENccomS4lnh9EIxbMIEy5VXUjRxomfyAJVKTv9MWXKBimzdKu/N9+pVfzE2rtVXzdGj9XbMcEWSJOxWDfxzrfxEjwWVNHYxsJgVhZpRPG4c9o4dUefmEvvEE7WubaPKllOhidHRlWo+1ASHo6zOFMDZZ9vZvDmDe+8tDobnnAfvvJPL66/nMnmy72QR/tCvW4f+11+RdDoKJ0+u9LprsuTiyUvgYCy0zYXvPlVBeneQ1LRq5cA8ciSgGDYKCqFAEAQ0Kg3nHpcf/94UtqeAiMCnlgkARF4wH7W6ZqUfFBTCFcWwCXPc7mg+DBtXqueePesvHsm9Y3P0aNALJDY0BEFAyugEKgfEHoLmv1bSaFQahBrWDVIIAK2WvJkzkTQajEuXYly0qFbNqUsNG/2WLcQ++mit2jp2TM2oUYmMGpXInj1lrqQu3/BgIEllt6FKBdddZ66q9JV3RNG9W1N8yy2V3MegbLLkIiMSLr8Jso0Qd7IDOCIQ9EW0bu3EfPnlSDodmoMHUZUrEKigoFA/jEwYQMfSlPWbm0ChAT6KHMS/nIVaW8CIq33ks1dQaMAohk0YoEpPR7d+vWwoVMBl2KjTKheRKCoS2LtXnmT07FmPOzZNmyIJAqqSEvfq9pnM8AtSECY1gRuHQoVMIipUXNbishD17MzB3qMHhZMmARAzdSrq//6rcVvlr2ntnj01Nt6XLDEweHASW7bo0Okkv8GttWHOHBMTJ8Z6pIGtCcZvv0X7zz+IUVEUPfigT93gFoNRlfvp2JcII66Hn4w9AWjUMg2VSk45n/3xx6Rv345YgzT2CgoKtWOKaiAAB+Igu9RbfTbyvX1e08+Z2n9CqLqmoFBnKIZNGKBft47E668nZsqUSq85U1ORVCpUBQWVXtu+XYskCTRp4giqn36V6PWIKSlIBgOq9PT6O26YMqX3FNolNUeVtM/jeRUq2sW1Y3Lvyi49CsGnaPx4rOedh2C3o9u5s8btuGJsJJUKVV6ez91SX5SUCDzySAz33htPQYGKs8+2sXp1Jpdeaq36zdVk40YdL70UzaJFEaxc6btqeyBoDh9GUqkouu8+xIoR3+WY0nsKbePaehg3G5vDxG69ABjctyw2yXbhhUjRviuuKygo1B3RO/cAkNW5Dc0im9EkqgkDzn6Ou3mPt1tsbhDZOhUUqouSFS0M8Fecs2jiRAqnTPGaEc3lhnb22fWfFjtj9Wqk2NigpNdtyGRkqEhKimTpiKXM2DKD1UdWYxftaFVaBrcYzOTek5Ufj/pCrSb3rbdQ5eTg6NKlxs04OnTAcvHFaPbuRXPyJNrdu7EGuOOwc6eW8ePjOHhQgyBIPPBAERMnFlaqjRAM0tJU3HtvHE6nwDXXlDByZO22bAofeQTziBE4mzb1q4vUeb/eHUWXkwb07A6aXbvQHD2KZejQsjf6yOyooKBQN+i2bQPgrMG38scNd5CSkkJOk0UkrB+D43BLMng+xD1UUAg+yq9MGODPsJGMvldhDx6sfzc0F5KfFd0zBUmC665LwGYTmDNHw7TzpzHt/GlIkqTE1IQIsXFjxFL3zZpSfPvtFN9+O7H334/m229lw2bQoIDeu3atnoMHNaSmOnn77VzOO69u7k2bDe6+O56sLDVnnWXn5Zfzq6pPGhCOdu0C0kXqIj2udxDo/Lyc6KRH1AESr74awW4n+7PPEMxmol59FVvv3hQ8r0ykFBTqi6J778XWsyfW/v0BOUbOXrroozl8GCE/HykmJpRdVFAIOophEwa4DZtqTshmzcpj8uSCSlV1FeqHv//Wsm+fFoNBonnzsvz1ilETWnbt0vDHH3rUJ09iWLmSkjHXIUWUpUMfMsTirjfw778aNmzwfgPpi2/nGraTukd25zhwQMO6db5vtgEDLNx/fxEOh8CgQWb+/FPP7t3et2r69bPSsaOcXez4cTWLF0N+foRX7bnnWunSRdamp6v44QcjP/xg4K+/dOj1IpddZuazz+T39uplo0cPeQc3K0vF99/7Xhjp1s1Gnz52jF9/TWbLnny5vXJqZxedO9vp21c20oqLBb74wrOvDgecd56V9HQ1afoWWAcMwLh8ORG3j+ft/gsx/j0A8b9ICpsbQFUWa9SmjYOLLpJd9JxOmD/fd9r65s0dDBpU5s730UcRiKL3e61JEydDhpSlsf344wivRetiYsBgMDB8eNlu1+efR1BS4r3dhATRY2ds0SIjhYXed62jo0VGjy7Tfvut0WeRxogIieuvL0sTv2SJwV1wtSI6ncTNN5dpV6ww+CxkqFJJjB1bpl29Ws+xY75/9m+7rdhduunnn/XuxTNv3HRTsfu359dfdezb53tbcsyYEkwmOVZt0yYdx4/7vt6vuaaEmBhZ++efWv7+W+dVBzBypNmdiGP7di1//eVbO3y42e2y7RojfBHoGAFw6aUWWrSQtYGMEW3bytrDh9WsWWPwqa04Rqxa5VvrbYwo7R1EXwrrYc8c+fsZO7YRhunTcbRt63fhVEGhoaIYNmGAuzinN8PGbCZ20iTUaWlkf/EF7nLKpVSncFMw0f79N5Fvv42YmEj+9Okh6UOo+eor+UfhssvM7orNCvVLRoaKd9+N5IEHioiPl++FjRv1PPdcDBADnAUve76nXTuHe9KyZYuOp5/2tWI5nA58QLPd/wCyIetbC7Nni7Rta+aRRwpZscLgVztjRp570nLggBo5Vt+7/rnn8t2TlmPHNB7tWq0q3nijLIZlypQCt2GTnq7y24cHHijk3MaHiZ08mQxrC56W/vWpveOOIrdhU1Ag+G13+SoTF731FuqMDKxbDvDYskHAICgGnvXUXnVViYdh46/dIUPMHobNs8/G+KzG3b+/xcOweemlaJ8GSO/eJg/D5tVXo3xWUu/c2e5h2Lz5ZhSHD3v/GW3VyuFh2LzzTiR79nif/KekOD0Mm7lzI31O0mNiRA/DZsECE7/+6n0yrdV6Gjaffx7B6tW+J7O33FJm2Hz1lZHvvvNufACMHl2CXi+Pe0uWGPnsM99G6bBhZrdhs3y5gQ8/BF/X+8UXW9wFNX/6ycDs2VE+2+3b1+o2bNat0zNjhu94rm7dbG7DpmyM8E7gY4RcwNFl2AQ6RgDs2eNfW36M+O8/jV+tvzGiImefraXzLbf4fF1BoaGjGDahRpL8uqJhMGBcsQLBakWdnu41BWsoECwWjMuXu1M/n2nYbPIKLOAxeVGoH3JyBN57L5J580yYzSo0Goknn5Rrt7Rp4+DKK0sQ8vMxrF8PooitW3ecrVoCkJhYtrvWooWsdSNKGJcuQdJosfbvT7yhB8UXXwjIExiX1umUJyb//SdPVDt2tHlUqE5NdXq2W4EWLcpqwTRqJDJmDJjNZqCygdy6dZk2Ls7JeedZ2bJFS6tWTs46yzO+rn37Mm1MjOS3D2edZSd65kwEiwV9zzZc2dy3tkuXsuMYDP7b7d7dDkYjOR99hGH4GMYc+RxJq0Ow23A0b469Z0+3tnz9LZUKv+126+b5WUeMMOP0URTcNSF0MXSoBUulOoQCRqOR1FTPpA6DB1soKPBuMFWsQn7ppRYyM70bTElJnotOF19soX177/GQrh0KFxdeaKVpU4dXbUSEp/b8863Ex3s/EeoK9tm559owGn0vwpTfbO7Vy44k+f4+yseNde9up7jYt9ZgKDtm1652v9e7ywAC6NTJ7veaKH/e2rd3+NW6Fj6gbIzwhd8xogIpKWXa8mOEN2o6RiQl+ddWHCOuvLIEVXo6giThTEgoXRAVaN/eqPxeKZz2CFKYVg7MzMzEbq//oPiKCIJAamoqaWlpdVJkUcjLI7VzZwBOHjgAXraGG/Xrh+bwYbK+/hpb374AzJoVybZtOsaOLebii4OfbakqVGlppPTujaRWk3bwYNCDguv6vNeWlSsNjBsXT3Kyk82bT50WMdHhfs4BCgsFPvjAxPvvR7pX4Hv2tPH44wX061c5nsX0wQfEPPssksFA5vLlODp08Nu+6tQpUs4+G0mlIu3IEa/JMQ4cUHPffXHs2iWvqI8dW8STTxZ4u3UDoibnPT1dRVKSWGniWh00e/aQNHgwgiiSuWQJ9l69atzWr7/qaNRIpE0bh8e9oD5yhMQRI1CXZpoTo6JI37GDcPCfbQjX++mIct7rh8Thw9Ft20bu229jvvpqj/NOYSGG1atRnzhB0QMPhLqrpzXK9R4ctFotSUlJAWnP7JRW4YBWS+7rr1Pw+ONejRqQUz6DZy2bX34xsGaNgezs0HyFYnIykl6P4HS6d5zOJBYvlr+rq66qYTFEhWrz/vsm+vZNZuZM2a2oUyc78+dns3RpllejBqB43DgsF1+MYLEQd999eFm298CV6lmMj69k1EiS7MozZEgSu3bpiItz8tFH2bzwQs2NmkARRTh5sqw/KSm1M2oAol96CUEUMQ8dWiujBmDChDgGDmzEjh2erlbOFi3IWbAA0WBA0utRFRZi+PnnWh1LQUGhCqxWtP/ILrS2s8+u9LJgNhP3wANEvfIKQonvnSAFhYaIYtiEGMlkwnzddRTdf79PjbtIZ6kBYbPBrl3yBCIUGdEAUKlwlKaFVR85Epo+hIicHJU76HP0aOVHob747z8NeXkq2ra18957OaxalcmgQVb/2cBUKvJmzcKZmIh2zx6iX3rJ7zFcxTnFRLkWi2A2o922De2ff/LWW5FMmhSL2aziggus/PRTJoMH189u6TvvRHLJJY1YvTo4Ox26jRsxrF2LpFZT8NhjtWrr1CkVGRlqVCqJTp0qu0/Ze/Qg+7vvKL71VkAuBKqgoFB3aHfvRrDZcMbH42zRotLrYlISzpQUBElCU2oAKSicLiiGTQOgomGzZ48Wi0UgNlakdWsfTub10a/SAVNz7FjI+hAKYmNFPvssm4cfLqzky68QHBwOeXdkz56y7bAHHyxk1qxc1qzJ5IorLAGXUBKTksh7/XUANAcOgB8XV7XLsClNZ25Ytoyk4cOJfvllrrnGTGKikyeeKODzz7NJSamfxB3r1+uYMSOKggIVWVm13KYBkCSiX3wRgJIbb8TZpk2tmtu5U15kadvW4TN+w961KyWjRmEeOpSSUaPQlGaaU1BQCD66rVsBeVHB18qPK+2zdteu+uqWgkK9oBg2IUa7Ywe69etRZWT41Lhc0VwV0LdtK9utCWVmYWezZsCZt2OjUsH559uYNKkw1F057RBFOSnDgAGNmDQplldfLcuI1LixyLXX1sz1z3rJJWR9+SU5Cxfir1pm+R0bhwNWFcuJA7S7d9OksYONGzO4776ieqtLe+KEHM8jigLXX1/MDTcEYYfQ6cR8xRU4GjemcOLEWjfn2j0un2DAG44uXch97z0MP/9M0pAh6Netq/WxFRQUKqMtLczpzQ3Nhb2rnN5d9/ff9dInBYX6QjFsQozpgw9IvP56jF9/7VPjbNwYSaVCKF1p3rpVDlru2TO0yRUczZsj6XQIVcQtKChUhSTJ9TgGDUri/vvjOHxYQ3y8k759bQQr3tJ2wQWecTNeGnbF2BzWt2P06ASuf/JslqmuQFVQgPrECY+MTXWN1Qp33RVHTo6arl1tvPBCfnAa1mgovuceMjZtQgwwGNMfLsOma9cAxiNBQCgoQHA4iLvrLsUNRkGhDtCVGjblMxBWxGXYaHfurJc+KSjUF0rYc4gJpDin9aKLSDt0yJ15zGXYnH12iOJrSikeO5biu+7ymjkqGIRjBpF33okkPV3FrbeW0Lat4oYWDDZs0PHii9Hs2CFf19HRIvfcU8S4ccVERtZBJsKSEqKfeQZHu3by9VsOR6tWfNblWcYvm0K+WU9kpEhhTBs4AZrdu3GWxpXVB08/HcP27TpiY0U++CAXg+/6fDUjSFkvAt2xAUClovD++9Ft2YLm+HESbrmFzCVLEL2luldQUKg2Qk4OmsOHAbD16OFTZys1bDT79slJVYI+wCgohAZlxybE+C3O6UKrdU9CbDY5b35EhEiPHqE1bNDrg27UFNmKeGrjU5z72bk0m9WMcz87l6c2PkWRrSiox6kJTifMm2di3rxI9u1T1gSCxe7dWnbs0BERITJhQiGbNp3iwQeL6sSoATAsX47ps8+IfuklNOX8y0tKBB746y5u3PUM+WYDPXvaWLUqkyvPPQrI7mj1xapVBhYuNCEIErNn59KsWe1j6YSiIhKuuQb96tVed6tqQm6u4K5k37lzYDvIcRMnojl+HGejRqjT00m4+WaE/CDtRikonOFIcXGc+u03cj78ECk21qdOTE3FmZCA4HSi3bu3/jqooFDHKLOzUOJ0ok5Pl/8McMVSp4OvvsrG6axcfK2hU2Qr4oolV3Ag9wAiZYHZ8/+Zz28nf2PpiKVE6iJD1r/fftOTnq4mNlbkkksU97uasn27FqtV4NxzZcP85puLyc1VcfvtxSQm1n1AvnnUKAzLl2NctYq48ePJWrmSXYeiGT8+jgMHtAiCxH33FTFpUiFaLdg7dYJvvqlXw+biiy2MHVtEQoIYtDpVke++i37TJtSnTpExcGBQdmwMBon587M5fFhTqcikL8xXXonu77/lxRyVCu3evcTfcQfZCxeGRX0bBYUGjSDgbNUKZ6tWVepy5s3D2bgxYmkcr4LC6YBi2FTBiRMqdu+G7GydV9eozp3txMfLz6enq9i/3/cpPessh3vilpGhYv+mIuId/ZFUarL3N4f/ynY/2rd3kJwsa7OzVRx54gvU+/dTctNNONq182i3TRsHjRvL2txcwe0a4o1WrZzu6scFBUKluhPladHCSfPmsra4WGDr1spa0/vvozl0iLjn76DZxXIyAbMZtmzR+Ww3NdVJ27Zyu1YrbN4sa+fvXsL+w82RKOfuE5mG2GgPB3IP8PIfr3EZvtP1JiWJ7ixlkgS//ea7D/HxIp07l7mSbdigQ/Qxp46Nleja1e6uXdO3r9Xd54pERUn06FG2cr15sw6rj3lpRIREr15l2i1btJjN3rNBGAzQp0/ZDt22bVqKirxrdTrcRgPA339ryc/3rlWr5UQIZe3C/v3er3WACy8s0+7erfFbR+n8821u43vvXg1btmhZtCiCLVv0NGni4NVX89wbfg8/XOiO6T9wQENamu92+/Sxub0mDh5Uc+KEbwu/Vy+7u1L74cNqjh2Ttapr3iVm82TU/+VgvmcxP3W5jwMHtKQkO3jzrTxatHDy++/yd6wTLyaajTi3xpH7q/xc1652YmPldk+cUHHwoO/7vqoxQhAEEhLkMaZjRzuJiSI6HUyYUMTevRp+/dX7tVZxjNi923cf2sWkkzJnDgBHJjzLlk0RPrXVHSMGDbICgRtf5hEjiH7hBXTbt5P1ySfE33MPut9/R/fHH9j69w+4HQUFhdph79071F1QUAg6ghSOgQxAZmYmdj9pWeuLefNMPPVUjM/XFy7Mdq+ofvGFkUceifOpff/9HIYNk1f6v//ewPjx8T61b7yRy+jRZgBWr9YzdmyCT+306XnccoucLem333Rcd12iT+1TT+Vzzz3FAPz1l5YRI3wHD0+aVMDDD8suYHv2aLj00kY+tROG7mTKB3IfjxxRc/75yT61Y8cW8cILBYBs4PXsmeJTS495MHIcAE00HTkx1Xea2BEjzLz7bi4gZ9dq1sy3e9+ll1pYsCDH/bh161SsVu+T//PPtzJvXg49eiRjsaiIjBQpKvI+8e7Z08ayZVnux336NOLkSe8Tzo4d7axZk+l+3L9/Ev/9530S2by5g02byjLnDRmSyM6d3ie8SUlOtm8/5X589dUJ/PGH95Vwk0lk3z5511AQBMaOTWXVKq9SBEHi+PGyIrF33hnH8uW+K1P+999JDAb47z81N9yQwPHjvifeO3emuSf/U6bEsHChyad28+ZTNGkiT7yfey6a99/3vYu3bl2GOxbq1VejeOONKJ/a++4r5On5XUkUsnn6pl28+F7l+g8uvv46i759ZSMvmGPErbcWMW1aARpNcMeIN875iAc3347t7LP5bspKrrvO931f0zGiOiRccw36TZvInzoVR6dOYLNhHTSo2u3UBqUieGhQznsdIorEPvQQ9k6dKLnlFqSIsgUM5byHBuW8BwetVktSgMlulB2bKoiLE+naFRwO70ZW+SxJMTESZ53l2xiLipI8/u7UJBv1iRNIRiPOli09tDExZdsHkZESnWOOoMrPZ7fQBbVWoHlzh3uFOza2TBsR4b8P8fFlWqPRvzYhoUyr13vXqo8fRygsJEVMA+SJlVbrv13XKjPI3jBnnWVHkuBA3n4cYoWA/Ojj7j/tWOnY0e4zxbVrsuvCXx+aNfM8TocOdux27w23aOFg2TIjFotcHDIuzrdh07KlZ7tt2zp8uuhU1LZu7UTnY5MpJcXzs7Vs6fR5TZa/HgCaN3dSUOBdazB49q1VK//nrTxNmjj9ak+eVPPOO5EsXhyB0ymf26gokaQkZyWPo/JulSkp/tvVaMr6nJzsX6vTlWmTksq0RUUCGRlqWkako8vNBJWa0X2tNHpHTl0el6rx265rFwjkMcKfNpAxQqPRkpbmZMGCSI4d0/DxxzlERfm/jyqOET61Vispf8rWasHUqURo/X/HNR0jqoP5yivRb9qE8bvvyLr3Xs8XHY6gJTZQUDiTUB88SMTXXyP98APF48ZV/QaLhcj//Q/t7t3kvvuu31T4CgoNBWXHpgrq0tpWHz+ObsMGpMhILMOG+dVGvfoqaW/8QAf2YTBI/PtvWliMQdEvvEDku+9SNG4cBdOm1aqtcz8/l+NFx32+3jSyKX9c/0etjlFTXLsejz9ewP33hz6RQV0Q7Gt97Vo9N98sG7uDBll49NECD/e/UGCzwcsvRzNnjrzLc+vNhby/sz/qo0fJe/llEu66C0mjkbMQ1lOxGkEQ2L49lWHDJCRJ8NiJCQZxd9yBccUKLIMGkTN/ftDarQ1CTg4pPXsiOBxkrFuHo21bQK6JFX/bbRQ88USd7+AoK6mhQTnvdYdx8WLiHnoIW+/eZH3/vcdrXs+7JJHSqROqggIyVq/G0blzCHp9eqNc78FB2bFpIDibNsV83XWBaRs35nf6AtC1qy0sjBqQa9kAaI4erXVbg1sMZv4/8z0SB7hQoeKyFpfV+hg1QRShVy8bR45ouPrqIBRIbABYLPDFF77jMFq3dtC/v+yK5XDAwoURFBcLpKeradOmLM6pXz8Ll15q5a67it3vnT/fd7uNGzsZPLgsXmPhwggcPmyhRo1Ehg4tS+Lw5ZdGnzFKckyVnfvui3O78J1zjpVWbZzMbPQNaDQIO4qIYjzRERKXlDNqvvvOSP7RQjQHDyHpdDg6neV+LSJC4tpry4yQZcsMZGV5N4h0OjwKbK5caSA9XYXTKTBrFkiSwM03FwfVqNH88w/GFSuQVCoKnngiaO3WFik+HuuAAeg2b0azf7/bsDHNn4923z7i7r2X7K++kiunKygoBISrfo3NT/0aDwQBe5cu6DduRLtrl2LYKJwWKIZNA8GZmsofyBPCUBfmLI+z1LBRB8GwmdJ7Cr+d/K1SVjQVKtrFtWNy78m1PkZNUKngyScLefzxwnqrOB8Kym+QlpQIPPlkrE/tqFElbsMmN9e/NiZG8jBspk6NQZK8GyAXXWTxMGymTYumuNj7ST/3XKuHYTN9ejSZmd4TCTRp4iA3V0VJiYrYWBGNRmLzZj2bN+uB8n1/h/aWg1xS7pm3347k33/jgOaV2m3c2OFh2Lz3XiTbtnn3J4yNFT0Mmw8/NLFxY5lPXs+eNp57Lrhpjx2dOpE9fz7a3btxtG8f1LZrS97LLyPGx3vUzyh44gk0+/Zh+OUX4m+9lawlS3C28B3rpKCgUIa2uoYNcqFO/caN6P7+O+CFVgWFcEYxbEKIYdUqRKMR+9lnI0X6T2PsbNyYP+gIyBOgcMFR3rCRJHwGwARApC6SpSOWMmPLDFYfWY0oiKgkFYNbDGZy78khTfUM9eaZFBL+/FPL+PHxvPIKXHKJvLswfLjvnYOePW2UlAh8+KGJd98t+16io0V69rR5xJNVvF6HD7f4LKPSqZOn0T5kiMVnUod27Ty3cgYNslBQUPlLOnJE7d6lOe88K2+9lcs770RV2llRHz+Obvs2UqVMhMJLkaLkRAP9+1tp3ygH/fp1SBoNliFDALlPcXGeu4sXXGCtFOvlonysjasv8fEiggAtWhgZNy43+NmOBQHroEH1HpgfCKK32l1aLblz5pAwahS6XbtIuOkmMr//HinedxIFBQUFwGx2p6S39+oV8Nvs3boBoN25s066paBQ3ygxNlVQl/6Ryd26oc7OJmPVKhxduvjVWjIK6dCzNQ60bP71KE1ah4lNarWS2qkTztRUMpcvR4qODkqzgiCQkpJCenp6SP1S9+7VkJam5sILradd3SAXkgRXXpnIX3/puOMOmDbN/7VuscDChSbefjuSrCz5pLRrZ2fSpEKGDrWEnQFYXCwwbFgio0aZGT++yOf3aJo9m5jp0wEoGTWKvLfeKnvRbie1fXsEm41Tv/+Os1mzoPWvTsYYhwOhqMhvgb6wQZJQZWQgJpdlUlSdOkXiFVegOXECa58+ZH/+ORh9Z+CrCYrve2hQznvdoP3zT5JGjsSZlMSpbdsqLTL6Ou/qAwdIHjAA0WAgfd++069AXohRrvfgUJ0YmzCbgpxBmM2os7OBwIpz7jySgAMtjRo5adwqTIwaAL2etP37yfjtt6AZNS6EWuz+BIu5c03ceGMCzz0X3M8WTvzwg4G//tJhNIoEkv/h5Ek106ZFk5WlpkULB2++mcuaNZkMHx4eRo3TCd98Y3TXJTKZJFavzuSBB3wbNQDOli2xnn02kiAQ8fXXGL/5puxFrdZdP6o+C3XWlIgvvyS5Xz8iFi4MdVf8ov7vPxpdeCFJQ4fKX1wpYnIyOQsXIsbEoP/zT6JLDU4FBQXvaI4dQ9JqZTe0avx2Olu3RjSZUFksaP77rw57qKBQP4TBNOTMRJ0m1wMRjcaAVlVNJpExY4q54gpzbby96oZwmM3WAWYzLF0qrxJffrmlCnXDxGaTY1MA7rmnGG8FqJ1O+PPPsriR1q2djB9fxMsv57FuXQbXXGMOm0W+EydUXHddAg88EMeHH5bVwvGVRrs8luHDyV66lMKJEwGIefxx1EeOuF+3nyUnDdCEuWEjlJQQNXMmqrw8BEt4X7fOpk1R5eSgTk9H9/vvHq852rcn58MPsZ5zDkUPPBCiHiooNAzMV19N2r//kv/yy9V7o0qFvXNnRIMB9bFjddM5BYV6JIyW/sMTUZQndk4nXuMCVKqyxRFR9K7xphWOn8SJCnvjZjjFypaKIJTZC5IEHTo4mDFDDix2Ov1rRT+lJRqKVhDkzymKZecsmH0Azx33iucUYMUKI4WFKpo1c3DuuTa/2uq0G07aBQtMHD6sISnJyfjxxTidUe5rXZJgxQoDM2dGsX+/hh9/zKRTJzmu5bHHCt3t+mq/pvdGTbWrVxuYNCmWvDwVJpNY4xorRRMmoF+/Hv2ffxJ3//1kffstaDTYO3UCwn/HxvTBB6hPncLRvDnFN98c6u74R6/HPHQops8/x/j999j69fN42XbeeWR/802tYvcUFM4YDAbEcsk4AiX3gw8Q4+IUNzSF0wLFsKmCjz6K4KmnALwsZeNZVXzRIv9Vxd9/P4dhw+QV1CXLTdyJE/7DW7Ilj1oWP/7ov6r49Ol53HKLnG1pwwYd112X6FNbvqr41q2BVxX/918Nl17ayLc2aR7PXPUHBc88w9Gjas4/P9mnduzYIl54oQCAzEwVPXum+NRed10Mr7+eB8ixEh06eP8eAEaMMPPuu7mAPNlt3txLcHIpl15qYcGCHPfjdu1SfQapS5LnplS3bink5XnfperZ08ayZVnux337NuLkSe+3WceOdtasyXQ/vvjiJP77z3se7+bNHWzalOF+PGxYojsgviJJSU62bz/lfjx6tFyDxzuyVTBpUiEmk8SwYbBqlfdzPHhwEsePp7kf33NPHMuX+457+O+/k+6EVw89FMvXX/tO87xzZxrx8XJfHn88hoULTT61mzefcgfoP/98NO+/75lUokcPG7Nn59KqVRXWX0XsdrlAnUZD3uzZJA0ahG7rVqJmzaLw0UcbhGGjys4m8n//A6BwyhSCn40g+JhHjpQNmx9+IP+FFypvr5UzaoxffolkMmEZPryee6mgcPoiJvqeMygoNDROTx+iIFJV/oLyr9uqSFZWXuvMKghYW1jof7XSbi973VfNj5pobbbAtc7MPLT//CP/XcV8sny7VWnLn4eqdmDKa6uK0av4vfrTx8d7dtKftuLnEb3sxrmoeE6dTt/aiu06HL61Fc+T/+9OoF07O2PGyIZxTo4/bXij0Ujcd18h336bVX2jBmjUvz8p7duj3bEDZ9Om5JW6dAgFBSBJ2Hv0IPujj8j+8stgdz1oRL75JqqiImzdumEeMSLU3QkI23nn4UxORpWXh/6XX3zq9GvXEjdxInETJqDbvLn+OqigEObo16wh8bLLiHzzzVB3RUEh5Cg7NrWkvIdEVaEmHtpc/zPI8tp//62qGmd1Mm2Uaavy7hCEamgRA65lU512Pd9Xu9drqq24s1+9xCa+xZX7ELi2/DmsDXq9yCuv5KPRyJ+rNMMxer3E9dcXc8cdxcTGercoZ83KY8aMPD9tl/09fXq+3xotMTFln+eZZwp47DHfhn90dJl28uRCJkwoBOTvyWis+XlRZWejKi5GLD0JliuvJKNNG3fGQikqCuvgwTVuv65RHzmC6eOPAbkeTIOJfVOrMV9xBZFz52L8/nuf59g6YADmwYMxrl5N/NixZH7/Pc7Swp4KCmcyuj//RFfLApsxkyej+/NPcubNw9mqVRB7p6BQvyiGTRVota5JpfcJk0bj+be/CWd5rXTRBQh/BKY9csTl9yohuPpRbqar1Xq+z18fymvV6uBpdZId9cmT4HCgVqv9a8t5msjxEr60godWEKrqr1QNrefjiv2QjRcBkCpp1WrJZ9saTUWt735U1Pr77iq6PldHK1/D3rVaLe74IUGAmBi49dZiJkwoJCXF/xZZZGTgRoTJJGHy7V3mQUSERIRvrzUPjEYpOFmAzWZUxbKLZnm3DI807K6ArzCN99Bv2ABOJ5aLLsJ24YWh7k61MI8cSeTcuRhWrUIoKUHydgGo1eT973+oR49Gt20bCTffTNaSJYgBpgBVUDhd0dWgMGdFtLt3o923D+3ffyuGjUKDRqljUwXhkIP8mmsS2LRJz8xH9zHx1Q6IkZGk790bkr54RRRJbdsWwWrl1KZNOJt7CRqqJqE+75IEf/+tpXVrh0exydOBgwfVGAwSjRt7Gi6hPuehRH3iBMnnnIOk1ZJ26FAl40V18iRxEyZgueACBFFETE6m5MYbg3LsYJ53zb59SCpVw9vJkCSin38e60UXYe3Xz28Qsyori8QRI9AcOYKte3eyv/rKuyFUBWfy9R5KlPMeZESRlE6dUBUW+q2JV9V5j3n8cUwff0zh+PEUPvlkXff6jEG53oODUsfmNMLphB075C2DnhfJPlGqoiLZ7z9cUKlwlBYsLJ8etyEjCNC9u/20M2okCR57LJYLL2zEsmXVz55zuqLKkhM+iAkJXndkjEuXot+0iag33iB65kwiFi2q7y4GhKN9+4Zn1AAIAgVPP421f/8qMzOJiYlkL1yIMy4O3Y4dxN1zT9VBgAoKpymaAwdQFRYiGo04OnascTv2rl0B0O3cGayuKSiEBMWwCQFCcTHGL75At359ldq9ezWUlMjpa9t21SCW1rxRnzxZx72sHq5dGk0Dz4Nvt4PZHJ6uRsFg7Vo9GzboEUWB7t1DvyMaLqhcxXJ9ZAcqvvNOrP36oSrdRdbs2VN1Not6Qrt9O5r9+0PdjXrF2bo1OfPnIxkM2Hr0UNLUKpyxaEvd0Ozdu1f2b64GLsNGu3NndQNJFRTCCsWwCQHqw4eJe+QR4u67r0rttm1ykEn37nbUanA0a4YzNRWhqKiuu1ktHG3a4GjZEqmhBCz7YM0aAz16JDN9elSouxJ0HA548UW5GOfttxfTrFn1M4edrnjs2HgVqMh9803EmBj5YXFxeBSzczqJnTSJpIEDMSxdGure1BrNv/8S/dxzGJYsqVJr792bjPXrKZo4MWzjnhQU6hrd1q0A2GsRXwNgb98eSatFlZeH+sSJYHRNQSEkNOxZaAPFtdvibNKkSu3WrbIb2tlnywHeWStWcGrLFuy9e9ddB2tAwbPPkrFhA+YxY0LdlVqxeLGRoiKV33TKDZVFiyLYu1dLbKzIAw8Uhro7YYWYlIRl4EDsZ5/tW5OaSt7rr7sfG7/6qj665hfj11+j3bNHzth2wQWh7k6tMaxZQ+T772P65JOA9OXHUMFsRvfbb3XVNQWFsESMi8PRvHmtEgcAoNdj79ABKN21UVBooCiGTQhwrYY4G/suIOnihhtKmDy5gMGD5cKeyspk3ZGTo2LNGjnuZPTokhD3JriUlAi89pq8C/Xgg4XExiquBuWxXnwxOZ98QuGkSX51liFDsLdpA0DknDluF7aQYLEQ9eqrABTdfz9SnO/iwA0F85VXAqDbtAlVenrA7xMKCkgYPZqEm25SjBuFM4rCxx4jY9MmLEOH1rote/fusnFTVYE5BYUwRjFsQoA6Ta7eHsiOTa9edh58sIhevZR4iLrm++8N2O0CXbva6Njx9ApGnjPHxKlTapo3d3DrrcWh7k6DxnzddfIfgoCQlxeyfpg++gjNyZM4U1MpGjs2ZP0IJs6mTbH26YMgSRgDcEdzIUVG4mzaFMFuJ/6OO9D8+28d9lJBIQwJwqJn/iuvkLl2LZbhw4PQIQWF0KAYNiGgOjs2FdH98QcJI0cS+8ADwe5W7bBaSRw+nOSuXRGKG+bEefFiOWXs6NHmEPekbtDrJR57rMCjcKZCKdVILW/r3h0AZ3IyztLdm/pGyM0l6u23ASh49FGCU8wnPDCPHAmA8fvvA3+TSkXuG29g7dsXVWEhCTfdhKp0AckrDoecvOX998FiqV2HFRRChFBQENwkJopHiMJpgGLYhAB3jE0Vhs1vv+lYtsxAZma5r8nhQP/nn2h37KjLLlYfvR7NoUOoc3JQHz0a6t5Um337NOzYoUOjkRg58vQzbB5+uIgNG04xYoQyifNG4pVXktKuHfoAMhXae/Ui45dfyFy7tuzJek43HDV7Nqr8fOxnnYX5mmvq9dh1jWX4cCS1Gt327agPHgz8jQYDOXPnYm/bFnVaGgk334xQWC6WTBTR/f47MU88QXKvXiSMGQPvvOMuzKqg0NCIfeQRUjp3xlCdRYBAcDiqtdijoBBOKIZNCAh0x+bDD03cfXc8335bthrrTE2V2zh5MuxSMjpKUz6HRbaoavLVV/I5HjjQQkJCeKTxDTapqaKyIOcDVXY2qpISRJOpSq1kNOJo105Orep0Evn22yQOGwbm+jOInampiDExFDzxxGmX6lhMTMR64YVANXdtACkujpyFC3E2aoR2zx7i7roL7ebNRD/zDMl9+pA4ahSmBQtQZ2UhGQwwb57vTHgKCmGObts2VAUFiAEWLgyE2AceIKVDB/S//BK0NhUU6hPFsAkBeTNnkjtzpjw58oEklaV67tnT5n7eZdiozOaQ+vd7w13LpgEW6bzxxhIeeaSAsWNPr6QBr7wSxZYt2lB3I+ypMt2zr/fl52P68EN0u3YR/eKLddE1rxTfcQenfv8d68UX19sx6xPzyJE4k5Koid+ks1kzcj7+GDEiAu0//xD7xBNEzp2LOj0dMTqakmuvJXvhQtL37oVevdzv027fHnaLRQoKvlClp6NOS0NSqeQaNsFCEFBZLGh37QpemwoK9UjNqzkp1BhbAGlZjx9Xk5mpRquV6NKl3Jaw0YgzPl52+Tp5EkcYZUJqyDs2LVo4mTgxvGoD1ZaNG3W89VYU//tfJH/8cYqUlNNzJ6q2CCUlqErjLEQfBTorovvjDyI+/RRH27bkzZpFwk03EfnRR1gHDMA6aFBddteNFB1dL8cJBeYrr8R81VXVKjio+fdfjEuWYFi1iqyvvyZn3jyczZqhX78e3ebNmEeMwDpggNtYEsptX5rmziXmmWcoePRRih56KNgfR0Eh6OhKC3M6OnRACmCnOVDsXbvC118rKZ8VGizKjk2Y4qpf06mTvVJcsMuFzRWrEy405B2boGGzoduwAazWkHZDFOH55+WJ7403lihGjR9cuzWSXh/wBEGdlkbE119j+OknrBdfTNGddwIQO3EiqlOn6qyv0U89hf7HH0//nQWdLiCjRv3ff0TOmkXSwIE0uuQSot58E+2//2JYtQrbhRfibNmSkltuIW/2bGznnlvlDlD0q68SMX9+kD6EgkLdoS0tzGnzU3urJti7dpXbVwwbhQaKYtjUM5p//8X4xRdVBv+XuaFVDuBzGzb+sv6EAGcD3LEpLBS48844li831D65jCgSf+edJF57LQnXXy9nrAkR339v5O+/dURGikycqBTj9IerFo0zISHgrED2Tp0A0OzZA6JIweOPY+/UCXVODrEPPRTcTEWl6H79lch584i/4w5UYbaoUWc4neh+/73S+dT+/TeJl11Gcv/+RL/2Gtq9e5F0OsyDB5M7ezaWYcM89PqffiK5b1/05RM+lKP4jjsofPhhAGKmTsX47bd183kUFIKEa8fGXtvCnBWwd+4MgObkydDW6VJQqCGKYVPP6H/5hbhHHsH0/vt+dVu3yobN2WfbKr3mbNYMRw1SRdc1jhYtcLRsiaNly1B3JWCWLTOyfLmRV16JqnVgfdTrr2P46ScAtHv3oq5GgcFgYrHAyy/LxTjHjy8iMVHZrfFHTeJrHK1bI+n1qEpKUB85Ano9uf/7H6LBgGH9+irv72ojiu4YnuJbbkEMoAZWg0eSSLrkEhJHjcKwcqVsRJbiTE5G+88/SBoNlosvJvf110nfvp3cjz7CfNVVSJGRHk0Zly9HVVBA3N13+1yJLnzkEYrGjkWQJGIfegh96b2soBB2OJ3uxVFbkA0bKSoKR6tWAEqcjUKDRDFs6hl3qmc/ExObDXbtkl3RyicOcFEwbRoZf/5JyS231E0na4izZUsyNmwgd968UHclYBYvlv38Ro8218qwMaxaRdSsWQAUTphA9sKFONq3D0YXq838+SaOH9eQkuLkrruUVLZVIcXEYLnkEmznnBP4mzQa7KXfr3b3bgAc7dpR8NxzSDqdnHEriBiXLEG3cydiZOQZEwOiysx0Gyjxd95JzLPPul8Tk5PJmTeP9G3byFm4EPN11yHFxPhsK+/ll7FeeCGqkhLib7nF+66yIFAwbRolV1+N4HAQf/fd6P74I9gfS0Gh1ggWC8XjxmG55BK/SYhqiuKOptCQUZIH1DOBpHrWauGXXzLYvl1Lq1bO+uraGceRI2r++EOPIEhcfXXNs6FpDhwgdsIEAIrGjaNwyhSP13WbN8vFHFu0qFV/AyE3V+Ctt+TdmsmTCzAaT/NYjCBgO+cccj7+uNrvc3TqhG7nTrR79rhdn0puvBHrhRcG97u2Wol65RUAiu6997ROT6zKycGwfLlsyG3ahFDeBc1ul+trlMbeWAcPDrxhnY6c998n8eqr0e7ZQ/zNN5P9/fdQmmWyrAMq8l5/HVV+PoY1a9D98Yccm6OgEEZIJhOFjz1WZ+1bL7gArNYG5X2hoOBCMWzqmUCKcwoCNG/upHnzBmzUSFLYVzH+6qsIAC680ErjxjV015IkYu+/H1VREda+fSl46imPl7U7dxJ/881IJhPZn3+Oo0OH2nbbL9HREk8/nc8PPxi55prTr9BoOOGOsyndsQFAEDyNGqu1RimLy2P65BM0R4/iTE6m+K67atVWuBP7wAMYytXPsPXsiWbfPlTFxRQ98EC1sqRVRIqOJvvjj0m64gq0+/cTd/vt4K1Wh1ZLzpw5GFavxnLllTU+noJCQ6XkxhspufHGUHdDQaFGKIZNPRNocU5/qHJyiLv9dtRZWWT8+mtYGRCRs2Zhmj+f4ttvp+jBB0PdHZ9IUllRzloZAIJA3syZxDz9NLnvvSdvt5XDmZyMs2lTtP/+S8KoUeR8+mlwaw5UQK2GMWPMjBmjGDUBU24XoDrYzzoLSaVCKE0VXRHt9u3E3XcfBY8/jmX48Bp1TSgqIvKNNwAonDgRKSKiRu2EG0JREYYff8SwZAn506cjpqQAYBk+HFVWFpYRIzBfcQXO5s2JefJJTPPnY/z221rX7REbNyZ74UISr7oK/e+/w+zZcMMNlYVGo4dRI5jNCAUFiMnJtTq+AnIyiJ9+IrqwEOt557nPs1BQ4LcWlK13b8yjR8sPzGYP18SKzeRc4AAApiRJREFU2Lt3p8T1vYoiMY8/7lt71lmU3Hab+3HMk0/KY4IXHG3ahMXigm7jRhwdOyLGx4e6KwoKYYdi2NQnZjNqVwYmPzE2jz0WQ7NmTm64oZi4uMquRGJkJLotWxAkCVV2dsC1N+oLdVYW6qNHQ90Nv2zerOPoUQ0mk8jll3ufmAaKo3Nnsr/+2utrYqNGZH31FQk334xu2zYSrr2WnAULsPXtW6tjesNur2RXKQRA/G23ofvjD/JmzsQyYkTA77Odcw5p+/ZRKR97KYaVK9EcPkzs5Mlk9OxZo4B/yWQi7/XXifjyS0rGjKn2+8MJwWxG/9NPcq2ZtWvdBqGtXz+K77gDgJIxYyi5/nqP95WMHIlp/nwMK1eC2ezzfAeK46yzyPngA4wrV2J68EHIzPTf74IC4m+7DVVODtnffKNMJmuBad48op95BkQREyBptWWGjcWCaeFC3292ONyGjeBw+NWaCwrKDBtJ8qu1DBrkYdhEfP45go90/dZ+/UJu2AiFhSRcey2CJJG+Y0fd/f5Lkpx90WA4rd1fFU4/FMOmHnGlZxaNRqTYWK+anBwVn3wi19K44QYfgd86HWJSEuqMDNQnT4aVYeNs1gwATZgbNnY7dO9uo2NHBxER1Y9D0f/yC2JUFPZylct9IcXFkf3FF8SPHYt+40YSbryRnPffx3rJJTXpule2btVyzz1xTJlSyKhRym5NdVBlZ6MqKan+bohW69eSLHzkEfS//opu+3biJkwge9EieUutOggC1sGDqxdPEmaoT5wg6qWXMKxejaqkLJbN0aoV5hEjsJTfhfGy+2zv3RtH06Zojh/HsG4dliFDat0n24UXYu/fH1PpTp0qO5vYiRMpnDix0o6qqrAQzdGjqNPS5NicL7+slHVNoQocDmKeeQaTq0bQNddQ2KoVtnLnWjKZKJg0yWcTrjTEAJJO51frkbhFEPxrW7f2eFz40EPg9O4G7vp9AxCKi5HUaghyopCq0O7YgSBJOJo0qdPf/tiHHiLiq6/If+opiu+5p86Oo6AQbBTDph4RU1LI+vxzVAUFPt3Htm2TJ0qtWzu87ta4cDZu7DZs7N261Ul/a4IrviDcd2wuuMDG8uVZ2ConnasS9X//EXfPPQgWC9lffhlQcLEUGUn2J58Qf/fdGH76ifjbbyd78eLqZeLy1bYkF+M8cULDhg16xbCpJjVJ9xwQWi25s2eTdNll6H//ncjZs6vnnhmE+JyQYLejPnUKZ9OmgLzDbFy+HMFmw9G0KeYRIzBfeSWOzp0Dc6MVBPKffx4xIQF7kIsRuoh8800MP/2E4aefKLnySgofe8xdl8vZpAnZn39OwlVXodu+Xb53P/643ie0DRWhoIC4e+/F8MsvSIJA4RNPEP388xSlpyOVKzQrmUwUldYSqhK9PnCtShW4FigqTQTjD6GoiPibbkKKjCRn7tx6vRbqqn5NRVwGn5LyWaGhoaR7rkekiAhs/fv79bd3Feb0Vr+mPK4YHVWYFel0lK5oqU+elLdFwhydrnp6oahILpBYWIitR4/q1RAwGMiZO5eSK6/E2r8/th49qndwH6xaZWDzZj0Gg8ijj4auKGiDRJJQ5+QA1Gj107ByJYlXXEG0D39/Z6tW5JfGDUTNnIn2r78Calezbx/JffpgmjNHtlzDHYcD3a+/EvPoo6T06EFcOXcdKSaG/BdfJHPpUjJ+/53CJ5/E0aVLtWIDrYMHy7ujdRRPWHz33ZRccw2SIBDx/fc06t+f6GefRSi9Nhzt2pHz6aeIJhP6DRuIu+8+n3EYCp5o//0X/W+/IRqN5H7wAcX33RdWcaE1QbN/P9pduzD8/DPxd94pL0LUE9pSwybY9WsqoqR8VmioKIZNmLF1q+/6NeVxlqYpVYdZBXKxUSMkgwFBFMOuby5++klPfn4NflglidiHH0a7bx/OlBRy33+/+paRVkve22+T88EHZe+txcTVbocXXogG4K67iklNVYpxVgehuNgd61GjHRurFd3Wrei2bPEpMV9zDSUjRyI4ncTdfz9CYWGVzUZNn446Oxvd5s3hOwl0OtFt2kTME0+Q3KsXiWPGYPrsM1R5eahPnkTIz3dLS264Qd5tCdPP4mzShLw33yRz5Uos/fsj2O1EfvAByf36uYut2rt3J+ejj5D0eowrVxL76KMgKvdbVdjOOYe8N94g+9tvsVx+eai7ExTsPXuSs2CBXJB37dr6M24kqWzHpo52L124DBvNf/8hFCv10BQaDophU4/oV6/G+MUXqA8f9vq6KML27fJkt1cv/7sdrh2bsDMeVCocpS4o6iNHQtyZyqSnqxg7Np6zz04hO7t6l3/k7NkYly9H0mrJef99xEaNataJ8n7ZkkT0U08R9dprNTJwPv00gkOHNCQkOBk/vqhm/TmDcbuhGY01yjjmKPX71/z7r0+/fASB/OnTcTRrhqNNG4Qq/B91mzdjXL0aSa2m0E82p1ATM3kyiddcg2nBAtRZWYixsRTfeCNZX3zBqS1b/BbMrAnqI0eIefRR4urQ39/RpQs5n39O9mefYT/rLFQFBWjKjWO2fv3IffddJLUa/Y8/urNcKnhi/O47NPv2uR+br7rKPVE+XbD160fO/PlIBgOGNWuIv/tuauTbXA3UJ0+izshA0mjq/HyKSUk4U1IQJMldhFhBoSGgxNjUI6YFCzD88gu5r7+O2Uvhq4MH1eTnqzAYJDp2rMKwadYMR5MmSNHRddTbmmM75xzE1NSwjA/45psIRFGga1crCQmBr7bqf/7ZXSQx/8UXA0oaEAi6338n8qOPANkXveDZZ0EVmMFVWCjw+utyMc6JEwuJimoALkthhqo0S2FN42scLVsiGQyozGbUR47grBCI7EKKjibr22/ldMH+vl9JIvr55wE5Q5ijbdsa9Suo2GzoN2zA8MMPFN1zD87SPlkHDMC4ciWWwYMxjxghF/Wry7R8koTps8+QVCpUGRk1X1gIAOuAAWRecAHGb77xSDGt2bsXyWgk9+23cXTq5BFMrgCIIlEzZxL1xhs4mjcnc8UKn4lyTgdsF15I9kcfkTB2LIYffyTunnvktP/V3ckPEO3WrUBpqvlaZgcMBHuXLqjT09Hu3ImtT586P55CeCDk5KD95x+0//4rZ6wM0512XyiGTT3irmFTsdp1KYcOadDpJLp1s1U5P7AMG+audh5u5L/6aqi74BVJgsWL5R+D0aOrF2BvWLYMQZIoDnLhMtt555H3wgvETp1K5IcfoioqIu/VVwPKnrV6tYHsbDVt2ti58caSKvUKlZH0eiyXXlrzFL4aDfYOHdDt2IF2926fhg0gG/vlEMzmSpMTw4oV6LZuRTQaKXzkkZr1KRhYLOjXr8f4ww8YfvwRValbmbNpU4oeekiWDBlC+uWX11uOcWfLlth69kS3bRvGZcsovv32uj2gWl1WN6WU6GnTMPzyC5aLLqLgiSfczws5OUhnehpos5m4hx/GuHSp/HD48LBceKsVZjOa48dxtGvnfsrWvz858+YRP3Ysuj//RH3iBM5Wrerk8LbevcmdObPeFg3tXbti+OknJc7mdEWSUJ065a4jBhB3xx0YV6xwP7Zcfrk7EUxDQTFs6gtJcruN+aphM2iQlb1706rtIqUQGDt3atm3T4teL3HFFdUzbPJffRVbnz6Yr7oq6P0qGTsWKTKS2IkTifjyS4SiInJnz65y1W/UKDNNmzoRRaV+TU1xdOlCzoIFtWrD3qmT27AJpBCnUFxMzFNPodm/n6xvvin7nu12ol96CYDiu+4KSTFIVWYm0c89JxszRWWujc5GjbBcfjnWAQPKxHW0Ku0P88iRsmHz3Xd1b9hUxOHA0bYt0oYNGH75Bf26dZivuQbLRRcR+9hj5L/8MuaRI+u3T2GCKjNTnthv24ak0ZD3yiuYG3jdpYpo9u0j/uabsXftSu7cufKTkkTEJ59g79yZnDlzcDZrVmdGDciLI/V5Xq0DBiCUlMi7sQoNG6cTzX//od21q+zfP/8g5OeTvncvkkkuM+L63XG0bIm9U6d6TYwRLBTDpp4Q8vNRlQbgiaXxMd7Q6Th9AsDDLF2ta7fmssssREcH4LblinkRBFCp6vQHxTx6NJLJRNz48Rh/+AGhpITcDz6o0t3g3HPr1qdboWocZ50FgGbPnoD0qrw8DCtWoCooIGrWLIqmTAHk2Br1kSM44+MpuvfeOutveYTiYtTHjuHo2BEAMSrKbdQ4U1IwDxuGZfhwbL16Vb8GTx1gvuIKop97Dt1ff6E+etSdkrle0GgoeO45iseOJfqVVzAuWULE4sUYv/kGwekk9sEHEaOiglqfqiGg2bOH+FtvRXPiBGJsLDkffIDt/PND3a2gotu4Uc6GmZ/vYdyrT5wgtjQOTtJocHTogK1HD+zduuGMicF66aW1LigbSmx9+iguaA0Rs1meTJaO2ZGzZhE5ezYqS+Vi5JJGg/rQITlTJXIdp4IpUxr0bquyNVBPuHdr4uOD5hsbd+edNDrnHLQ7dgSlvWChPniQ5B49SA6jAdFmg2+/dbmhBea2Ffnuu8Tefz+CuX7qwliGDnVn2tGvW4fWR6atw4fVpKUpt25QCELKXnvnznKxvKSkgPTOJk3IK43XinzrLXSbNgFyMHLmTz+RN2sWUlRUrfvlC6GgAOM33xB3xx2kdOsmZ3RyGfEGA/nTp5O5ZAmn/vyTgmnT5FpLYWDUgLya6Jo0G7//PiR9cLZsSe6775K5bBnWvn0RSpNGCA4HcXfdJWeyO4OIfuUVNCdO4GjVisylS087o8b4zTck3HADqvx8bL17U/jYY+7XhJISLAMH4kxIQHA40P7zD6ZPPyV2yhQS7rmHpCFD3GOMYDaj2bvXd5KRKlAfOYLpww8VtzAFD4S8PHQbNmCaM4fYBx4gaeBAUjt08EjeIUVFobJYECMisPXuTfFtt5H32mtkrlhB2r59bqMG5KQRDdmoAWXHpt5wx9f42K3ZskXLY4/FcsklFh5/vOp0sADq9HQ0J06gPn68UrXsUCImJqLOzATkui/hUKV7xw4d+fkqGjVy0r9/1Vur+nXriJo+HUEUsV56aZ24oHnDOmAAOV98gfroUWwXXuhV8/jjMWzerOONN/K44orKKzAKgRP78MMYVqyg4JlnKLn55hq1Yevbl4xqTmYtI0ZQvG4dpi++IPb++6E0QN3RoQOODh1q1A9/CHl5GFavxvjDD+jXr/fMzCaKqHJz3XFG5quvDvrxg4l55Ej0v/2G8bvvKHrggZD1w96zJ9lffYX+xx8xffIJgJz699ZbyZkzR75/6yjoVpWejm7rViyDBoXcDzX39deJeeEF8p96CikuLqR9CSqSROTbbxNdughhHjaM3Dff9NiBcbRvT84nn7hdzbU7dqDdsQPD2rVodu9Ge+AAsRMmkPfWW2i3bCFxzBhEoxF7167Yu3fH3r07tm7dZPe1KpLG6H/5hZinn8bSvz85n39epx+9PEJBAdqdOxFjY91ZIBVCgCTJ/0qvE8PSpUS/8AKa48e9yrX//uv2JjCPHInloovk6yxMFqnqEsWwqSfcho2P+JotW3Ts2aOlRYvAV5CdjRvD1q1hl/JZio5GjI2V61kcPYqjU6dQd4k+fWxs2XKKgwc1aKq46tVHjhA3fjyCKFI8Zky9+83b+vSBcrtd6hMnkFQqxNRUfvlFz/r1BrRaiW7dwr8Aarijys5GZTYjhaCKfMG0aej/+APNoUPQvz+sWlVnx4p+4QVM5SZD9jZtsAwfjnnYMPn+bEBZb8yXX45pzhwsgwfLhZxCObEXBKyDB2MdPBjBbCb+hhvQb95Mwk03YW/fnoIXXsDWt29QD6k+fJjEq69GfeoUxTffTP7LLwe1/SpxODCsXo1l6FAApPh48l5/vX77UA/EPPkkptL4u6J77qHgySd9Gx+CgLNJE5xNmmAZOpTCxx/HsHIlcXffTcT334NKhXXAAESTCVVxMfrNm9GXWwwRo6PJffNNrIMHy084HPIEtNx96a5fU8eFOSsS+c47RM2eTfGNN5I/Y0a9HvuMRRRRHzwoZyYrFxOTP2OGuxaUZDS6jRpHs2bYu3TB3rmz/H+XLh4JAcTERKhBAeqGimLY1BOW4cPJat3aHaBVka1b5UDcnj0Dn6y6a9mkpdW+g0HG0aIFurw8NMeOhYVhA5CcLJKc7D8mRSgpIX7cOFR5edh69JCrxodw0qfKzCThuuvA6STj0y944YXeANx2WzEtWtTMpUGhDLWrjk0N0z17IEmyz2OAcWWSyUTu//5H0uWXw65dRM6aReHDD9eqC6qMDAwrVmBcvpyCxx/H3qMHIGdR1G3fjnnoUCzDhuFo375BGTPlkWJjyfzll1B3oxKS0UjO/PkkDRuG5tAhdHv2kDhqFObBgyl84gmPTFo1RXXiBAnXXYf61ClAnnDXJ0J+PnH33oth3TryXn65xrucDQFbjx5EfPIJ+dOmUTJ2bLXfbxkyhNz33iPunnuI+PZbUKlI37ULzZEjaLdvR/v333LSkX/+QVVQ4JE1MeLzz4maMUPe1enWDXv37mj//FPuVz0bNq56OYoLXN2j3bmTmKlT0ezejaqkssu8dtcut2FjO+ccshYvxt65c9BrhjV0FMOmnhATE7H17+/z9W3b5FXHs88OPBg8bIt0ItfZYceOsCjSGXAOA0ki5tFH0e7ZgzMxkZz33y8rpBkiBKsVJAnN0aOsGPYlewrOIyZG5MEHA3NXVPCPu45NLVezjF98QfSLL2IZMqRa6c7t3bqR9+qrxM6Zg3XgwBodW5WWhnHFCgw//IDujz8QSuNljMuWuQ0b60UXkVmuHotC3SDFxJD17bdEvvEGgs1GxJdfYly9GsOaNZRcfz2FjzxS4/o7qsxMEseMkdMNt2xJ9qJFHh4Amn/+qVNXIfWRI8Tfeiva/fsRjcY6rSMUDpivvRZbr14427SpcRuWyy8n9913ZePm669BEMh7/XUc7dqVpRK329Hs2ycvNpSi/ftv1Dk5qH/+GcPPP3u0afroIxwdO9ZbDSW3YfPvv/LCTQiyIZ4uCAUFaHfv9tiFKRkzRq4Vg1woWlcaWysaDDg6dXLvwNg7d8Zezk1Zio4+7eLZgoVi2IQB6ekqTp7UoFJJdO9egx2bMDRsHKXZitTHjoW4JzBqVCImk8QLL+TTrp1vVz/T++8T8d13SBoNuXPmIPpwG6xPnE2bkvXttxiuu52n9z0KwMPX7CUuTlmhqTWSVOsCne6mTCbUOTloA8yMVh7zjTcSO2kS9rS0siD+AFCdOkX8XXe5fwhd2Hr2lLOZla9z1UB3Z/xis6H/5RecrVuHRyHTUsSkJApefBGQ03ZHvfQSxtWrMS1ciPGbb8hcs6ba2dyE3FwSrr8ezcGDOJo0qWTU6NeuJf6WWyi54Qbyn38+6NkodZs3EzduHOqcHJwpKWQvWOARcHw6oNmzh5ipU8l97z13IpDaGDUuLEOHkvu//8nuzYWFcvKA8nEOWm0lgzT/+ecpufFGtNu3o/v7b3QbN6Ip/S01rFtHbrnkIqZ330W3dascr1O6wxPMFXxn8+aI0dGoCgpkA+w0+97rGvWBA/DAAyRt2YLGy0Kvdvt299/O1q3JnT0be5cuOFq3PiPiYeoCxbCpJ0xz5iDGxGAZOrRSxolt2+QVkA4dHJhMgU9sXIU+w9Gwcf1wa44eDWk/9u3TsG2bDo1GIj7efxpte/fuOBMSKHrooaD7xdcGsVEjpl+2gpP7kmnJISZ/cQHFl7+P7bzzQt21Bo1QUIBglxcSnLUsrmgvdbfU7NlTeeISJNSHDqE5dgxr6c6vmJiI+vBhAKx9+shFe4cO9RnHd7oR88QTmD7/nKJx4yiYNi3U3fGKo3VrOZNb166gUiFFR9dopT3ugQfkneRGjcj+8stK37Hm4EEATJ9+inb3bnLef99vWYHqYPzqK2IffRTBZsPWrRs5H33k4b9/OqD79Vfi77wTVWEh0c89R97s2UFt3zJ8ONlJSbIbWSA7HgYD9h49sPfoQQkQ+cYbRL/6KpYLLsAyciRSbGyZdO1a9Bs3Yly+3P2co1Urt5FTfPvttYtDEwTsXbqg37gR7a5dimFTFTYb6vR09xxITE6G5cvRlGZXdTRpUrYL06WLe0cMkMtK1FOiotMZxbCpD5xOol96CcHhIL1//0qGzdat1XdDAzkRgaNJE/mHUpLCalXW0bEj1n79sHfrFtJ+uGrXDBxoISHBv2Fj69uXjF9+CcvMPqLeiF4n8lyL+Rj352C46SayFyzAphROqzHu3RqTqda1JpwtWyIajajMZtSHDuEM0g6C5sABDMuWYVy+HO0//+BMTubUli1yELNaTe7//idPnsv5558pWC6/HNPnn2NcsoSCp5+myqwgIUB9+DDGb75BVVyMecgQOc136Titys4m/tZbKZwwAeugQX7H74InnkB94gS5773ntQBk8R134Gjblrj77kO3bRtJQ4aQO2dOrRc/NPv3E/vQQwiShHnoUPLeeito5QrCBeOiRbLh5nBg7dtX3vGqA2znnlv2QJIwLFmC5YorqsyGBqArXdW3XnopJddf7/Fa4eTJWLZskeN1duxAc/QomkOH0Bw6hHPdOorvuqtM/N576CMisFx4YbV29ezduqHfuBHd33+fdoVXg4Ikof37b4yLF2P87jucTZqQVZoMRoqKgk8/Jdtux9apE1ItF9EUqib8fglOQ1QZGQgOB5Ja7bWaeHS0RMuWjmobNmJycrXTzNYXtj59yF60KKR9cDrhm28iABg92kctGrMZ9YkT7olouA46Dz9cxHXXlZASeyuW8ZvQHDhQJ2mBzygEAcugQUjByKqlVuPo2BHdtm3yynotDBvN/v0YlyzB8MMPaPfudT8vqdXYO3SQUzOXus7Z+vWrddcbKtb+/XHGxaHOzES3caPfGMZQ4WzThpx580i4+WaMK1cixcSQN3MmCAKm995Dt20bCWPHYu3bl4KpU31mvHJ06kTmmjV+J8HWiy4ic8UK4u+4A+0//5Bw3XUUPPWU7L9fw0UvR7t2FD72GEJhIYVTpgQ0CW8wSJK8E/LaawCUXHklebNm1UtR6einnyZy3jyKN2yQs9pVcV5z33kH7d9/42jRotJrriKaxaWPhZwcdDt3yvXtnE7P7/6ll4g/dgwxKgrLoEHyLu+AAVUu7CgJBLyjOnmSiG++wfjVV2j37y97QatFlZ1d5uJ81VXY0tKQquFqrFBzBClMz3RmZiZ2e+jT2QqCQGpqKmm1uCi1f/1F0ogROJo08WuIhNmmS0gJxnlft07PDTckEBsrsnVreuXfK0kidsIEDKtWkTt7dlmqzXDHbpcnt0EO3g3GOT+TiZk8GdOnn1I4YYI8CQwQAeTznp6OJElEP/sskR98AICk1WK98EI5Zmbw4LA1vENFzJQpmBYupOS666qdcrg+r3fDypXE3XkngihSdPfdFDz1FEJhIZHvvEPk3LkIpRXBzVdcQcFjj+Fs0oTYSZMoueEGz5X+ABDMZmImTybim28AyPr882oZfaqMDHA4gubKVql/4TDO2O3ETp5MROniW+H999er4Wb85htiH3xQLilwyy3kv/RSnf/4C6JI6owZOBcvRp2e7n5ejIiQd4KuvRarjwQjqrQ0DD/+KLvHhdgLI1yInDWLqJkz3claJIMB85AhmEePxnrBBe4d5LC43k8DtFotSQEWwT6Nll/Cl6qKc7o4LY0as1n+FwJcbmhXXmn2ughnmjePiG++QbBYfKbhDjWvvRbldlV0o9V6GDXGRYswvfdePfdMoSKuOBvt7t0Bv0ezfz/x110Ha9a4nzNfcQXmwYPJfeMN0rdvJ+eTTzCPGaMYNV5w+aMbVqwAS/gWq7UMGUJe6c5A5Jw5RM6ejRQdTeHjj3Nq/XpKrr0WSRAwLl1KowEDSLr0UiK++or422+XA86rgWQ0kvfWW+Q//zzFt9xSLaNG888/JA4bRsKttyIUF1f9hgaKUFyM9q+/kFQq8l5+mcLHH6/X3Sjz1VeTN2sWkiBg+vhjYqZOrVbikBqhVsNbb5GxZQuZ331H0Z134mjcGFVJCcYlS9CvW1emdTg8rjsxNZWSW245c40aUUT366/uuRyAvXNnBEnC2rcvuTNnkr59O3nvvIP1oovC0i32TEIxbOoBV3C/t6DewkIBZy3KkUTNnEmjc87BNHduzRupI+LuuIPGbdtiXLGi3o9dWCiwYoWcqnn06Mr54HWbNhH93HMAFDz1VFi69Pzxh45Zs6K46qpE0tO936qaPXuIfeQRYp5/nqhXX637H8fTidrceF6wd+uG9fzzsZ19dpVaoaiI6BdeIOnSS9H/9ht89VVZO716kfvRR5hHj/YIElaojO2cc3CmpqIqKKiUFjfcMF93HfnPPANA1Kuvoi4N+BebNCFv1iwyV63CMmAAgsOB9sABOTvjrFmyj351EQSKb7+d/OnTy57KzUW3fr3Pt+h//JHEq65Cc/IkWK2ocnOrf9wGghQbS84nn5CzYEHIavGYr7mGvNdfl42b+fOJfvppr+O3ad48op9+WnYtCwYqFfY+fSh49lkyNm8mc9kyCsePx3z11W6JbuNGUrp1I/622zAuXoyQnx+cYzcwNAcOEDV9Oo3OPZfEMWOI+PRT92vWiy/m1KZNZH/9tbzwVJP7VKFOUAybesBt2HjZsXn22Wg6dUrh888jata4xYLmxAnUIc4+5g1XkoRQ9E2jkXjppXxGjy6hRw9Pl0bViRPE3X03gtNJydVXu3PIhxOiCNOmyefv+utLSEnxnvjA0bEjhY/KaaCj3niD6Geekd+sUCXRzz1HSps2RAYpA5L97LPJXryYogcf9C2SJAzff0+jAQOIfPddBIcDy+DBUA3XNYVyqFSYR4wA5JTE4U7xXXdRMGkSOXPn4mzd2uM1R6dO7iKekkpF7ltvYR08GM2//2JctKh2hrjTSdx995Fwww1Evvmm5xghSZjef5/4sWNRFRdj7dePrCVLcDZtWvPjhSGaf/6Rz2MpzhYtalw7KliYr72WvJkzkQSByHnziPaS3c/43XdEfvghmgMHgt8BQcDesyeFT/6/vfsOc6LqAjj8m/Rke6V3pIOAIooI2FBEFBREREARUEBFRbGjINgVbMinUsSCVOliBRFEUECkSe+wbK/pmfn+SDbsSttlk51k977PwwObzM6cnQ3JnLn3nvN8sdEY4/r1SE4nph9/JO6xx6h66aUk9O5N7KhRmL/5JvBxhBApMxPLzJkkdu9OcufORH34IboTJ5BjYs4o013asu1C+RDjZeXgfCM2mzcbyM/XkJBwcR9a/l42J09efIBB4vaVNVWj5LPZDH372ujb9z/T4Ox24ocORZuRgat5c3LefDMk5wAuXWri778NRETIjB59nqkokkT+o48iR0UR+8ILRE6bhiYvj+y33hLD4RegychAY7ejlFPDOd3evcQ8/zzGdesAcNepQ864cTi7dqVatWoQgv+Hw0HBAw9g7ds3bIpp5D/+ePEHZBk0GqLefptI38h79ttvY7/9dgCiJ0zAtGoVkZ9+Su4LL+Do3Ln0B/V48NSqhaQoRL/5JvqtW8mePBnFbCbm+eeJ8N2JLujfn5yJE8tWHjgEGX/9lbhhw5CsVuSqVf0l00OBrW9fJFkm5tlncfoa6vo5nei3b/f+8xyFJYIhb8wYbLffjnn5ckwrVqD/91+M69cD3vLfziuuOCMxrxA8HpK7dEHrq5ipaLU4rr0Wa+/e2G+8UfWG3ULJiCufcpD70ksUDBx4RrOvvDyJvXu9v4K2bS+uUEJhmddQTGwK72aE0mhSxIwZGLZuRY6NJXPatJAsXepwwGuveUdrhg/PJynpwiMw1vvvR4mMJHb0aCxz5yLl55P14YflUuEnXGkD1Jzzv6ScHCS7/YwKiMZffsG4bh2KyUTeww+TP3w4mEyEXlodXsK5b4/2yBHiBw/G1r07UZMnA5A9YQK2vn29G8gyjquvxrBpE/qdO0m45x7snTuT+/zzZzR1PC+DgZw33sDVujUxzz2H+fvv0XfvjrN1aywLF6JIkreC2rBhIXmjpyzM33xD7JgxSB6Pd6ropZeqHdIZrP364ejY8YweR/qdO5EcDuTY2LOW+Q4aSfLOBmjShLzRo9Ht24dl5kwiZ8wAScJTpDpb5JQpyGYz9m7dwqu/kaKg//tvTD/9RN6TT3pf91ot9ptvRr91K7Y+fbD17ImcmKh2pEIpicSmHHhq1TprU7a//9ajKBK1arlJTLy46UP+EZsQbNLpLkxsfB2Ty8vs2Rby8iTuuMN2xnktGDIEbUoK9uuvv6hGeeVh5swIjh7VUaWKhwcfLPkCXlufPiiRkcSNGIF5xQrsixdju+uuIEYa3jTp6QAB/eCKmDqVmFdeoeDuu8l5+2006en+LuYFgwejPX6cgiFDxBSGYHE4wiqZj5o8Gf2uXWiPHcPesSPOa67Bev/9pzfQaCgYPhxr375Evf8+ETNnYvr1V4xr1ninMb32Wql+Xmu/friaNiV+yBB0Bw6gOXkST3Iy2W+8ET5VIUtKUYh66y2i3nsPAOsdd3hLbZfTCG1pFf080pw4gXnJEv9osrNNG1UTTnfDhuS+/DIRs2cj2e1oDx3y3qh1Oon88EM0OTnwwgs4L7/cW8Gxe/eQveGgOX78dIlm3/Q++/XX4/Ktjcx55ZWweg8RziTW2Kho82bvm1Zp+9cUVZjYaFJTwXnx+wkG/4jNiRNQTqW7FQU++CCSceNiWLPmLG9Oej2548aFZM8LgOxsifff9y5CHDMmF4uldMUA7N26kfn55+QPH46tT59ghFhhaDIzAfAEcMSm8OJEv3kzCX37knjHHd6LbfC+9saPF0lNMDgcxD30EFUvvdTfeDUc5EyciKNdOzR5eeh378bWvftZt1Pi472LvdeswdqzJ5KiYJkzh4jp00t9TE/VqqStXInjqqvQ2GwoRmNITc0KCKeT2FGj/ElN3qhRZL//fsgmNUVJNhuJffoQ88orRHzxBcA5+xuVK50OV9OmAP7pcZLHQ95jj+G8/HIADH/9Rcy4cVS54goSb70V87x5qoVblFRQgHnePBL69qVK+/ZEv/46+n37kE0mrL16oViKrHEWSU3YE4lNkGlSU4l65x3Mvp4CRW3Z4n2TbdPm4i/65YQEFIMBSVHQnjp10fsJBjk5GcVkQpLlYmUSg2njRgOHD+uIiJDp1s1b/lVz8iRRr79ebslVWURGKrzwQi5dutjP3VT0AhydOpH7wgv+O3ySzea/iBd8FMV/ARzIqWiFDfT0e/ZgXLcO7YkTGAJVzUg4N6MR7aFDaPLyMC1bpnY0JWJatoyo118nc8YMXM2aoU1LI6FfPzTnmVbsqV2b7I8+Ivvtt8l99tnTU9ZKyDxvHlU6dMCwYQMZ33xD3siRZH72WYVbO2BevhzLggUoWi1Z77xD3pgxYTPFTjGbyfcVtNHv2QNw5toblRQ26jT4GnUqZjMFw4aRvngxKX/9Rc4rr+C48koUScKwZUvx9bU2G9r9+9UIG/3mzcQ99hjGtWu9JZqvuoqsd9/l1N9/k/3hh7ibNFElLiE4xFS0INPt3UvUu+/iatiwWDlFRYEtW7wLNNu0KcNIiyR5y8t6PEiFd4ZDhSRh69EDRastXk0kiAp719x6qx2zWQGHg/ihQzFs2YImK4ucN94olzgulk7nrYLWr9+ZJaovitNJ3LBhaI8cIWP27KA13Qs3Uk4OktsNgByI/jCKgmnpUmJ8JcQlwHH11WS//bYYoSkntp49MWzbhnnxYqyDBqkdznkZf/qJuJEjkdxuXC1akPH11yT27Inu0CES7rmH9AULztu3yNqvX+kOKMtEvfkmUR98AIDphx+wd+9O3nPPFdvMvGgRroYNcbdoUeqfKZTYevZEv307jmuu8fYVCTPW++9HstuJmTAB8JZfdlx/vcpRnU5s9L7Epii5WjUKBg+mYPBgNKmpmFau9Daq9DGtWkX80KG4mjbFdsst2Lt3x92oUcATTt3evZjnz0eJiiL/4YcBcHbogKNDBxxXX43tzjtDdhq6EBgisQmyczXndLlgwAArW7fqadGibCMJGQsWlOn7gynbtyC2PNhssHSpN7Hp08cKikLM889j2LIFOTbWu1g7hLndgS9kpk1L887hP3mSxF69yPjmm/JdhBqiJJcLW9euaKzWMk89kPLziR882F/tTDEYkJxOCvr3F0lNObLddhvREyZg3LAB7fHjITvH37B2LfHDhiG53Vhvv917w0urJeObb0js2RP9nj3EvPQS2b4kpKwkm43YRx/FvGIFAHmPPuovEV+U/u+/iX3sMdBqyX7jDWy9ewfk+OVFt3Mnnlq1vP1EfMUQwlnB8OGg1RIzbhxRU6eiRESQ/8QTqsbkT2y2b/fenT1HUiInJ2MdOLDYY7qDB1F0OvS7dqHftYvod97B1bAh9u7dsd1yi7cYxkUmOZrMTEyLF2OZPx/D338D4ElMJP/BB70V/rRaMkJkWpwQfGIqWpCdq9SzwQBPPpnHF19kVrRZAKr5/nsz+fkaatVy0769E8uXXxIxezaKJJH10Ud46tZVO8Rz+vtvPVdfnczChYGt0uapUYP0RYtw162L7tgxEu+4A92//wb0GOFITkoia8YMMubMKfO+lIgIFL0exWQi98knsfpGZvU7d5Z530LJydWr42zfHgDTkiUqR3N2+r/+Iv7++5EcDmxdu5L93nv+0WxPrVpkzJ6NvVMncn2NPC/EtHw5CXfcgW737rM+rzl1ioQ778S8YgWKXk/W5MnkPf00aM786HfXq4fjmmuQ7HbiRo0i+oUXQm7d5rkYf/6ZxNtvJ+6hh8JiynFJFQwbRo4vQYt+5x0sM2eqGo+rcWPSZ8/m1G+/lToJyR85kpStW8maNAn7jTeiGAzo9+0j6r33SL7ppouqnmpcvZq4Bx6gStu2xL7wAoa//0bR6bDfeCM5r74aNtMPhcASiU2Qna85Z8CFatd5mw1NSkrQD1M4Da13bxvGTX8S4/tAyHvmmZCejqAo8Mor0Rw7pjt7wYMy8tSsSfq33+Jq2hRtaiqJd96JfsuWgB+n0lAUTEuWIBWuW5Ikcl5/ndRVq8h//PHTdzVFYlPubD17AmD59lt1AzkL3fbtJAwYgMZqxd6pE1kff3xGvxh3o0Zkzp5d4kp95m+/xbhhAxEzZpzxnJSVRVL37hi2bsUTF0fGnDnnLSiixMSQ+fnn5PlGBSJnzCChb180IbZ2878sX3xB/H33obFakUJxSnYZFTz0EDkvvOAd3ejWTd1gDAacnTqdd5rk+SixsdjuuovMmTNJ+ecfsj78EFu3bjjbti1WQjr6hReIHj8e/V9/ndFMtuh1jnH1aswrVyK5XDhbtSJn/HhObdpE5syZ2Lt3F73cKimR2ATZuUZs/vjDQFpaYE6/6bvvSL7iCuIefDAg+wsk488/U71hQ+IHDw7qcWQZoqIUDAaFPp2PeKd6uFzYuncnf+TIoB67rH780cgffxgxmRTGjMkNyjHk5GTS583D2aYNmuxsEvr2xfD770E5VljweC7qRoBu714S+vYlfvhwoous1/LUquWfduZs146C/v39F9lC+bF17+6d7rJjB7q9e9UOx0+yWr1JTW4ujiuuIGvatBIt2Dd/8w0xY8ac87Va4CsNbZ4/Hyknp9hzSlwcth49cDVsSPqyZf7RrPPSaMgbPZqMGTOQo6IwbtxIUrdu6P/888LfW95kmahXXyX2mWeQZBnrXXeR8cUXKJGRakdWdopCUpcuxA8ahCY1lYLhw0lfufKM3ljhTImKwtarF1mffUb64sX+x6WCAiJmzybyf/8j6fbbqdKuHdFjxxI5eTJJnTtjWLvWv621b1/yRowg9eefSf/uOwoeeED0nRFEYhNs/jU2vkaa4K3+2q9fAq1bV+XIkbIvqld0OnTHj4dUI8xCHl/DrmDHptHA1KlZ/PNPCpc4dyJZrbgaNyZ70qSQHo52uWDCBG8zziFD8qle/eL6GZWEEhdHxjff4Lj6apAklIiIoB0r1EW+/z7VGjYkauLEEm0v5ecTPWECSTfc4G+y6alW7awXnO7mzcl5801sd94Z6LCFC1Di4ym4/35yn3suMEUhAkSxWMgZPx7nZZeR+fnnxcvLnoP20CFix4wh4quviJ4w4ayvNWeHDriaNEFjs2GZMwcUBcl2uppi7gsvkL5sWamn4Tq6diVtxQpcjRujPXXK33U+ZDgcxD78MFEffQRA7pNPkv3uu2eMgIUr7cGD6Pfuxfjbb8ixsQDFmkmbFywgcsoU1WKLmjiRqEAW4ikyNVLR68n68EOsvXohR0aiTUkhcto0ot96C/3+/cVGY91Nm5L3/POiqplQjBinCyZFOZ3YFBmx2blTj9MpERfnoVYtT5kPE8pNOv29bLKykPLyvAs7gygqSsF59dWkL1uGotOF/MX7119b2L9fT3y8h5Ej84N+PCUykoxZs9Dt2xf2lY/KQpORgWS3X3iqgm/aWcz48Wh90yltXbuSO26cKAwQonJfflntEM7K3qOHd3rMWda3nI2nbl2y33yTuNGjiZw6FTkuzl/lyU+SKLj/fmKffpqIGTPQ7dmD7uBBMr7+2lsUQ6u96PdcT/36pC9diuWrryjwlR8OFXGPPeZtYKnTkf3WWxWuEbHBN1XY1aLFGb13dLt2ETtqFJKioGg0FDz0ULnGpsnKImrKFDxJScEpo20wYO/WzTvtzm7H+NtvmJcvR5Odja1bN+//IUE4DzFiE2Rp331H+jff4KlZ0/9YYWPONm1cAXlP8Cc2GRlgt5d9hwGkREXhiYsDgjdqc/y4lv37tacbIQLuSy4J+epf+fkS777rveh44ok8oqPLaY2UyVQsqdFv2YJl9uzyOXaI0Jawh03Ep58SP2IE2pQU3HXqkPH552TNmHHhpMZuR//PP+dc1C1UfJq0NO9UoqI9vEqY1BSy3X03OWPHAhD92mtYvvzyzG3uuAM5OhrdkSNEzJ6NYcMGjH/8UabYCykRERQMG+aPW7JaiR01qtz6kp1L3siReKpVI+PLLytcUgP410A6z9KY0920KXmjRwN4m3j+73/lGpuraVMUrRZtWlrw11+ZTDhuvJHsyZPJnDkTW9++FWOqoRBUIrEJJknC06ABzmuuKVZStrB/Tdu2gak4o8TGIvvma2vP09xNLYUXgbqjR4Oy/6lTI+jUqQoftVqMIdSmTJzH99+bSE/XUq+em3vvDVDfmlLSnDhBwr33Evvkk0R8/LEqMahBk54OcMH52NbevfFUrUruk0+S+ssvOG64oUT7j/rwQ5K6dSNy6tQyxyqUnpSfj3nBAszffKPO8bOySOjXD9NPPxE3alSZ9lXw4IPkPfIIADHPPIOpyHoEwFuYxXeHTNFqyZwxA0fnzmU65rlEjx+PZf58Em++udhah/Ig5Z8e0Xa3aMGpdeu8n60VUOGIjbNt27M+n//44/4iDzHjxxPx6aflFhtmM+5LLgHO3s9GENQmEhsVbNniHbFp2zZAZSklyd94MaSnowVhxMbphG8XepO6jvnfE6FyOczSuPNOGwsWpPPGG9mqTQ2Xq1Wj4J57AIh+5RV48UXvwvoKTuOraOYpug5DUTAtXkzsE0/41zMo8fGcWreO/McfL1V3dlezZoB32ohQ/ozr1hH36KNEv/VWub+epbw8Eu69F/2uXXiSk8l+660y7zPv6acpGDAASVGIGzUKna8jvWH9epJ69ECTk4NiMJD79NM4bryxzMc7l/yHH8bZsiXazEwS+vUjYurUcqnGafr+e6q0b1+8iEEZ+0+FLLsd/Y4dALjOMmJTKO+JJ8jzJc0xL79MxLRp5RIe+KbI4etnIwghRiQ2QWRYt46od97BsGaN/7GMDA2HDnnn9bduHbgeAaG8zsYdxMTmlx90ZGXrqMpJujQ8RPY77wT8GMF05ZVOrr5axV4RkkTe88+T+8wz3q8nTKBKkyYk9OlD1GuvVaieEEX9d8TGX+1sxAgsc+Zg/PHH0xtfRKOpwsRGv2ePt/OqUK7sXbogx8SgTUnBsGFDuR1XstmIHzQIw99/e0ssB6ohriSRM3Ei1ttvJ+/RR3FfcgmmpUtJ6NcPTXY2zjZtOLVhAwVBrgBZWDre2qcPkiwT88orxA0fjlRQELRjWmbMIO6BB9BkZxMxa1bQjhMq9Nu3I7lceBIS8NSqde4NJYm8p546PZo3dmy5vdb9Je3FiI0QgkTxgCAyrllD1IcfIt1/P85OnYDT09AaNnQRExO4O13OVq3A4QjJ+afOdu2w9u2Ls127gO/724nHgGT66+eSO+1/Ifnz/9fhw1qMRoWqVYNXAa208h95BCUujphXX0WTk4Px99/RHThA3rPP+reJmDoVdDqcbdp479iF6x1TWfaP2CgmE9ETJhDx6adIbjeKyUTeww/j8P1/vVie2rWRIyLQFBSg278fd+PGgYhcKCmjEdsttxAxezbmRYtwdugQ/GM6HMQNGYJxwwbkqCgyZ88O7O9dqyX7ww/9613cTZuimM3Yb76ZrEmTwBzY5r7nZDaTPWkSztatiXnpJcxLl6Lbs4fM6dMD2wRZlomeMIFI3xqSgv79vU0XKzjJ48HRvr23tPOFFuFKkrfhqqIgOZ04r7iiXGIUiY0QykRiE0SFoydykeacrVq5mDQpK+CFRPKefz6wOwwgx403BmV6hHXaYr4/8gAAPcfWwdOwYcCPEQzPPRfDhg0GJk3KpkeP0Cn2YB0wgJjRo0lbswb9pk3FR2sUhcgpU/yL7hWDAVfz5jjbtsV52WW42rY9/93FECI5HNhvuAH93r0k9ukTnGpnGg3uJk0wbNqEftcukdiowHb77d7EZvlyciZMOKO6VKBFT5yIafVqZLOZzC++8F/8BVSR4gPuhg1JW77cm0wULu7PzCRi9mw8Vapg69078McvJElY77sPV/PmxD/4IJr0dJRAnl+bjbhRozAvXw5A7jPPeCvChXDp/kBxtm9PxsKFJf8GSSKvcMS98PwoSlDPlat5cwA0BQXlUu1UEEpDJDZBVJjYuIuUek5OlrnrLtu5vkUoId327Xw3fjcuDFyafIz6g8vnTlVZrVljZPVqE3q9QsuWITjNS6vF3aQJrv9eiLtcFDzwAIbNm9Fv3ow2MxPDli3eRa7TpuH4z4ex/q+/cDdpEpIjaIrZTNb//kfyddf5q53ljB9f4sIAJeVq1gzDpk3odu4E0ayz3Dk7dMCTnIw2NRXjr78Gde0JQP7IkRj++ovcZ54Jyuj02Xjq1y/2tXnpUqJffRV3vXrY7rij1FXYSsvVrh1p332H9sSJYjfwynJhXbhGyfDXXyh6PdmTJmHr1StAEVdQRc+13U78sGHYu3bFeu+9QTmcEhlJysaN3t95JUg2hfAiEpsg8vewKfqGH2yyHPQPs4tit6M7dsyb5AVgyoSnQQMWxA2GNLhjRCSgTlWx0vB44JVXvM04Bw4soG7dMFqkbzCQX1jdSVHQHjniT3IMmzcX62ou5eaS2LMnSBLuxo2Ljeq4GzRQ7fUpFRR47yrr9WAwkPPqq+g3bSJ/+PCLWkdzIa6mTQHQ79wZ8H0LJaDVYuvRg8hp0zAvWhT0xEauUoX0ZctUff+19e5N9Ouvozt4EOPq1Tiuuy7ox5SrVPFOm/IxrViBZc4cst5/HyUmptT7UyIi8CQnI8fEkPnZZ+UzjTBU2O1ITidKdPRF78KycCGmn3/G9PPPoNFg9RWHCTS5yA1bQQglIXgFXEF4PP4pLoWJzfHjGj79NIK//w58CSzt4cMkt2tHlfNUUVFTcpcuJHfuHLAqKorZzPT1CXz8/il63RE607nOZ8ECMzt36omOlnnssTy1w7l4koSnTh1svXqR+8orpC9f7p3n7aM9fhxP9epIsox+1y4ivvqKuCeeILlLF6o2b17+ZaV91c6SO3UiYsYMb4apKDg6dSp1tbPScFx9NTkvvEC+b3GvUP4K7/RrcnICX71LUYieMAHzvHmnH1P5ppISEYHV19clYsaMcj++ZLN5S1L/9BNJt9xycVUBNRqy3n+ftKVLK1dSAxh/+42qzZoRf999F70Pa79+5D/gnaId+9RTqpU8FwS1iMQmSDRpaUguF4pW67+btW6dkZdfjmHcuIu/G3MuclwcuhMn0KanI9lCb6pbYYNSXRkroxlXr/aOSgEms8Rtd3pISAidRfjnYrPBm296f++PPJJPfHw5NeNUgbtpU1I3biRl0yYyP/uMvJEjcVx1FbLZjCY3FyUiwr+tbscOkjt2JPaRR7DMnIn+n38CWomtaLUzbUoKlvnzsXz+OdUaNCDmqacCdpyz8TRsSMHw4cVGs4Ty5WrdmpSNG8n88suAT5mJeucdIj/+mNgnnkC7b19A910WBffdhyJJmH75Be2BA+V6bMVsJvOrr3DXrInu0CESe/Q4o+/O2ZhWrCDmySdPJ59mM54GDYIcbegxbNmCpCjIvqbWF0WSyB03jvzBgwGIffJJzHPmBCjC07THjxM3dCgJwVzLJQgXQSQ2QVK4vsZTtSrovDP+Nm8OcP+aIpSoKGTfBaNG5a7QZxOIXjbm+fNJ6N+f2KHDUDyhn8wU9dlnkZw8qaVGDTeDB+df+BsqALlqVezdupH33HNkzJ9Pyr//kvr999hvucW/jWHzZnQHD2JZuJDY558nqVs3qjVpQkKvXkSPH+/v11FaUn4+0RMmkHTDDRjXrUMxmch98knSlixBm5WF5HCofnddKAeSFJQpM5FTphA1aRKAt+BECBUu8dSr55+CpkZfL1fLlqR/9x2Oa65BY7MRP2IE0ePHn7PsecSnnxI3bJi30MOCBeUcbWjRFzbmLOvMC0kid/x4CgYNQlIUYkePLj6yGAByRATmFSswrl+PlJ0d0H0LQlmIT/YgcbVowak1a8gq0hG4sNRzmzZB6FsiSWHRy0Z39OhFfb9+2zZifdOdfjDfxjWdqzJtWsQFvit0uN1gNCo8/XResGY+hT6dDneLFv7eMQC2224j48svyXviCX/vEclux7hxI5H/+59/OieAftMmIqZOxbBx43lHJQ1r15LcuTORH3+M5HZj69qV1FWr/NPONL7KbnJCQvB+Vh/t8eOYFi/GULSxoKAKTWZmQPqtWGbOJHriRAByn32WAt+d8VBSGJNlzhyk/PK/kSLHx5Px1Vfk+frqRP7vfyT06+ftqFzI4yF67FhiXn4ZSVEoGDgQW2UusiHLGP7+GwBn27Zl35+v91HBwIFIikL0iy+Cr8x9ICixsf7P9cKGooIQCkTxgGAxGPA0aEDh8nCbTWLXriAmNnjX8uj37kV78mRQ9l8WZRmx0WRmEvfAA0h2O/brrmOWMpCDB3Xs3x8+L9/HH8/nrrusVKsWXiNNwabExOC49loc117rfUCW0R04cLoowaWX+rc1f/cdkb71OYpOh6tpU1xt23qLE7Rt622EKEnIiYlo0tLOWe3sv805g8k8Zw7R77yDtU+fcquUJZwpeuxYIj7/nJxXX8Xav/9F78c8dy6xvtL6eY8+6i1BHIIcnTp5/380bYqUn69OdUKtlrznnsPVqhWxjz/uLaZRWBLaaiVu6FBMK1cCkPPCCxQ89FClrrCl278fTW4ussmEu0mTwOzUl9woJhP2W28lMT4eTp7E9P33WGbNwt2gAe769XHXr++9XqlWrVQj2a4WLdAdOYJ+2zacV18dmJgFoYzC58owzP3zjx6PR6JqVQ/Vqwfn4jakR2x8PU5Kndi43cQ99BC648dx163Lkden8F0n75BHnz6hXwmtqBo1RFJzQRoN7oYNcTdsiM23CLqQs2VLbN26Ydi8Ge2pUxi2bcOwbRsRn38OwKl16/DUrYu7SRMyv/gCR/v2Zy0MUNic01MOIzbuZs0AURlNbXJyMpLbjXnRootObHTbtxM7ejQA+Q88QN6YMYEMMbA0GtJWrvRPg1aT/dZbSWvWzN/nSsrMhDvvxLR+PYrRSNbkydhvu03lKNWn37wZAFerVoH9vWk05L70ElKRpFG/dSum1ath9epim8omE5569ciaPBl3ixYASFlZIEkosbFn7NrVsiXmFSsCVhRICBGKgiY9He2xY7hatw67Gw7qv+tVUJaZM9FmZGDr0QN3o0Zs3nx6tCZYrxF/YhOKIzZ16gC+2JzOEjfLi5o4EeO6dcgWC5nTp7N0TRXsdg0NG7po3ToE+8D8x6RJkXTu7AjKuqrKxn777dhvv937pnviBAbfqI5h82ZvJTbfawzA0bnzOffjH7Eph8SmsOSzbu9eb1EEfeArIgoXZrv9dqJfew3D+vVoTp5Erlat1PtwN29O/ogRaDIyyB03LvQ/7EMgqSlUtN+OEhUFOh1yXByZ06fjvCI8epAFm8G3vsZVDpVNbT174qlZE92BA2j370d34AC6w4fR2O1odu0qNsIXMWMG0e+8gyc+Hk/9+qdHeRo08Bc50G/bFvSYhQD6T58py8yZ6HfuRHv8ONqjR9EeP47G7q02m7J1a7nMbgikUr3zffvtt2zcuJHjx49jMBho1KgR9957L9WL9GlxOp3MmjWL33//HZfLxaWXXsqQIUOIPUu2X5FZ5s7FsHUrzpYtcTdqxJYt3gv5Nm2Cd4HrbtQIR7t2xS7wQoWclERBv354atRAcrtL1qX60CH/4tfsyZNxN27MvGe9PXD69LGF/HXFn38aePvtaCZNUvjjj1NBG6mrdHwLwu01amDv0cP7mCyX+ELTv8amHN6sPbVqIUdGosnPR7d/f+CmmAil4qlVC+fll2P46y/MS5dSMGxY6XciSeQ9+2ypXmuhQLd7N4b167GWoYRwIBk2bYKYGNIXL/b2tRIA7/RByeE4702ZQHE3aoS7UaP/POhGe/QougMH/KNrANq0NO/fmZnexsx//XXG/nT79yMVFGD46y+0Bw96E6D69b03W0WRFlVojh9Hd+SIP1HRHjuGzvdvxWAgbdUq/7aW+fP9iXUhRZKQq1RBk5VVsRObnTt3ctNNN9GgQQM8Hg+zZ89mwoQJvPvuu5h8Uz4+//xzNm/ezBNPPIHFYmHatGm88847vPLKK0H5AULVf5tzvvdeNkOGFFCjRvCaMtpvvRX7rbcGbf9lIknkvP126b6nbl0yFixAv2ED9u7dOXxYy4YNRiRJ4Y47QnsamqLA+PHe8s53320VSU2wlfTDU1FwXnklmrQ05OTk4MYEoNHgatoU459/ot+5UyQ2KrL26uVNbBYvLnFio//rLyI/+4ysSZNONxYOows1zfHjJF1/PQCOLl3w1K2rbkCA88oroVcvPCdPBr63UBiz33JLsYqR5U6nw1OvnnetYhE5r71G7gsvoD14EF3h6I7vj/bwYZToaOTYWDRpaZgXLsQyf77/exWTCXe9ev51PPkjR3pH7ISycTjQnjjhTUR9oyyS3U7u2LH+TeKHDfMXo/gvRa8v1szd2rs3ji5dcNesiafwT7VqaI8eDamKjyVVqsTmed+iyUIjR45kyJAhHDhwgGbNmmG1Wvnll18YNWoULXzzM0eMGMHjjz/Onj17aPTfOwQVld2O1jfdpTCxMZsVrrgiOEUDKhpNRgaKb5qQq21bf+nL+fMtAHTs6Az5RGHZMhObNxuwWGRGjw7jZpwVjSQVq1RYHtzNmmH888+La1YoBIz91ltRxo7F8PffaA8cQL7AaIFu+3YSBgxAk5uLu04d72hNmJFr1MDRuTOm1auJmDmT3JdfVjskIQwpERG4W7Twr7s5/YTi/eO7QHa2aYOUm+uf2ibZ7eh37UK/axeKRkPe44/7vzV63Dj0W7YUn95Wvz7uunXBaCzHny70SDYb2mPH0KSlFWtSG/PUU5h++QXNqVNI/7kpoBgM5L7wgv934a5fH012Np6aNXHXqoWnRg08tWp5k5ZatYqNOp9tNDfi44+JfuMNsj78MHRvmJ9DmSbhWq3eu+aRvvmYBw4cwOPx0LJlS/82NWrUIDEx8ZyJjcvlwlWkIZ8kSZh9d8akEBjuL4yhNLEUlqhVTCaIjy//n8Pj8b5oQ+3OosOB9tgxgLM2X9MeOULElClY5swhc/Zs6NWr2Lnr0sXBsWNarr/eERKvjXNxOuH1172jNQ89VEDVqgoQuvEWupjXunBhrubNAW8BgbOdW3Hey4eSlITjmmswrV6NZckSCp54Ajj7edft3Ut8v35ocnNxtmtHwWOPhe3vx/rAA96fec4c8seMKdYgVw3i9X4m3c6dIMveEd0grY0Kynn/z75s99+P7f77vV8UTm3zjfJoMjKQihRzMWzZ4i2D/59S+IpGg6d2bdJ+/dW/JlG3dy+KJHnPjU6HotF4/63Vouh0KDExp3fg8XivfULk9XWh825atgz9pk2n17ccO4bWN11aMRhIOXDAfy2nycsrdn3pLkxUfH8kb18JAHI+/PD8cV0gble7dihmM7oTJ8Lu/6qkKBc3FizLMm+++SYFBQX+aWZr165lypQpfP3118W2ffbZZ2nevDn33nvvGfuZO3cu84sMXdarV4833njjYkIKHatWwXXXQePG8O+/TJkCu3bBvfdC0JuQt2oFO3fC1q3gu6AKGZMmwRNPwF13QdFOyDt3wuuvw9dfe9+UwLvdO++oE2cZvfcePPYYVK0Ke/eCGpVWhXMoXB9Rnm/UR47Apk3Qpg2EwFSgSu377+HAAejdG5KSzr7N/v1wzTVw8iRcdhn8/DMUvXAKN7Ls/Szatw8+/hgeekjtiIT/uusumDfP+zno69cWdkpbHGX7dtixA/bsgd27T/+dmwu1annfNwt16QK//nr2/SQmgm8dEACdO8OaNd5kwJf8+P+OjobDh09vO2SId9v/blf499q1pz8rXn0Vfv/93NtOnXp6pOnrr73v+YXPFRR4j3v4MKSkwPHjp2889+kDRa6B/aKjoU4d78/tK9LAtm1gt3s/RxITg/85lpLivZAJMxd9a2DatGkcPXqU8ePHlymAXr16cWuRYa7CzDAtLQ33OToVlydJkqhatSopKSmUNAc0//MPsYAjOZnMkyf54ot4/vjDSP362dSufe7GgoGQ6Haj93jI3LoVR3x8UI9VWsbYWOIB5+7dZJw8iX7rViLffx/Td9/5t7F36ULW8FHIHdpTA0hJSSEzE/buPfdLtW5dD8nJ3qlpOTkSu3efe9tatTz+XjJ5eRK7dp172xo1PP4SzVarxPbt5962WjWZWrU85ORIjBuXDGgYPTqbvDwbeWEyE+1iXuvhxrR4MbGjRmG/8Uayy2tKml4PV17p/fdZKhZWhvMeMlq18v5xu5FSUs4475oTJ0jo2RPdyZO4mjQh4/PPUaxWsIb2mr4LsQwcSMzYsbgmTSL9tttUvZstXu9nSvr9d3RARoMGOINU1TRY513KyyOhVy90Bw6QsmPH6bVoF5KQAJ06ef8U8pUZ1qSl4S5yHuIdDvTR0eDxIHk83hugbjeSouCRJFKLbJtgs2EAb0LvLD79X3a7OVV0v/v2Ydy796zhKZJESpEG0XFr1xa7Vvmvk2PH+tsLxCxciGXBgnNue+qff5CrVAHAfM016OLji428eGrVOj0KZbef/twoXMTvdnuTjgAz/vgjnqpVcReZdXW2zyw16HQ6ks51M+q/217MAaZNm8bmzZsZN24cCUVKpsbGxuJ2uykoKCCiyHB3Tk7OOaui6fV69OfI8kPpTU9RlBLHo/EVDnDXqIHLpbB16+lSz8H+mTzVqqHftQvN8eMhdf6geC8bxeMhdvhwdIcOAXDqxjtZ0vZ5lv/bmF+GmJg+PYvevb3nfe1aAw8+eO7SvK+/ns2AAd4Lj7//1tOv37kreIwdm8ODD3q7j//7r46ePc+97VNP5fLYY96u3QcPas+77cMP5/Hss3lYLArPPZfLkiVm7rrLGpZrY0vzWg83mvR0JN+HXaj9jBX5vIcy/3lXFOKGDEF37BjuunXJmD3bW862AvxOrH36EPX66+j37EH/2284r7lG7ZDE691Hc+oUuuPHUSQJZ6tWQT8ngT7vSkQEmtRUJLsd3a5dZS5X7UlMxJOYWOz/Xca5kgRF8SY5RbedNcv7Hu92F0uEJN92RX/2nJdfRpOdfca2eDxIslxs2/z77sN+/fWnkypZ9n6fLHsrvep0/jjs11+Pp0oVJN92EXFx5MTF4S5c51LkfcXau7d3BPlsP1s5MqxZQ9zQoSgmE+lLl+IOw6IBhUqV2CiKwvTp09m4cSMvv/wyyf+pKlS/fn20Wi3btm3jSt8dyhMnTpCenl55CgcA+Q89hO2220CnY/duHTabhqgomYYNgz8CFbJNOhXFn8Ros7KQCgrYf/8z/LgYFul789uv8Th/PH0XcfVqo///+vbtvnm2OoWaNT1n3GyMjj5dSMBsVqhX79znOSbm9LYm0/m3jY09va3BwHm3jYuTfTHCPfdYueee8L7DW1H5Sz2XQw+bovRbt2JcvRpXs2Y4bryxXI8tFCfZbJjnzMH4+++wZEmRJyRyJkwg9umnyZwxo3yq5pUTJToaW58+mJYv98/fF0JDYZldd+PGxfrHhA1JwtWyJdpVq9Bv21YufXiKHvu/a5KU6GhKmhKcUfL6PJwdO1LS8k/+nmt4R8oiqlXDevJkyCby+r/+In7wYCSnE/sNN3gLOISxUiU206ZNY+3atYwZMwaz2Ux2djYAFosFg8GAxWLhuuuuY9asWURGRmKxWJg+fTqNGjWqVIkNJpO/IdnmL7z9Wlq3dpXLWv6QS2w8HkzLlxP1wQfod+5EtljQWK3sX5tBp5eHoSins5R69dx062bj5pvttG3rBrxv8tu2ec/hI4/k8+ST55/X1a6di7VrU0sUWosW7hJv27BhybcVQpe/OWc51+U3/vIL0W+/7S2rKRIbVSlA9GuvocnP986ZL1LIxNWmDWkrV4Ze4ZUAyB0zhpyXXqr0FadCjd6X2DjLMyEIMFeLFphWrUK/fbvaoQilpNuxg4SBA9HYbNg7dybrww9DqrnvxShV9D/88AMAL/+nZOSIESPo0qULAIMGDUKSJN555x3cbre/QWdldboxZ/mUevYnNmrPi3Q6MS9cSOQHH/LPoTi+pR9ancSLsVPQWK005V+qV7+CpCSZm26y062bnYYN3f7RmMK1VikpGtas8X4Q33mnGAURykaTmQmAp5xHbIpWRhNUZjZj79YNy7x5MG0acadOkffII7guvdT7fAVMagCUStYkO1wYNm8GKN+RjgBz+dZk6LdtUzkSoTS0+/eTcM89aHJycLRrR9Znn1WIGx+lSmzmzp17wW0MBgNDhgypvMmMohDz7LPISUnkDxvG5s3exU5t25ZvYqNRa8RGUTB89jmbP9jK0oyOLOJXjuFdWxMX6ebJtn8RdWIRuiOHWbUqjYiI8w/NLlxoRpYl2rVzUK9e8JqbCpWDf8SmnBMbd7NmgLdsKU6nd26joBpbz57exGbmTEyAbutWUteurRAf6hckyxh/+QXn1VejlHShtxAcHg/6rVuBMB+xKUxs/v1XvL+FCc2JEyTcfTfa9HRczZuT+fnnKBaL2mEFRHiPN4UgKTeXiC++ACDjgRHY7d6Rh7ZtXef7toDx1K6No1073BdoPhcsb70dzecfPkyWO9r/mMUi06WLg27d7BRIt6A0boCzXbsLJjWKAvPmeT94+/QJbjU5oXLwr7Ep56lonho1kKOj0eTmotu/H3fTpuV6fKE4R8eOeBIS0GZkIJvNZE+ZUjmSGiC+f39Ma9aQ/eabWPv3Vzucyk1RyPr0U/R//427cWO1o7lonlq1kGNi0OTkoNuz58xGnkLIUWJjcTdsiGI2k/H118V7AYU5kdgEmNZXEc0TF4ch1swff6SSlqYhIUG+wHcGhqdWLTIWLSqXY2VmavjpWzf9Tk5GGXIPctWqyDJkuaNJiLBy4y1ubu7uomNHh78CpEx38uleov1v3gy7d+sxGhV69BCJjVB2rrZtkePj8ZR3bX5JwtW0KcYNG9Dv3CkSG7XpdOQ/+igx06eT9eabONu1UzuicuPo0gXTmjVEzJiB9Z57QqaRYaWk0+Ho3BlH585qR1I2koT95pu9pYm12sDu2mYj6q230O3fT86ECXh81VWFslEsFjJnzkSTnV3uN/qCTSQ2AVa4aN9To4b/saSk8klqysPRo1pWrjTx/RKJDVsikRUN9dnDdcqn5L74Iv36Wenc2UG7ds4yv78dPQpJSR6uuspJdHRoVhMRwkv25MmqHdvVrJk/sbHdeadqcQhe1qFDiRk71ts3JESrFQWD9e67iXrrLfS7dmFYvx5nhw5qhyRUANnvvhvwfeq3bCHu0UfRHTjg/XrzZrKmTcN5xRUBP1ZlIBUUYF6yBOvdd3tvaBiN/n46FYlIbALMP2LjW+uiGl9d9kBMrzh1SsNXX1lYudLMjh3Few61YTOuOnVxXHkZALVre6hd+zxrYWQZ7aFD6I4exdGp03nvFvbsCZddlkpOjrijKIS/wlEa3e7dKkciVGZKTAy2O+8k4ssviZgxQyQ2KoqYOhVPrVo4rr22wqxvCAi3m8j33ydq8mQkjwdP1arI8fHod+4k/t57OfXHHygh1oA85DkcxD/wAMbffkN77Bh5Tz2ldkRBUzHLv6iocMTGXb0GnTsnMWBAPCkp5XuaY594gmr162OZM+eivt/j8U4zK5SfL/HOO9Hs2KFHg4curGIyo/i3zR38OHsPV617uuQlbD0ekjt39lbiSL1w+WSdDuLjK86Il6AiWVb1zrz95ptJ/eknMmfMUC2GQDOuWUPUq6+iOXVK7VCEUigYPBgA08qV/ptxQvmSCgqInjiR+GHDkHJz1Q4nMGQZ7f793ouIMjKtWoXk8WC9/XZSf/6Z9CVLsHXvTs4rr4ikprTcbuJGjsT422/IFou30WgFJhKbACtMbA5YmrNvn57ffjMWa/RYHhSTCcnjKVUvG5sNfvjByOjRMbRuXYWnnz69kKxBAw/33VfAx9dM5xRV+O76idyz6Dqiln14wVGXM+j1p0tSHzlyzs127NAF4r1REPwMa9dSrV49Evr0UeX4ckKCd9RGr7/wxiFOk5ZG7MiRJPTrR9RHH5HYoweSr5S2EPrcjRvjuPpqJFnGMmuW2uFUSvqtW5FkGU+1asjlveYvGBSFKu3aUaVTJ3T79l3U9+P2NcHW6ch6/32yPvyQ7ClTUGJjUcxmsv73P2x9+/q/Rbt/P1Le+XvbVXqyTOwTT2D+7jsUo5HMmTNxtW2rdlRBJaaiXYDDATk5kJsrnfVmr9ms+K9TnE7IP5KDi2hW53hfOE2bunA6JZzOM7ctrJh2NiaT4q+Y6HKBzXbubY1GxT/jzO2GzPh6uInGejib3FzpnNump0usXGnip59MrF1rxGY7neduWS9jumMAnudG4br8csaPz8F2oC3ZmXNJL1z4XOQmk8GgYDJ5/y3L3lGec7HUaEjssWPojhzBcVm7M7bNzdVwyy2JVKkC330nER9feea/C8GjzchAcpVPdcIKS5axfPMN0RMmoMnJQdFokBMTsd90E0pcnNrRCaVQMHgwxnXrMPjKDQvly1DYmLOiXGRKEu46ddCmpKDftq1UVd40p04R++STuBs1IvfFFwHw1KuHrV69M47h/570dBLuuQclIoLMGTPw1KkTkB+jQlEUoseOxbJgAYpWS+bUqTivvlrtqIJOJDYX8OWXFrz/z85+R+XLLzO49loH4O25Mvqvn7xPfOX9659/DDRtWg2ATz7JpHt3OwDffWdixIhzD6dOnpzlL3G8apWR++8/d9+N117LZuBAb/PKP/4w0HfSS8BLsATvnyJefDGHhx4qAODuuxPYtevs9eZPZkXw4YareWrKFLKmT2fPHh033ND6nDGMHJnHc89575wcPaqlQ4dzL0h78JJnmMpqtEeOkJ6uoU2bs5/bpCRISFAq07peIYj8pZ7LuYdNUcaff8a8bBmOjh3DroCAJiWFuBEjMG7YAICzRQty3nwTd506KFFRpy863O6w71xdGdhvvJG0RYtwXX652qFUSvqKltgArhYtvAVStm3D1rt3ib7HtHw5MU8/jTYrC3n9evIffBA5OfmC36dJTUVyudDt3k1i9+5kffopzquuKuuPUKFEvfUWkTNmoEgS2e+9h6NrV7VDKhdiKlolU3SU6Iorzn/32tm2LTmvvBLwGJSoSAB055mKptcrjBkT8EMLlVhhc06PiqUt9du3Y5k7F+Pq1arFcLHkmBi0p04hWyzkvPQS6cuX47r0Um9H+8ISiE4nCffeS+TkyZWq0lhY0mpxtWsnyj2rQVEwbN4MgCuMG3P+l79R5/btF9xWys0ldtQo4ocNQ5uVhbNFC9JXrChRUgPepsdpy5fjbNUKbVYWCXffjeXrr8sUf0XjqVEDRaMh59VXsfXqpXY45UbcVruAVq1cvPAC5J1jHmft2m7/v5s2dTFqVB5uN0yZEomiSAwalE9srPcDvkGD09s2bOhm1Khzzw1t3Ph00lG37vm3bdHi9LY1a3p47L5jRM6cQZYmgeW1h3HokK7Y84XGjcvh5ZdzSOjXD+Mf6wGQI6MoGDiQggceQEq6AllbGI+bgwfPvWZHUyRFrl3bc95tI5Zshc2gPXqUpCT5rNtqtRK1alXj5Mlz7kYQSkXjWwOi5oiNyzeNU79rl2oxlIb+r7+8F15aLZjNZE2ZgpyYWKycfVGm77/H+Ntv/so7Oa+9ViHWFFV0Un4+Um4ustrVPCsJzYkTaE+dQtFqcbVqpXY4AVMssZHl4hcGRRjWryf2scfQHTuGotGQ//DD5D3+OP759yUkV6tGxsKFxD7+OOalS4l96il0u3eTO3ZswPvphCNr//4427fH3bCh2qGUK5HYXMA//+iZMAEg6qzPt2vnpEEDb7Kwe3UW771X/G7D559H+v/dvLmLJk28yc2+fTree+/s+wSoV89Nq1bebQ8dOv+2Vat6aNvWm9wcO6Zl8swqwIsgA4e86186dnRw8812rr3WgVRQgGIwoPddcHh63IR27w4Khg6lYNAglOjoM14YGk3J33Mk6QLb1q0JgPbw4XNuK24iCoFWOGKjZmLjbt4cAN3evd4FfCHa7V6TmUn0uHFY5s8n55VX/FW0XJdeet7vs/foQXZGBjEvvkjE7NloT54ka+pU71Q1ISSZFi8mdswYHNdeS9bUqWqHUykY/vkHAHeTJiiF3asrAHfDhsgmE5r8fLQHD+Jp0OCMbaS8POIfeABNTg7uOnXIfu+9MjXIVcxmsj7+GFfjxkS//TaRn32GEhVF3pNPluVHCVvGn37C1aaN/3OusiU1IBKbC2ra1M3w4WC1Fpx1ZkX16qdHQJoouxjOz5yIbcofxk6YzQqdOjn8z9epc3rEpm5dDwMHFpzzuPXrn962Zs3zb9u48eltq1b1bmv65Re0BonWQ5vR5Q4zkZEKUlYWETNmEDltGjkvvYTtrrsAsPbrh61v33J7g3U3aEDe44/jrlu3XI4nCOAtHgCo2mXZU706ckwMmpwcdHv34m7RQrVYzkpRMM+dS/Qrr6DNykKRJDQpKaXahfW++/BUr07ciBGYVq8m8Y47yJg1C7latSAFLZSF+5JL0OTnY1qxAs2JE2LUphzYb76ZU7//jiYrS+1QAkunw92sGYbNm9Fv337WxEaJiiLn5Zcx/PknuS+9hBIZeZYdlZIkkf/447gbNiTqgw/IHzKk7PsMQ8YffiB+yBDc9eqR8e23yJW0LLZIbC6gQwcnd94JJ0/molxgzvhV5i3czHisnW8ne8r5K4JceqmLSy/NKVEMzZq5ee21km3bsKHHt+1l/sc0p1KInPQJli++QFPgTZDMy5b5ExuMRspzNrwSF1dp76YI6nG2bImi0eCpWVO9ICQJV9OmGP/4A/2uXSGV2Gj37yf2mWcw/v474J02l/3GG7guu+wC33kmR9euZCxYQPzAgeh37iSpRw8yvvjC36RUCB3uZs1wXHUVxvXrifjiC/KeflrtkCo+ScJTp06FrORl7d0bxzXX4G7UyPuAx0PEJ594X2edOwNgu+uu09cfAWTv0QP7LbcUm4am3b//rAlWRWNYt474hx5C8nhwtWqFHBurdkiqEYlNABU2OguVO17aI0eInDIFy9y5SA7vyJGraVPyHnkE+623qhydIJSvXO+cUtW5mjXzJjY7d2JTOxgf89y5xD79NJLTiWwykT96NPlDh5ZpfYzr0ktJX7qU+AED0IoGniGt4P77Ma5fj+Wrr8gbNQp/7X5BKCXroEH+f2uPHiX2sccw/vEHnqpVSV21CiU6OrgBFElqLDNnEvPSS+S8+irW/v2De1wV6TdvJv7++5EcDmw33UT2u++ec31TZVB5f/Ig0J48iR0jaXGhcXdAv3MnppUrkRwOnJddRsbnn5P244/Yb79d9YV1mpMnMa5Z411rIAiViLtZM+8UrxBqaOlq3hw8HuzXXkvaqlXkjxgRkEX/ntq1SV+8mIyvvhKjNSHMftNNuKtXR5uRgXnpUrXDqdB0e/YQN3Qols8/VzuU4FEUzPPmkXTDDRj/+APZYiHvySfLd62dr/Kc5HYTO2YM0WPHnm4AWoHo/v2XhAED0BQU4OjYkawpUyp9wRaR2ASQ9vhxfuIG6r86moED1Z3baFi3jriRI3E1bUr6/PmkL16M44YbQmZVfuSUKST064d53jy1QxEqA0UJmfLDtttvJ2XPHrLfe0+1GKSsLEwrVvi/djdvTtrKlWR+8QWe2rUDeiwlNrbYdDbDhg1ETpoUMr8PAdDpsA4cCEDE9OnidxNEhg0bMK9Ygfm779QOJSg0mZnEDxpE3GOPocnPx3n55aT9+CPWfv3K9/rD17sl96mnAIicNo34QYOQcko2rT8caA8eJKFfPzTZ2TjbtiVz+nQx2opIbAJKe/w4G2gPQEKCrGoszquv5uTu3WTOnu1tWhUiCU0hT61aAOgOH1Y5EqEy0O3YQbV69UgKgQZlisWCYrGodHAF88KFJHfuTNzw4eiKlJ12N2sW9PcJKTOT+MGDiX77bWKfeAKczqAeTyg5a//+KEYj+u3b0e7fr3Y4FZahsDFnBepfU0iTlkbS9ddj+vlnAKy9epG+cCEetQoFSRL5jz1G5iefIJvN3mImt92G9uBBdeIJNK0WxWzG1bQpGV98gRIREZj9Op2YFy4kbuhQ8HguvH2IEYlNoDgcaDIy/IlNmzYh8IEdwt2/CxdNao8eVTkSoTLQZmQguVze3gqVlPbQIeL79yfukUfQZmTgrl/fe07KkRIfT+6zz6JotVjmziVh4ECk3NxyjUE4Ozk+nqz33iN1/Xo8lbBEbHnRV+DERk5KwtGhA7JvHY2nVi3Vp70D2Lt3J33RIjzVqqHft4/E226rECM3ntq1SV+4kIyvv/Y2Si4jTUYGkZMnU+XKK4l75BHMK1Zg9CWp4UQkNoFiNHJ8917+iLgOgLZtQyCxCWFuMWIjlCNNYalnFXvYFGWeM4eEXr2wzJgR/IO5XER+8AHJ11+P6ddfUYxGcseMIe3771VpDmi9914yZ85Etlgw/vYbib16ofEVXhHUZe/RQ92qgRWclJvrX1fqattW5WgCQ79li79HGEDO66+TO3q097lt29QK6wzuFi1IW74cZ5s25I8ciRITo3ZIF0XKzcXw22/+r+WqVZGTk8/zHSUT/corVGnXjui33kJ76hSeKlXIHTPmoqpiqk0kNgG0/0QUeQU6TCbZ34hTOLvCefya7Gxxx1YIusIPXk+IJDbaU6cwbtyIYdOm4B5IUUi8806iX38dyW7H0bEjqT//TP6oUaXu8h1IjuuuI2PhQjxVqqD/91+SbrsN3fbtqsUjnEkqOHfvNOHi6P/+G0lRcNeqpWo/rYBwuYh65x0Sb7+dmDFj/OuylKgof9Km/+efkFqvJVepQvrChRQ8+KD/MU1aWtgUFZBsNuIHDSKhf39MS5aUbWeyXOx3o+h03kJTl15K1ocfcuqPP8gfNSpkbgaWhkhsAmjzZm8liksvdYXyLLCQoERG4vE1j9IeOaJyNEJFpwmB5pxFuZo1A7yVC4NKkrD16IHHN80o45tv8NSrF9xjlpCrZUvSly7F1bgx2pQUIspj9Eq4IE1qKvGDBpF8zTXgcFz4G4QSK1xf4wrzaWjafftI7NmTqHffRfJ4vM29i7xWXE2bomi1aDMySt3gN+gMBv9aQikvj4S+fYkfMAApO1vduC7E6SRu6FCMGzeiRETgrl//onYj5ecTMX06yddcg3HNGv/jBYMHk7ZoEenLl2Pr1UvVG19lJRKbADF/+y07PvoLgDZtynfeergqXGejE+tshCDzJzYh0onZ5St9rNu3D+z2wO1YUTAtWYJh/Xr/QwWDB5P666/YevcOvSIiNWqQ/u235D/0EDkTJ6odjgDIcXHeAgKnTmFetkztcCoUTU4OisEQvutrFAXLzJkk3XQThr//Ro6JIeujj8j+6KPi1bjMZn+DzlCajvZf+l270B45gmnNGpJ69EB74IDaIZ2dx0Pcww9jWrUK2WwmY9asUjd31h45QvTLL1Pl8suJefFFdIcOYfnqK//zcpUquNq1C7nPiIshEpsAMaxfz637P2Jgiw107hzAC5UKLH/YMLLefVeVef5C5aL1TUULlREbuXp15NhYJI8nYL2ctEePEj9wIPHDhxP75JNg87X/1GpRQiShOxslJobcF188fWEky5gWLw6pKSyVil5PwYABAGIULcByx47l5L//hmWzSE1GBvEDBhD7/PNoCqe1/vQTtp49z7q9y3fhrQ/hKabOK64gfdEi3NWroztwgKQePYqtXwkJskzMmDGYly9HMRjImj7dm4CUhKJgWL+euAceIPnqq4n89FM0eXm4GjQg+7XXyJ48Oaihq0UkNgGiPXGCnixm8v3r6NRJFA4oCfttt2Hr2xdPjRpqhyJUcK7GjXG0b4/bN0qoOknyj9qUeTqa203E1KkkXXstpl9+QTEYsN55Z9h2no56/XXiR4wg9tFHxVQolVjvvRfFYMCwZQv6zZvVDqdiMRoDV5a3HCkGA7p9+1BMJnLGjydj9mzk6tXPub21b1+yJk3Cdued5Rhl6blbtCB9+XKcbduiyc4moX9/LDNnqh2Wl6IQPW4cEd98g6LRkPXRRzg6dSrVLmKefx7zypVIsoy9SxcyvvyStNWrsQ4cqF7bgSATK0ECROur6nO+/+iCIKgj79ln1Q7hDK5mzTCuX4+uDImNfssWYseM8SdHjquuIuf113GHcbled/36KDodloUL0Z48SeZnnwWklKlQcnJiIrYePbAsWEDEjBlkV5AKXqpSlLCb5iPl53uTMElCiYoi6+OPves7fNPMzsd51VVw1VXlEGXZycnJpM+bR+xTT2FZuJDY559HcjiKFRlQhaIg+aYqZ7/zDvZbbjnv5prUVCxffUXBgw96kxZJIn/4cAx//UXBAw+U6PdWEYTnLb1Qoyj8cySBzbTBlixGH0pKstkwrFnjnXYiCJWMq1kzPFWrXnSnaN327ST26IF+507k2Fiy3n2XjHnzwjqpAbDdfTeZs2YhR0ZiXL+exJ49Rb8rFRQMHgyAeelSNKmpKkcT/qInTiSpa9ew+bwz/P47Sdddh+WLL/yPudq0qbgXxyYT2e+/T+6zz+KuXh3b7berHRFoNOS8/jrpixZhu+uuc26m37aN2FGjqHLFFUS//Tbm+fP9z9n69CHnjTcq7u/tLERiEwBSbi6v2kdzGZv53w/N1A4nbGhSU0ns14+4J56o1I0ThSBTlJBcr2Hr25dTmzZd9GiSu3lzHNddh/WOO7zFAfr2Dbs7wufi6NzZ27G8alX0e/d6E7h//lE7rJCg2769WDdw7fHjGNauDXhVJ1fr1jjbtkVyubB8/XVA910ZGf78E/2OHeXeFLfU7Haix48n4a670B0/TsSsWRfdfV6/bRsR06aVaVS6XEkS+Q8/TNqqVchVq55+uJwrphnWroXC14kk4TzbmhqPB9OKFSTccQdJN9+MZf58JJcL52WX+dtpVFYisQkA7YkTbKA9AG2uCL0LqFDlqV4dRaNBstvFHUEhaDQnTlCtbl2Sr7wytBKcUiYhmuPHiX30UaTMTP/3Z372GdkffBAyRRECyd28OWlLl+Jq2hRtWhoJ/foh5eWpHZYqJJsN85w5JN56K8k33YRx9Wr/c6YVK0js25dqzZuT3L49cQ88QOSkSRh/+AHNiRNles3nPf442a+/TsGwYQH4KSoxp9O/iD6UK6Lpdu4k6dZbifzf/5AUhYL+/UlfvBi02ovaX8TUqcSMHYvpp58CHGlwKZGR/n+bFi+mSocOGH/9tVyObVqyhIS77yZ+6FBwnn29tmSzkXzNNcQPHYpxwwYUnQ5rr16kLVtG+pIlOLp0KZdYQ5VYYxMAp3bmcpyaaHHTqlWI340JJXo9nho10B09iu7oUZxF7pAIQqBoMzKQ3G7vndJQHdE43x1Rj4eI6dOJevNNNFYrisFAzttve58L414DJSFXr076t98S99BDWO+6CyUqSu2QypV23z4ivvgCy7x5aHJyAFD0enT79uG4/nrfRlrctWujO3IE3bFj6I4dw7xypX8faUuW+LuHaw8fRnK5cNerV6KLVcd11wX+h6qE9Lt2IdntyLGxeC6y/0hQeTxEfPIJ0W++ieR04klMJPutt3B07Vqm3bpatoRFi0K65PN5KQoRX3+NJieH+AEDyH35ZQruvz9onyPGX34h7tFHkRQFT3Iy6PX+5zRpachJSd6wfOW0pdxcrAMGUDBwIHK1akGJKRyJxCYA/jB1BqBpYycWSwjdEQ4Dnlq10B09ivbwYShpCUNBKAV/D5sQ7KAc+cEHREyfDo8/DoMGnfG8fts2YsaMweCbhuW8/HIKhg4t7zBVpURFkfnll8UuJjQnTyJXqRK2ld8uRMrJIX7IEIy//+5/zF27NtZ778Xat2+xEbqCwYMpGDwYKScH/Y4d6Ldv9/7ZsQPdgQO4fdX3ACI/+YSImTORzWbczZrhatECV/Pm3r8bNz7/eq8wXPweKvS+xpzO1q1D8hzqdu8m+rXXkDwebF27kvPWWwEZBXa1bAmEdsnn85IkMmbNInbMGCzz53v7v+zeTc6ECcWSjkAw/PEH8UOHIrlc2G67jZzXXvM+/ttvRH72GcbVq0ldtw5PzZoAZL/2GnJsLJjNAY2jIhCJTQBs2eK9a9q6nUhqSstdpw7G338Xi4OFoNH4eth4QjCxAdCmpsLWrcUekwoKiHrrLSKmTUOSZeToaHKffx7rPfdU2Iv58/pPUpPUowfOyy8na/Lkiy6+EGqk/Hz/FBglOhpNVhaKRoP9hhuwDhjgnV5ynt+9EhODs0MHnB06nH7Q4QCj8fTXbjeyyYTGZsOwaROGTZtOf79OR8rWrf4KdNqjR5Gjo1FiYjDPmUPkJ5+Q/e67uC69NJA/dqVg8JXMdoXoNDR3s2bkjRmDJzExoGv1CnvZ6I4cQcrODs/qhkYj2ZMn42rShOiJE4n48kt0+/eT+cknAesPpv/nH+IHDUKy27Fffz1Zb7yBZc4cIqZNQ//vv6dD+e03rP36AYgRmvMQiU0AbN7szdzbthX9a0rLU6sWALrDh1WORKio/CM2IbgOxdXMV2zkPwvjoyZNIvLTTwGw3n47uS+/jJycXN7hhST9tm1o0tO91bpOnSJz2rSQbkB6Xh4Pxl9/JWLWLAwbN3Jq40ZvciNJZL/1FnJyctn6fBVNaoCcN94g59VX0R04UHxkZ/t2b3+VIheeMc88g2n1aty1a4Pbje7ECaImTiT7/fe9o2UhOPIQqgyFIzYhkthoMjKIfvFF8keNwt24MQD5Dz8c8OMoMTG469RBd/gw+u3bcXbsGPBjlAtJomD4cNwNGhD38MMY168nqUcP0r7/vth6nIuh27OH+HvuQZOfj+OKK3A1akSVDh3QZmUBIFssWO++m4L77w/NaYwhSCQ2ZeR2wzbfTa92sbuByl2NorQ8voaJYsRGCBZ/YhOCF7/+xGb3brDb/ReieSNHYvjjD/KeeEKsc/gPR9euZHz5pXfh7MaNJN1+Oxlfful/LwkHmvR0LN98g+XLL9EVee8zrl2L/eabgSDe3ddqcV9yCe5LLsHWq5f3MUVB8l1I+WP0VYLSHTnif8y0bh1VL7sMd/36pBbp0K5JTfXeOKiMo4kX4vHgvPRS8HhCYsTG+NNPxIwejTYtDd2RI6QvXRrUJNXVokX4JzY+jq5dSV+8mPj778d2yy1lTmrAu3ZGcjhwtm5N1pQpJHfpgiY/H3fNmhQMHoz17rtRYmICEH3lIRKbAFgUN4jNaXVoFNsBt0hsSsXZrh1Z77wT9r03hNCl9U1FC8URG7lqVeS4ODRZWcQ99BCZ06d7m+HFxQX9giOcOTt2JH3RIuLvvRfdgQMk9uhB5uefh8SF4/loDx0i6q23MC9f7i/7K8fEYO3TB+uAAeq9D0rSGaNe6cuXI2Vl+dftRH74IdqsLBRJwlOlSrFtE3v2RJOejqtw3U6LFribN8fVqNEZo0aVjlZL9ocfqh0FUkEBDB9O/NSpALgaNSL79deD/h7jatkS8/LlFaZcu7tpU9K++w4lOtr/mGS1opjNpTuXLhemFSswrlnj7T9WuzZKfDy5zz2HnJSEvWtX0IlL9IshzloZ6SQPN2Qv5EZcpNTcqHY4YcdTowa2u+9WOwyhAnPXr4/jyitxh+IwviThatYM47p1mH74AePPP+O44Qb/c8K5uRs3Jn3pUuIHDcKwfTsJvXuT+dVXOK+8Uu3Qiiu66F6nw7x4MZKi4GzThoIBA7Dfdpv3oigEKXFxODt2xNmxI3JSEnGPPoqcnEzWO+/4t5FsNjSnTqGx2zH++SfGP/88/f16Pbbu3cn+6KPTO7Vay/NHqPS0hw4RMX06lgULwDcKlz9kCLnPPFMuC89tPXvivPLK06PTFYASF3f6C4eDhH79cDVu7C0qcIFKlVJWFpGffYblq6/QpqUB3iaahTcWrGcpIiOUjkhsykiTlobkcqFoNN55x4IghJT8Rx4h/5FH1A7jnKz33osxPZ2cgQNxXHut2uGEFblqVTIWLiTuoYfQnjgRUhdP+m3bsMyahVRQQPaUKQB4atYkd/x4nJdfjqtVK5UjLB3brbcSPX482lOnMPzzD3bf1D/FbCZl9250+/efXrezfTv6nTvRZGcXT9qcTqo2bw716xN5yy1Y77wzrKYQXgzNiRPeZo8qTdPT7dlD5LRp3i/q1SPj9ddxlOOUME+tWv61tBWR8fff0W/ahOGvv9AdOHDOogK6vXuxfPop5nnz0DgcAHhiY7EOHixmrASYpCih1LHutLS0NFwh0KFXkiSqVavGyZMnOdup+vjZHFrNGkvXqlso2LRGhQjDn37zZvT//oujfXs8DRoAFz7vQuCJc64Ocd4DwO1Gk519erqhonj/nOdiMhjnXbLZMC1Z4i0G8Pff3lAkiVMbNiCXpQhAiIh66y2iJk/GccUVZHz77fk3VhS0x4+DLPs7oet27SK5cETSx9G+PbbevbHdemux6T0VgqJQpWVLJI+HtKVL8QT5Ala3fTsRX32Fp2ZN8keO9D7odhPz9NM4evQgvm9fTqamiveZADP+/DNxI0Z418bUqUPmzJm4GzUCfO8zhw5B0WqFgBwRQfrChbh9leOE89Pr9ST5+vhciFjpVwY5ORITZjXlLuaRX6We2uGEraj33iP2qacwrlundihCRSQ+xCs+na7YGqqITz8l7sEHwWYrl8NrDxwg+qWXqHLZZcQ98QSGv/9G0eux9uxJxvz5yNWrl0scwVYwYAD2G28kf9SoC28sSXhq1vQnNeBdn3Bq2zb44gscnTqhSBLGDRuIfeopqrZpg/lCyVKY0R4+jDYrC8luD9qohZSfj+XLL0ns1o3km24iYtYsIqZN81Y2AtDpyHnnHe9ocAmasgaDYe1aol98EdOyZaocP9gc119P+pIl3ka5hw+T2KMHxp9/Pr1B+/a469fH47swl6OiyJg/XyQ1QSKmopXB1q3euZT12U9c3Qiy1Q0nbLlFZTQhSCSrlapNmyLHx5P6++8hu5ZBCBxNSgrRb7yBZLejPXWKzBkzgt6c1bhuHZGffQaAu1YtbyPNu+8OyYIVZSFXrUrmzJll20dCAtx7L5nXX490/DiWRYswz5uHfs+eYlMJdbt3g9uNu3nzMkatnsIyz67mzQNeREG/dSuWL77AvHgxGt+6JUWvx96tGwUh1u/KsHEjkdOnY83NxX7rrWqHExTuxo1JX76cuKFDMf7xB/H33Uf2O+9g79sXFAVXs2aYly1DMZm8hU7CbCpqOAmdV34YKuxf054NFeaOnBpELxshWDQZGUhuN5qcHJQK0shROD+5alUyvvoKOSYGw6ZNJN52G9qDBwO2f83x40S9+Wax0QXbHXdgu/VWMr74gtTffyf/4YcrXFITDHL16uSPGEHaL7+Q+vPP/p4qAJHvvUdy164k3XgjEf/7H5rUVBUjvTh6X2NOZ9u2Ad+3ZfZsImbPRmO14mrQgJwXX+TUpk1kffwxzmuuCanEprBRp377dpUjCS45Pp6M2bMp6NcPxWLB+NNPaE6dguHDvUmNXk/mp5/ibN9e7VArNDFiUwabN3tHbJq80JW8ey9TOZrwJUZshGAp7GHjSUgQVcYqEeeVV3r7TQwYgO7QIW856JkzcV1++cXtUJYxrl5NxKxZGH/+GUmWcTVtiq1nT2+p5IgIsv73v4D+DKFMc/w4EZ9/jqd6daz33Vf2HUoS7iZNTn+tKKDVohgM6HfuJGb8eKInTsTRuTPW3r29pXDDYPTVP2JTlsRGUTBs3Ijlq68ouO8+/74K7r0XyWrF2r8/ziuuCOn3N1fLloC3kIFks1XskXODgZw330S3cyeW5cu9I3WnTqFoNGR98IHoS1YORGJzkRQFtmzxjti0ba+gREWpHFH48o/YFGkEJwiBoCnsYRPkqUhC6HFfcsnpctBbt5LYty9Z77+PvXv3Eu9Dk56OZc4cbyPNIu9PjquvpmDAgOKlnCsR47p1RH30Ee7q1bHee2/g+21IEtkffEDO+PGYly7FMm8ehs2bMf3yC6ZffsF52WWkL1kS2GMGmsOBfscOAJwX0V9Jk5mJed48LF9/jX7fPu+DOh3ZvsTG3aIF2e+/H7Bwg0muWhVPYiLa9HR0u3aVLdELA6alSzFu3YpsMpH37LNYmjYl69tvsYukplyEzlhlmDl8WEtmphaDQaF5c/Wrt4WzwsWlmuxspJwclaMRKpLCERsxLahykpOSyJg/H/uNN3rX3KSklOr7Y55+muhXX0V35AhyTAz5Q4Zw6tdfyZg7F3uPHiE13ac82W67DU98PLoTJzD98EPQjqPExWEdOJD0pUs5tWYNeaNG4a5ZE1u3bv5tJKuVyEmT0IbYVGb9jh1ITiee+PhiBRTOS1EwrF1L3PDhVLnsMmLGj0e/bx+yxUJBv34UDBwY3KCDRZL8ozb6bdtUDia4JKuVmFdeAfBOSa1RAyIicFx/vcqRVR5ixOYi/fOPd7SmtXEnVZ59hezXXhMdli+SEhGBJyEBbUYG2qNHccfEqB2SUEFoCxObs/QVECoHxWIhc9o0TN9/j/2WW865nZSbi3nBAhw33oinZk0ArP37oz11KuQbaZY7kwlr//5EffABEdOnn/e8BoqnQQPyxowh78knoUgrCNOKFUS//TbRb7+N44orTpeOVvlzRE5IIG/UKO+IXklH9RSF2NGj0R07BoCzVSus99yDrWfPsJ8V4mrRAtOqVRV+nU3kRx+hPXkSd61a5D/0EJVvPFd9IrG5SD162Lks8S90fYZiWvwvFOnELJRe9ttvexOceqJsthA4/qloYsSmctNqi118Szk5RE2aBJMno/vnHyyzZmH+9ls0Nht5KSnkPfssAI5rrxVz4s+hYOBAIqdMwbh+PbqdO3GXV3NUjabYTURP1arYO3fG+NtvGDduxLhxIzEvvoj9ppuw9u6No3PnwE+VKwFPnTrkjRlzng08GNeswbx4MdlvvuntWK/RUPDAA+gOHMDav79/lKMiKPxZtMePqxxJ8GiPHiVy6lQAcl98MSzWgVVEIrG5SJIE9ZSDJPI3rhoNKuU860BydO2qdghCBeSuVQvHVVfhvuQStUMRQkjcww9j+uUXmD+fpKws/+OuRo2KdwEX7+vnJFevjv3mmzEvX07EzJnkvPmmKnE4O3Yks2NHNCdPYl60CMu8eeh378a8ZAnmJUs49ccfQeshczE0J054123Nno3Od5Fvv+EGfxnkgmHD1AwvaBzXXkvKli3IyclqhxI0UZMmIdntODp0KJdRTOHsRGJTBoV3HkSpZ0EITdb778d6//1qhyGEmPxHH8WwZQuarCwUvR5b9+5YBw4M+epSoaZg8GDMy5djXrCA3GefRYmLUy0WuVo1CoYPp+Chh9Bv34553jy0KSnFkprol1/GU7Uqtl69kKtUCVosUm4uhg0bcLVt6y1c4nZj+vlnLF99hXHVKiRZ9sYcG4v1zjuL9e+pqBSLBcViUTuMoMp56SXkqCisd98t3kdUJBKbi7B9u453343iRk8dRgPuGjXUDinsaVJSMK5eDRoNtrvuUjscQRAqMGe7dqR//z3J27aR2q6dtxy4UGrO9u1xtG+Pq1kzJLcbRe2AwL9Q/b/TuDTp6URMn47k8fhLR9t698Z2000BnzJk2LiRhPvuw9WgAWlr1qDbt4/4wYP9zzuuvNK7duaWW8R0pQpEiYkhd9w4tcOo9ERicxH++MPI99+b0dTwJjZixKbsdHv3Ejd6NK4GDURiIwROJS3HK1yYp2ZNaNcO+eRJ7+tEKD1JImPBgrD4P6aYzeRMnIhl/nwMf/2FadUqTKtWERMVhe3WW7EOGhSYNS1OJ5a5c4HT/WvcTZpg69oVT/36FPTrh6fodMdKxLh6NRHTpuFq0YK8p59WO5yA0R454h0ZDIP/B5WBSGwuQmH/misMfwNixCYQPL4mnbpjx0CWQatVOSIh7CkKVRs3RrFYSPvuO+Rq1dSOSBAqnjC5mFMiIrAOGIB1wAC0Bw5gWbAA8/z56I4dI2L2bFwtWpxObC7ihoj2wAEss2djmTsXra9oiatxY//zWTNmBOxnCVdSTg6mX35Bk5VVYRIbKTOTpG7dcDVtStbUqaJQTQionEX4y2jzZgMAVxg2A2LEJhA81aujaLVIDgeaU6fUDkeoACSrFU1BAdq0NNVLvwpChaYoGP78k8jJk9WOpEQ89euT99RTpK5fT/qCBRT064ftttv8z1u+/JLE22/H8sUXSNnZ596R3Y550SISevemyjXXEDVlCtr0dBRfUuRq1SrIP0l4cbVoAYB+1y5wu1WOJjCi334bTXY2muxs5NhYtcMREIlNqWVkaDhyRIckKdRf9Dwn9u3DceWVaocV/nQ6PL6RL93RoyoHI1QE/lLPZnOFX7QqCGrSpKSQcMcdRL/1Frrdu9UOp+Q0GpxXXknO22+jFOl1ZV6wAMNffxH7zDNUbduWuAcfxPjjj8X65wBEzJxJ3MiRGNevR9FosF93HdkTJyIpCorJ5C1GIfh56tVDjohAstvR7dundjhlptu5E8sXXwCQM368KmXFhTOJxKaUNm/2TkNr2NBNdLTiXfhnMKgcVcVQWL0m1DpIC+FJU9icUywMF4SgkqtVw37TTQBEVIApV1lTp5Lz4ou4mjRBcjgwL1tGwn33UeWyyzAtXerfznbnnbjr1CF39GhO/fEHmV98gRIRAYCzZUvQ69X6EUKTRnN61GbbNpWDKSNFIWbsWCRZxta9O84OHdSOSPARiU0pFU5Da9vWdYEthdJy+9bZaMWIjRAAojmnIJSfAl9ZdfP8+Ug5OSpHUzZy1aoUPPQQaT/9ROr335M/ZAiexES0GRlEzJp1erukJFLXrSP/iSeQfTMODFu2AOBq00aV2ENdRUlsTMuXe0fqTCZyx45VOxyhCDFuVkoFBRJGo0K72N0k9H0Ux5VXkv/442qHVSEUjtjoxIiNEACazEwA5CJTTARBCA5nhw64mjRB/++/WL75hoIHH1Q7pLKTJNwtWpDbogW5L7yA8ddf0Z46Vby4wH+KDOQPG4bz0ktxN2miQsChr7BAg377dpUjKQObjehXXgEgf/hwb4VFIWSIxKaUxo/P5YUXcjF+8TPG/61FFnP3A8Z2220427bF3aCB2qEIFYBWjNgIQvmRJAruv5/Yp58m4vPPKRgypGJVt9TrcdxwwwU389Sti61u3eDHE6ZcLVsiR0b6p+yFI21KCkpEBO7q1ckfOVLtcIT/EInNRTAYIDLtCIB/wbtQdp66dfH4PhDCo4CoEMo8VarguOoqXOLOqSCUC9sddxD96qvoDh/G+MsvOG68Ue2QhBDjbtyYlF27QBO+KyE89eqR9sMPaA8fRhENVkOOSGxKoejos/b4cUCUehaEUGXr0wdbnz5qhyEIlYZisWDt1w/TihVIrsq3DtX4yy/oDhzA0aUL7krahPOCJClseh+dl06HR8wuCUnhmzKr4LnnYrjhhiSWLTOhPXkSEM05A828cCFRb7yBxnd+BUEQhPCRN3o0qWvXYr/lFrVDKXeWuXOJeeklTN99p3Yo4SHMetkYNm4k8sMPweFQOxThPERiUwp//mlg1y49Go0YsQmWyI8+Iur998OrF4IQmhRF7QgEodJRLJaKtbamFPS+imhOURHtvAxr15LcsSMJ/furHUrJeTzEPP880a+9RtSkSWpHI5yHSGxKqKBAYvdu78y9NpfaT4/YiMQmoERlNCFQkq+8kiqtW4skWRDU4HBgXrAAKTdX7UjKhSYtDd2xYyiShOvSS9UOJ6TJsbHoDh70lnwOkxtQlq+/Rr9zJ3JMDAXDhqkdjnAeIrEpoX/+0SPLEtWqeahuzkSOiUHRapGrVFE7tArFXbs2ANojR1SORAhrioI2NRVtWhpKZKTa0QhCpZPQvz9xjz6KZe5ctUMpF4WjNe5GjVCiolSOJrS5GzVC0evR5OSERd86KTubqDfeALxTLUULgdAmEpsS2rTJ20G4TRsnSnw8p7Zu5eTevaAT9RcCyVOY2ITBm50QuqS8PCSnEwCP+BAShHJn69EDgIgZM0CWVY4m+AybNwNiGlqJGAz+apXh0Kgz6t130WZl4WrUiIKBA9UOR7gAkdiU0JYtBgAuu8x5+kGjUaVoKq7CERsxFU0oC01GBgByRASIcpyCUO5svXsjR0ejO3QI4+rVaocTdAbfiI1LJDYl4m/UGeKJjW73biJmzgQgZ9w40OvVDUi4IJHYlICiwObNhSM2la+EZXkSIzZCIGhEc05BUJUSEYG1b1/AN2pTkSkK+u3bATFiU1KuFi2A0E9soidMQPJ4sN18M85OndQORygBkdiUgMMBHTs6aNjQRatWLiI//JCEvn0xLVmidmgVTmFio8nOhuxsVWMRwpc2MxNAzIUWBBUV3HcfiiRh+uUXtPv3qx1O8EgSp/78k/QFC3A3bqx2NGHB1aoVQMgXEMh5+WVsN91E7tixaocilJBIbErAZIIPPsjh11/TMJsV9Fu3Yly7Fq3vrrAQOIrFQvq8eaSuXw/R0WqHI4QpMWIjCOrz1K2L47rrAIj4/HOVowkuxWLBeeWVYt1tCbmaNMHZsiX2G28M6b4wngYNyJo+HU+dOmqHIpSQ+B94EbQnTgDgEc05g8LZoQOSJIFG5N3CxZHj43F06OCf7iAIgjoKBg/G9PPP3t5vilIxus4LZWc2k75ypdpRnJOUmYkiRvzDkkhsSuDgQe96scLr7MLmnG6R2ARXWpraEQhhyt6tG/Zu3dQOQxAqPUenTqSuWoW7USO1Qwma2EcfRY6JIf+hh5DFdUHY05w8SXKXLthuu42c8eNFAZowI26JX4DLBc2bQ5MmVTh+XAMOB1rfBbcsmnMGTcQnn0CjRui3blU7FEEQBOFiaTQVOqmRrFbM335L5PTpYpbBxXA6Q65vXfSrr6LJz0e/Z493LYIQVsT/wgv4918dNhtotVCtmoz25EkAZJMJOS5O5egqKLcb04oVkJ1N/N13h3zVFCEEhfBiVEGorDRpaWgPHFA7jIDS//MPkizjqVoVuVo1tcMJK7rt26nWuDGJvXqpHYqf/s8/sSxciCJJ5Lzyipg6GYZEYnMBmzd7+9e0bu1Cozm9vkauXl284INFpyPzyy+hQwc0OTkk3H03Ol8pTUEoicRu3ahy6aUYNm5UOxRBEADzggVUueIKol9+We1QAkrv61/jbNtW5UjCj6duXXC50KakoAmFqeeyTIyv+pn17rv9lduE8CISmwvYssXbv6ZtW29jTqmgAE9iIu6aNdUMq8JTIiPhu+9wXnYZmuxsEvv2Rbdjh9phCWFCm5qKNj0dRcyNFoSQ4GzdGsnpxPjzz1CBSj8bNm8GRGJzMZTISNz16wOh0c/GMmcOhn/+QY6KIu+ZZ9QOR7hIIrG5gE2bvCM2bdt6G3M6bryRU1u3ekcUhOCKjibzq69wtmmDJjubhL590e3apXZUQqhTFDQZGQB4EhJUDkYQBPCWzbVfey2SosBHH6kdTsAUJjYu0ZjzorhatgTUT2yk3FyiXn8dgLzHHxetAsKYSGzOIztbYv9+b+G4Nm1cxZ/UalWIqPJRoqPJ+OornJdeijYrC+PatWqHJIQ4KScHye0GQBaJjSCEjIL77/f+Y/p0tEePqhtMAGhOnkSbkoKi1YppSxfJn9ioPN1ct3s3ktuNq0GD069TISyJcs/n8fff3tGaBg0gIUEW65FVosTEkPH115i+/x5b375qhyOEOH9zzqgoMBpVjkYQhEKOa6/FXb8+ugMHSOrQAXv37uRMmBC2NyC0J0/iqVYNOS4OxWJRO5ywFCojNq527Ti1di3alBQwGFSNRSgbMWJzHrVru3niiTyGDTv9WPygQd4pUbt3qxdYJaTExhZLaqT8fLQHD6oYkRCqtJmZgBitEYSQo9GQ9dlncMMNSB4Pho0bvTcgwpSrbVtO/fUX6d9+q3YoYauwibLu6FGkrCxVY1Hi4nA3bapqDELZiRGb86hf38OTT+ZTrVoUvirPGDZsQJOXJ6aiqUjKyyPh3nvRHjlC+rx5eBo2VDskIYT4R2xEYiMIIcfdpAn8+CNpP/2E5sSJ03fHPR4S+vfH3rUr1r59USIi1A20FJTISLVDCFtKTAwFAwfiqV5dlTL9ht9+Q5OX523oLCrdVghixKYUpNxcb1ID3v+EgioklwupoABtaiqJd92FtgJV2BHKTo6MxHH11Thbt1Y7FEEQzsHdvDmOG27wf236/nuMv/1GzIsvUuXyy4maONGb+IQqRRH9sgIk57XXyH/kEZT4+PI9sMNB7DPPED90KBZREKrCEIlNKfh72MTGivm0KpLj48mYMwdXkyZoT53yJjdiWprg4+zUiYy5c8kdP17tUARBKCFHly5kv/oq7nr10OTmEjVlClWuuorYhx9G/88/aod3Bt3OnVRp1YrYkSPVDkW4SJHTpqE7dAhPcjK2EGoSKpSNSGxKQXv8OCBGa0KBnJDgTW4aNUKbkkJinz5oDx1SOyxBEAThIigWC9ZBg0hds4aMGTNwXHUVktuN5dtvSerWDd3OnWqHWIxhyxa0mZloQ6GxZLhTFLSHD3t7HJUTzalTRE6eDEDus8+K6YQViEhsSsGf2NSooXIkAoCcmEjG3Lm4LrkE7cmTJPTpg/bwYbXDEtQmpocIQvjSaHB07UrG/PmkrVyJ9Y47cLRvj7tZM/8mhg0bkKxWFYME/ZYtgGjMGQiazEyqdOhA/KBBSPn55XLM6NdeQ1NQgLNNG2y9e5fLMYXyIRKbUiiciiYSm9AhJyV5k5uGDZEcDiSbTe2QBJUl9OtHlZYtMf7wg9qhCIJQBq6WLcn+4AMy5s3zPyZlZxPfvz9V2rUj6vXX0aSkqBKbQSQ2ASMnJOCpVg1JUdDv2BH04+k3b8bie03ljB8PGnEpXJGI32ZpaLV4EhNFYhNi5ORkMubOJWP+fG/FHaFS06SleUs+m0xqhyIIQiAUqUKqO3IEuUoVNNnZRH3wAVWuvJLYUaPQlWODRykvD92ePQC42rQpt+NWZE5fg9Og97NRFGLGjgXA2qcPLpGYVjgisSmFvKee4tTWreQPH652KMJ/yFWq4G7UyP+14c8//VMHhcqlsNyzR5R7FoQKx9WqFalr1pD52Wc4rrgCyeXCMn8+yTfdRMJdd/kTjmDSb92KpCi4a9ZETkoK+vEqg3Jr1ClJ5D35JM7Wrcl99tngHktQhUhsLoaodR7SDBs3Et+vHwl9+oR2uVAh8GQZjWjQKQgVm1aLvVs3Mr79lrRly7DefjuKVothwwbkclgEXjgNTYzWBE5ho059OYy8Obp0IX3ZMuQqVYJ+LKH8icRGqHDcNWogJyejO3yYxD590BR2VxUqPE12NpIsA96y4IIgVGyuNm3InjKF1PXryZ48GblI1dLYRx4h6q230KSmBvSYnmrVcFx1FY6rrgrofiuzwhEb3Z49wVsra7ef/re4QV1hicSmhDSpqSR37Ej8PfeIqkshTq5Rg4x583DXro3u0CFvcqPSAlOhfGkyMgBvryl/R3NBECo8T40axXqR6PbuxbJwIVGTJ1OlfXtin3gC3a5dATmWrXdvMubPxzpoUED2J3ink3uSkpBkOWC/p6K0Bw5QpV07IqZOBd/NL6FiEolNCWmPH0d38CD6PXtEph8GPIXJTc2a6A4eJOGuu9CcOqV2WEKQFa6vEaM1glC5uevVI/OTT3BedhmS04llzhySb7iB+Hvuwbh6tbhBGWokidxnnyVz6lTc9eoFfPcx48ahzczEuHatuIar4ERiU0KiOWf48dSs6U1uatRAv3+/N7nx3dEXKibFaMRx9dWiBKsgVHY6Hfbu3UlfsoS0xYux3XorikaD6ddfSejfH9OSJRe1W016OlJOToCDFQBsffti79EDJS4uoPs1rlqF6aefUHQ6cl9+WSQ2FZxIbEpI9LAJT57atcmYNw9PtWq4L7kEOSpK7ZCEIHK1bUvG3Llkv/ee2qEIghAiXJdfTtb//kfqunXkDxmCu25d7Dfd5H9ev3Wrf7T3QiI/+ohqzZoR9fbbwQpXCCSnk+iXXgKgYPBg3A0bqhyQEGwisSkhjRixCVueOnVIW7yYrI8/FusuBEEQKilP7drkjhtH6po1p/tcyTJxDz9MlSuuIOappy5YLlrvq4jmrl072OFWPrKMcc0aIj/6CJzOgOwyYsYM9Pv340lIIO/xxwOyTyG0icSmhMSITXiTa9QAvd73hUzkhx/6ywILFYiYNy8IwoUUafipSUtDjo5GcjiI+Pprkq+9lvh778WwZs2Z7ycuFwZfnxXR2DEIJIm44cOJfvVV9Lt3l3l3mrQ0oiZNAiDvmWdQoqPLvE8h9InEpoTEGpuKI+rNN4l+7TUS+vZFEslNhRI3fDhVWrbEPH++2qEIghAG5CpVSF+2jPRFi7B164YiSZhWrSKxXz+SbrwRw2+/+bfV//svkt2OHBODu359FaOuoCQpoI06DevXI9lsOFu2xNq3b5n3J4QHkdiUkBwfjycxUYzYVAC23r3xJCWh37mTxLvvRsrKUjskIUA06eloMzNRCkfnBEEQLkSScLZrR9Znn5G6di35gwcjWyzod+0qNrqj37wZAGfr1qARl0/B4AxgYmO/7TbSfvqJ7LffLvZ7FCo28T+zhLK+/JJTW7f67yYI4cvdsKG3oEBiIvodO0jo1w8pO1vtsIQA8Jd7TkhQORJBEMKRp25dcl95hVN//kn2W2/hLNKEM/a55wBvU1AhOFwtWgCBSWwA3Jdcgtu3T6FyEImNUCm5L7mEjLlz8SQkYNi2jYR77hElPCsAf4NOkdgIglAGSmws1nvu8ZcGlvLzUXx3/R1Fkh0hsPxT0XbtArf7ovZhWLMG3Y4dgQxLCCMisREqLXfjxt7kJj4ew9atJAwYIDoShzOPB41vWqGcmKhyMIIgVCRKRAQZ8+aR+dlnODt2VDucCstTty5yZCSS3Y5u375Sf79UUEDc44+TdPPNGFetCkKEQqgTiU1JfPMNSR07Ej1hgtqRCAHmbtKEjDlz8CQnkz90qJg3HcY0WVlIioIiScgBbvAmCEIlJ0k427fH3q2b2pFUbBpNmaajRX7wAdqUFDy1aomRtUpKp3YAYWH/fnQHDojywBWUu1kzUtetQ7FY1A5FKAP/+prYWNCJtzZBEIRwlPvcc2Aw4GrcuFTfpz18mMhPPvHuY+zY072KhEpF3J4uiSNHAFHquSIrmtRojh8n9pFHkPLzVYxIKDWNBkfHjjjbt1c7EkEQBOEiuS67zLvWppQNtaNfeQXJ4cBxzTXYb7opSNEJoU7c1iyJo0cB0ZyzUlAU4ocMwfDPP2iPHyfziy9QIiLUjkooAXejRmTMmaN2GIIgCEI5M/z2G+bvvkPRaskZN85f9EGofMSITUmIEZvKQ5LIee015OhojBs2ED9oEJLVqnZUgiAIglBpmOfMIeapp9D6rr/Oy+0m5qWXACgYNAh3KaewCRWLSGxKQozYVCqu1q3J+Ppr5KgojOvXe5Mbm03tsIQLURS1IxAEQRACIOKrr4j4+msMvqaoF2K9917c9eqRN3p0kCMTQp1IbC5Ays2F3FxAjNhUJq42bcj46ivkyEiMv/9O/H33gUhuQlrM889TpUULIqZPVzsUQRAEoQz8/WxKUhlNp6Ng8GBSf/0VJTY2uIEJIU8kNhcg5eXB5ZfjbtBAVM2qZFyXXUbGl18iR0RgXLuWmHHj1A5JOA9NWhrarCwUUbJbEAQhrDlLmtgU7T3na6AqVG7iCuAC5Bo14M8/SfvtN7VDEVTgateOzC+/xNmmDXlPPKF2OMJ5aDIyAJDj41WORBAEQSgLfy+b7dvPOc1Yt2MHyZ07Y/zhh/IMTQhxIrERhAtwXnEF6UuXIicnn35QrOcIOf4+NomJKkciCIIglIW7USMUgwFNTg5a3zrnYhSFmLFj0R04gGXhwvIPUAhZIrERhJIoUjrSPHcu8fffDw6HigEJ/6UtHLFJSFA5EkEQBKFMDAZcTZoAZ5+OZlq6FOMffyCbTOS++GJ5RyeEMJHYXEDMU09Bo0aYvv1W7VCEEKDJyCDmhRcw/fgj8cOGieQmVLhcaLKzATFiIwiCUBEUFhDQHT5c7HHJZiP6lVcAyB85UlSsFYoRic0FaA8cgL171Q5DCBFyQgKZ06ahmEyYfvqJuIceAqdT7bAqPU1WFgCKJCGLqjiCIAhhL2/0aE7u3En+iBHFHo+cMgXdiRO4a9SgYPhwlaITQpVIbC5Ae/w4IEo9C6c5r7mGzBkzUIxGzD/8QNyIEeByqR1W5eZy4bjmGpxXXikq4wiCIFQAcpUqKDExxR7THjtG5JQpAOS++CKK2axGaEIIE4nN+cgy2pMnAdGcUyjO0akTmdOne5Ob774TyY3K5Bo1yPjmGzLmz1c7FEEQBCFIzIsXI9ntOK66Cvutt6odjhCCRGJzHpq0NCSXCzQa5KpV1Q5HCDGOLl2809IMBswrVmBevFjtkARBEAShwoj45BMSevfGuHo14F1TkzFrFjkTJhQr6iMIhXRqBxDKtCdOeP9RvTrodKLEr3AGx7XXkvnZZxg2bsR2551qh1N5KYr4kBMEQahg9Lt2YVy/HudVV+Ho0gUAx/XXqxuUENJEYnMehetrqFVL3UCEkOa4/vpib7SajAx0u3efda2HYrH4K70A6LduRbLbz7pfxWjE1br16W23bUOyWs++rU6H67LL/F/rduxAk59/9m01Glzt2p3edtcuNLm53sQgIQF9RkaxJN7Zvv3pbffs8S/UPxtnu3ag8Q4E6/bt8zfNPOu2bduCXg94i3Ro09LOvW3r1mA0erc9dAjtqVPFnrfMmYPp++/JHzKE/McfP+d+BEEQhPDhatkS5s4l4pNPKBg0SFS9FC5IJDbnoRgMOC+9FEOrVmqHIoQLu53YUaMwrVp11qddTZuS9tNP/q/jHn4Y3YEDZ93WXbcuqevW+b+OHT0a/Y4dZ93Wk5zMqS1b/F/HPP88xj//POu2clQUKf/+6/86+pVXMP36q//roh8bilbLySNH/F9HvfEG5pUrz7pfgBMHDvgTkMj33jtv47STO3ag+CqYRU6dSsRXX51z25Q//0T2FfCImDGDyM8+O+e2giAIQsVQeCNQk59P8jXXkD5/Pu7mzVWOSghlQUtsVq5cydKlS8nOzqZOnToMHjyYhg0bButwQeHo2hXnTTdRrVo18BUREITz0W/fjiY9HXf9+md93lOzZrGv3bVrn3Nf/y1Y4a5ZE8lmO/u2/2lK6ale/ZwxyBERxbetVs2/rU6nw+12+59T/jPqJFepcs79AsWmg8lJSeffVqMp+ba6029VckLCWbeVY2Kw9+hx7n0IgiAIYcXVrJn/34pej7txYxWjEcKBpCiBXzjy+++/8+GHHzJ06FAuueQSli9fzh9//MHkyZOJ+U/pvnNJS0vDFQJVpiRJolq1apw8eZIgnCrhHMR5L3/inKtDnHd1iPOuDnHe1RHO5z3xttswbNpExuzZODp1UjucUgnn8x5K9Ho9SUlJJdo2KFXRli1bxvXXX8+1115LzZo1GTp0KAaDgVXnmJ4jCIIgCIIgCP+VOWMGqatWhV1SI6gj4FPR3G43Bw4coGfPnv7HNBoNLVu2ZM+ePWds73K5io3MSJKE2ddwSQqBKkeFMYRCLJWJOO/lT5xzdYjzrg5x3tUhzrs6wvm8K4mJeBITCb/Iw/u8h6uAJza5ubnIskysb1FwodjYWE4Ulk8u4ttvv2V+kaZ69erV44033ijxkFN5qSr62KhCnPfyJ865OsR5V4c47+oQ510d4ryrQ5z38qN6VbRevXpxa5HusYVZbVpaWrFFzGqRJImqVauSkpIi5keWI3Hey5845+oQ510d4ryrQ5x3dYjzrg5x3gNDp9OVeMAj4IlNdHQ0Go2G7OzsYo9nZ2efMYoD3gVBel8vi/8KpReBoighFU9lIc57+RPnXB3ivKtDnHd1iPOuDnHe1SHOe/kJePEAnU5H/fr12b59u/8xWZbZvn07jRo1CvThBEEQBEEQBEEQgjMV7dZbb+Wjjz6ifv36NGzYkBUrVuBwOOjSpUswDicIgiAIgiAIQiUXlMSmQ4cO5ObmMnfuXLKzs6lbty7PPffcWaeiCYIgCIIgCIIglFXQigfcfPPN3HzzzcHavSAIgiAIgiAIgl9QGnQKgiAIgiAIgiCUJ5HYCIIgCIIgCIIQ9kRiIwiCIAiCIAhC2BOJjSAIgiAIgiAIYU8kNoIgCIIgCIIghD2R2AiCIAiCIAiCEPZEYiMIgiAIgiAIQtgTiY0gCIIgCIIgCGFPJDaCIAiCIAiCIIQ9kdgIgiAIgiAIghD2RGIjCIIgCIIgCELYE4mNIAiCIAiCIAhhTyQ2giAIgiAIgiCEPZHYCIIgCIIgCIIQ9kRiIwiCIAiCIAhC2BOJjSAIgiAIgiAIYU8kNoIgCIIgCIIghD2d2gGci04XWqGFWjyVhTjv5U+cc3WI864Ocd7VIc67OsR5V4c472VTmvMnKYqiBDEWQRAEQRAEQRCEoBNT0S7AZrPx9NNPY7PZ1A6lUhHnvfyJc64Ocd7VIc67OsR5V4c47+oQ5738icTmAhRF4eDBg4iBrfIlznv5E+dcHeK8q0Ocd3WI864Ocd7VIc57+ROJjSAIgiAIgiAIYU8kNoIgCIIgCIIghD2R2FyAXq+nd+/e6PV6tUOpVMR5L3/inKtDnHd1iPOuDnHe1SHOuzrEeS9/oiqaIAiCIAiCIAhhT4zYCIIgCIIgCIIQ9kRiIwiCIAiCIAhC2BOJjSAIgiAIgiAIYU8kNoIgCIIgCIIghD2d2gGEspUrV7J06VKys7OpU6cOgwcPpmHDhmqHVWF9++23bNy4kePHj2MwGGjUqBH33nsv1atXVzu0SmXRokV8/fXX3HLLLdx3331qh1OhZWZm8uWXX/L333/jcDioWrUqI0aMoEGDBmqHVmHJsszcuXP57bffyM7OJj4+ns6dO3PnnXciSZLa4VUYO3fuZMmSJRw8eJCsrCyefPJJrrjiCv/ziqIwd+5cfv75ZwoKCmjSpAlDhgyhWrVqKkYd/s533t1uN9988w1btmwhNTUVi8VCy5Ytueeee4iPj1c58vB2odd7UZ988gk//fQTgwYNonv37uUcacUnRmzO4ffff2fWrFn07t2bN954gzp16jBx4kRycnLUDq3C2rlzJzfddBMTJ07khRdewOPxMGHCBOx2u9qhVRr79u3jxx9/pE6dOmqHUuHl5+fz4osvotPpeO6555g0aRIDBw4kIiJC7dAqtEWLFvHjjz/ywAMPMGnSJPr378+SJUv47rvv1A6tQnE4HNStW5cHHnjgrM8vXryY7777jqFDh/Lqq69iNBqZOHEiTqeznCOtWM533p1OJwcPHuTOO+/kjTfeYPTo0Zw4cYI333xThUgrlgu93gtt3LiRvXv3EhcXV06RVT5ixOYcli1bxvXXX8+1114LwNChQ9m8eTOrVq2iZ8+e6gZXQT3//PPFvh45ciRDhgzhwIEDNGvWTKWoKg+73c4HH3zAgw8+yMKFC9UOp8JbvHgxCQkJjBgxwv9YcnKyihFVDnv27OHyyy+nbdu2gPecr127ln379qkcWcXSpk0b2rRpc9bnFEVhxYoV3HHHHbRr1w6Ahx9+mKFDh/Lnn39y9dVXl2eoFcr5zrvFYuHFF18s9tjgwYN57rnnSE9PJzExsTxCrJDOd94LZWZmMn36dJ5//nlef/31coqs8hEjNmfhdrs5cOAALVu29D+m0Who2bIle/bsUTGyysVqtQIQGRmpciSVw2effUabNm1o1aqV2qFUCn/99Rf169fn3XffZciQIYwZM4affvpJ7bAqvEaNGrF9+3ZOnDgBwKFDh9i9e/cFL0qEwElNTSU7O7vYe43FYqFhw4biM7acWa1WJEnCYrGoHUqFJssyH3zwAbfddhu1atVSO5wKTYzYnEVubi6yLBMbG1vs8djYWP+HoRBcsiwzc+ZMGjduTO3atdUOp8Jbt24dBw8e5LXXXlM7lEojNTWVH3/8ke7du9OrVy/279/PjBkz0Ol0dOnSRe3wKqyePXtis9l4/PHH0Wg0yLLM3XffzTXXXKN2aJVGdnY2ADExMcUej4mJ8T8nBJ/T6eSrr77i6quvFolNkC1evBitVku3bt3UDqXCE4mNEJKmTZvG0aNHGT9+vNqhVHjp6enMnDmTF154AYPBoHY4lYYsyzRo0IB77rkHgHr16nHkyBF+/PFHkdgE0fr161m7di2PPvootWrV4tChQ8ycOZO4uDhx3oVKw+12M2nSJACGDBmicjQV24EDB1ixYgVvvPGGKFBSDkRicxbR0dFoNJoz7hxlZ2efMYojBN60adPYvHkz48aNIyEhQe1wKrwDBw6Qk5PD008/7X9MlmV27drFypUr+frrr9FoxKzVQIuLi6NmzZrFHqtZsyYbNmxQKaLK4csvv+T222/3r+OoXbs2aWlpLFq0SCQ25aTwczQnJ6fYIuqcnBzq1q2rTlCVSGFSk56eztixY8VoTZDt2rWL3NzcYuspZVlm1qxZrFixgo8++kjF6CoekdichU6no379+mzfvt1frk+WZbZv387NN9+scnQVl6IoTJ8+nY0bN/Lyyy+LhdTlpGXLlrz99tvFHvv444+pXr06t99+u0hqgqRx48ZnTG09ceIESUlJKkVUOTgcjjNe0xqNBkVRVIqo8klOTiY2NpZt27b5Exmr1cq+ffvo2rWrusFVcIVJTUpKCi+99BJRUVFqh1ThderUqdiabYCJEyfSqVMnf4EqIXBEYnMOt956Kx999BH169enYcOGrFixAofDIe7oBdG0adNYu3YtY8aMwWw2+0fMLBaLmCIVRGaz+Yx1TEajkaioKLG+KYi6d+/Oiy++yMKFC+nQoQP79u3j559/ZtiwYWqHVqFddtllLFy4kMTERGrWrMmhQ4dYtmyZuMAIMLvdTkpKiv/r1NRUDh06RGRkJImJidxyyy0sXLiQatWqkZyczDfffENcXJy/Sppwcc533mNjY3n33Xc5ePAgTz/9NLIs+z9nIyMj0enEJeHFutDr/b8JpE6nIzY2VvTpCwJJEbepzmnlypUsWbKE7Oxs6taty/33388ll1yidlgV1l133XXWx0eMGCESynL28ssvU7duXdGgM8g2bdrE119/TUpKCsnJyXTv3p0bbrhB7bAqNJvNxpw5c9i4cSM5OTnEx8dz9dVX07t3b3FhF0A7duxg3LhxZzzeuXNnRo4c6W/Q+dNPP2G1WmnSpAkPPPCAuNAro/Od9z59+vDwww+f9fteeuklmjdvHuzwKqwLvd7/a+TIkdxyyy2iQWcQiMRGEARBEARBEISwJybPC4IgCIIgCIIQ9kRiIwiCIAiCIAhC2BOJjSAIgiAIgiAIYU8kNoIgCIIgCIIghD2R2AiCIAiCIAiCEPZEYiMIgiAIgiAIQtgTiY0gCIIgCIIgCGFPJDaCIAiCIAiCIIQ9kdgIgiAIgiAIghD2RGIjCIIgCIIgCELYE4mNIAiCIAiCIAhhTyQ2giAIgiAIgiCEvf8DXYwgAZUlAh8AAAAASUVORK5CYII=\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 3800)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 37,
-   "id": "53da2e54",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 6980)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "5b3a981d",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "def graph(demand_schedule, supply_schedule, P_grid, p_eqbm, q_eqbm, \n",
-    "                        period_bids, period_asks, period_prices, period_sales, \n",
-    "                        redemption_values, token_costs, ntokens, nbuyers, nsellers, nsteps):\n",
-    "    plt.plot(demand_schedule, P_grid, label = 'Demand Curve')\n",
-    "    plt.plot(supply_schedule, P_grid, label = 'Supply Curve')\n",
-    "    plt.plot(period_prices, color='green', linestyle='--', label='Mean Real Prices')\n",
-    "    plt.axhline(y=np.nanmean(p_eqbm), color='black', linestyle='--', label='Mean Eqbm Prices')\n",
-    "    prices = []\n",
-    "    print(nsteps)\n",
-    "    for i in range(nsteps):\n",
-    "        if (period_prices[i] >0):\n",
-    "            plt.scatter([period_sales[i]]*len(period_bids[i]), period_bids[i], s = 10, marker = 'x', c = 'red')\n",
-    "            plt.scatter([period_sales[i]]*len(period_asks[i]), period_asks[i], s = 10, marker = 'o', c = 'blue')\n",
-    "        else:\n",
-    "            pass  \n",
-    "    plt.legend()\n",
-    "    text_content = f'q*={q_eqbm}, mean(q)={np.round(np.nanmax(period_sales),1)},p*={np.round(p_eqbm,1)}, mean(p)={np.round(np.nanmean(period_prices),1)}'\n",
-    "    plt.title(text_content)\n",
-    "    plt.xlim(0,q_eqbm*1.2)\n",
-    "    plt.ylim(0,p_eqbm*3.0)\n",
-    "    plt.show()\n",
-    "    \n",
-    "    plt.plot(period_bids, c = 'r', linestyle='--')\n",
-    "    plt.plot(period_asks, c = 'b', linestyle='--')\n",
-    "    plt.scatter(range(nsteps), period_prices, c = 'g')\n",
-    "    plt.title('Bids (red), Asks (blue) and Prices (green) over trading steps')\n",
-    "    plt.show()\n",
-    "\n",
-    "def graph_period(db, rnd, period):\n",
-    "    period_bids = list(db.get_period(rnd, period).bids)\n",
-    "    period_asks = list(db.get_period(rnd, period).asks)\n",
-    "    period_prices = list(db.get_period(rnd, period).price)\n",
-    "    period_sales = np.cumsum(np.where(db.get_period(rnd, period).price > 0,1,0))\n",
-    "    [_, demand_schedule, supply_schedule, P_grid, redemption_values, token_costs, p_eqbm, q_eqbm] = db.get_round(rnd).iloc[0].tolist()\n",
-    "    graph(demand_schedule, supply_schedule, P_grid, p_eqbm, q_eqbm, period_bids, period_asks, period_prices, period_sales, redemption_values, token_costs, db.ntokens, db.nbuyers, db.nsellers, db.nsteps)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "03e53392",
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3 (ipykernel)",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.10.13"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 5
-}
diff --git a/code/3_deep_reinforcement_learning/01_gymnasium.ipynb b/code/3_deep_reinforcement_learning/01_gymnasium.ipynb
index 47fb356..a2eaa14 100644
--- a/code/3_deep_reinforcement_learning/01_gymnasium.ipynb
+++ b/code/3_deep_reinforcement_learning/01_gymnasium.ipynb
@@ -27,39 +27,27 @@
     "    - FlattenObservation, TimeLimit (to steps), ClipAction, RescaleAction, TimeAwareObs (ensure Markov)"
    ]
   },
+  {
+   "cell_type": "markdown",
+   "id": "fe427f74",
+   "metadata": {},
+   "source": [
+    "### Vectorized"
+   ]
+  },
   {
    "cell_type": "code",
    "execution_count": null,
    "id": "194db063",
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Using cpu device\n",
-      "Wrapping the env with a `Monitor` wrapper\n",
-      "Wrapping the env in a DummyVecEnv.\n",
-      "---------------------------------\n",
-      "| rollout/           |          |\n",
-      "|    ep_len_mean     | 20.2     |\n",
-      "|    ep_rew_mean     | 20.2     |\n",
-      "| time/              |          |\n",
-      "|    fps             | 788      |\n",
-      "|    iterations      | 1        |\n",
-      "|    time_elapsed    | 2        |\n",
-      "|    total_timesteps | 2048     |\n",
-      "---------------------------------\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "import gymnasium as gym\n",
     "\n",
     "from stable_baselines3 import PPO\n",
     "env = gym.make(\"CartPole-v1\")\n",
     "model = PPO(\"MlpPolicy\", env, verbose=1)\n",
-    "model.learn(total_timesteps=10_000)\n",
+    "model.learn(total_timesteps=10000)\n",
     "vec_env = model.get_env()\n",
     "obs = vec_env.reset()\n",
     "for i in range(1000):\n",
@@ -1701,9 +1689,66 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 2,
    "id": "b7276c5d",
    "metadata": {},
+   "outputs": [
+    {
+     "ename": "FileNotFoundError",
+     "evalue": "[Errno 2] No such file or directory: './final.pth.tar'",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
+      "Cell \u001b[0;32mIn [2], line 32\u001b[0m\n\u001b[1;32m     29\u001b[0m     \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mDeploy is finished, final epsiode return is: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mreturns\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m     31\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;18m__name__\u001b[39m \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m__main__\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[0;32m---> 32\u001b[0m     \u001b[43mmain\u001b[49m\u001b[43m(\u001b[49m\u001b[43mmain_config\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmain_config\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcreate_config\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcreate_config\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mckpt_path\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43m./final.pth.tar\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n",
+      "Cell \u001b[0;32mIn [2], line 17\u001b[0m, in \u001b[0;36mmain\u001b[0;34m(main_config, create_config, ckpt_path)\u001b[0m\n\u001b[1;32m     15\u001b[0m env\u001b[38;5;241m.\u001b[39menable_save_replay(replay_path\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m./lunarlander_dqn_deploy/video\u001b[39m\u001b[38;5;124m'\u001b[39m) \u001b[38;5;66;03m# Enable the video recording of the environment and set the video saving folder\u001b[39;00m\n\u001b[1;32m     16\u001b[0m model \u001b[38;5;241m=\u001b[39m DQN(\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mcfg\u001b[38;5;241m.\u001b[39mpolicy\u001b[38;5;241m.\u001b[39mmodel) \u001b[38;5;66;03m# Import model configuration, instantiate DQN model\u001b[39;00m\n\u001b[0;32m---> 17\u001b[0m state_dict \u001b[38;5;241m=\u001b[39m \u001b[43mtorch\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mload\u001b[49m\u001b[43m(\u001b[49m\u001b[43mckpt_path\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmap_location\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mcpu\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m \u001b[38;5;66;03m# Load model parameters from file\u001b[39;00m\n\u001b[1;32m     18\u001b[0m model\u001b[38;5;241m.\u001b[39mload_state_dict(state_dict[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mmodel\u001b[39m\u001b[38;5;124m'\u001b[39m]) \u001b[38;5;66;03m# Load model parameters into the model\u001b[39;00m\n\u001b[1;32m     19\u001b[0m policy \u001b[38;5;241m=\u001b[39m DQNPolicy(cfg\u001b[38;5;241m.\u001b[39mpolicy, model\u001b[38;5;241m=\u001b[39mmodel)\u001b[38;5;241m.\u001b[39meval_mode \u001b[38;5;66;03m# Import policy configuration, import model, instantiate DQN policy, and turn to evaluation mode\u001b[39;00m\n",
+      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/torch/serialization.py:771\u001b[0m, in \u001b[0;36mload\u001b[0;34m(f, map_location, pickle_module, weights_only, **pickle_load_args)\u001b[0m\n\u001b[1;32m    768\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mencoding\u001b[39m\u001b[38;5;124m'\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m pickle_load_args\u001b[38;5;241m.\u001b[39mkeys():\n\u001b[1;32m    769\u001b[0m     pickle_load_args[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mencoding\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mutf-8\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[0;32m--> 771\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m \u001b[43m_open_file_like\u001b[49m\u001b[43m(\u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mrb\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m \u001b[38;5;28;01mas\u001b[39;00m opened_file:\n\u001b[1;32m    772\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m _is_zipfile(opened_file):\n\u001b[1;32m    773\u001b[0m         \u001b[38;5;66;03m# The zipfile reader is going to advance the current file position.\u001b[39;00m\n\u001b[1;32m    774\u001b[0m         \u001b[38;5;66;03m# If we want to actually tail call to torch.jit.load, we need to\u001b[39;00m\n\u001b[1;32m    775\u001b[0m         \u001b[38;5;66;03m# reset back to the original position.\u001b[39;00m\n\u001b[1;32m    776\u001b[0m         orig_position \u001b[38;5;241m=\u001b[39m opened_file\u001b[38;5;241m.\u001b[39mtell()\n",
+      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/torch/serialization.py:270\u001b[0m, in \u001b[0;36m_open_file_like\u001b[0;34m(name_or_buffer, mode)\u001b[0m\n\u001b[1;32m    268\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_open_file_like\u001b[39m(name_or_buffer, mode):\n\u001b[1;32m    269\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m _is_path(name_or_buffer):\n\u001b[0;32m--> 270\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_open_file\u001b[49m\u001b[43m(\u001b[49m\u001b[43mname_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    271\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    272\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mw\u001b[39m\u001b[38;5;124m'\u001b[39m \u001b[38;5;129;01min\u001b[39;00m mode:\n",
+      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/torch/serialization.py:251\u001b[0m, in \u001b[0;36m_open_file.__init__\u001b[0;34m(self, name, mode)\u001b[0m\n\u001b[1;32m    250\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m__init__\u001b[39m(\u001b[38;5;28mself\u001b[39m, name, mode):\n\u001b[0;32m--> 251\u001b[0m     \u001b[38;5;28msuper\u001b[39m(_open_file, \u001b[38;5;28mself\u001b[39m)\u001b[38;5;241m.\u001b[39m\u001b[38;5;21m__init__\u001b[39m(\u001b[38;5;28;43mopen\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mname\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m)\u001b[49m)\n",
+      "\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: './final.pth.tar'"
+     ]
+    }
+   ],
+   "source": [
+    "import gym # Load the gym library, which is used to standardize the reinforcement learning environment\n",
+    "import torch # Load the PyTorch library for loading the Tensor model and defining the computing network\n",
+    "from easydict import EasyDict # Load EasyDict for instantiating configuration files\n",
+    "from ding.config import compile_config # Load configuration related components in DI-engine config module\n",
+    "from ding.envs import DingEnvWrapper # Load environment related components in DI-engine env module\n",
+    "from ding.policy import DQNPolicy, single_env_forward_wrapper # Load policy-related components in DI-engine policy module\n",
+    "from ding.model import DQN # Load model related components in DI-engine model module\n",
+    "from dizoo.box2d.lunarlander.config.lunarlander_dqn_config import main_config, create_config # Load DI-zoo lunarlander environment and DQN algorithm related configurations\n",
+    "\n",
+    "\n",
+    "def main(main_config: EasyDict, create_config: EasyDict, ckpt_path: str):\n",
+    "    main_config.exp_name = 'lunarlander_dqn_deploy' # Set the name of the experiment to be run in this deployment, which is the name of the project folder to be created\n",
+    "    cfg = compile_config(main_config, create_cfg=create_config, auto=True) # Compile and generate all configurations\n",
+    "    env = DingEnvWrapper(gym.make(cfg.env.env_id), EasyDict(env_wrapper='default')) # Add the DI-engine environment decorator upon the gym's environment instance\n",
+    "    env.enable_save_replay(replay_path='./lunarlander_dqn_deploy/video') # Enable the video recording of the environment and set the video saving folder\n",
+    "    model = DQN(**cfg.policy.model) # Import model configuration, instantiate DQN model\n",
+    "    state_dict = torch.load(ckpt_path, map_location='cpu') # Load model parameters from file\n",
+    "    model.load_state_dict(state_dict['model']) # Load model parameters into the model\n",
+    "    policy = DQNPolicy(cfg.policy, model=model).eval_mode # Import policy configuration, import model, instantiate DQN policy, and turn to evaluation mode\n",
+    "    forward_fn = single_env_forward_wrapper(policy.forward) # Use the strategy decorator of the simple environment to decorate the decision method of the DQN strategy\n",
+    "    obs = env.reset() # Reset the initialization environment to get the initial observations\n",
+    "    returns = 0. # Initialize total reward\n",
+    "    while True: # Let the agent's strategy and environment interact cyclically until the end\n",
+    "        action = forward_fn(obs) # According to the observed state, make a decision and generate action\n",
+    "        obs, rew, done, info = env.step(action) # Execute actions, interact with the environment, get the next observation state, the reward of this interaction, the signal of whether to end, and other information\n",
+    "        returns += rew # Cumulative reward return\n",
+    "        if done:\n",
+    "            break\n",
+    "    print(f'Deploy is finished, final epsiode return is: {returns}')\n",
+    "\n",
+    "if __name__ == \"__main__\":\n",
+    "    main(main_config=main_config, create_config=create_config, ckpt_path='./final.pth.tar')\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "4d432011",
+   "metadata": {},
    "outputs": [],
    "source": []
   }
diff --git a/code/3_deep_reinforcement_learning/2_custom_env_gym.ipynb b/code/3_deep_reinforcement_learning/2_custom_env_gym.ipynb
deleted file mode 100644
index 175e93a..0000000
--- a/code/3_deep_reinforcement_learning/2_custom_env_gym.ipynb
+++ /dev/null
@@ -1,141 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "markdown",
-   "id": "7a84f747",
-   "metadata": {},
-   "source": [
-    "Our custom environment will inherit from the abstract class gym.Env. You shouldn’t forget to add the metadata attribute to your class. There, you should specify the render-modes that are supported by your environment (e.g. \"human\", \"rgb_array\", \"ansi\") and the framerate at which your environment should be rendered. Every environment should supportNone as render-mode; you don’t need to add it in the metadata. In GridWorldEnv, we will support the modes “rgb_array” and “human” and render at 4 FPS.\n",
-    "\n",
-    "The __init__ method of our environment will accept the integer size, that determines the size of the square grid. We will set up some variables for rendering and define self.observation_space and self.action_space. In our case, observations should provide information about the location of the agent and target on the 2-dimensional grid. We will choose to represent observations in the form of a dictionaries with keys \"agent\" and \"target\". An observation may look like {\"agent\": array([1, 0]), \"target\": array([0, 3])}. Since we have 4 actions in our environment (“right”, “up”, “left”, “down”), we will use Discrete(4) as an action space. Here is the declaration of GridWorldEnv and the implementation of __init__:\n",
-    "\n",
-    "The reset method will be called to initiate a new episode. You may assume that the step method will not be called before reset has been called. Moreover, reset should be called whenever a done signal has been issued. Users may pass the seed keyword to reset to initialize any random number generator that is used by the environment to a deterministic state. It is recommended to use the random number generator self.np_random that is provided by the environment’s base class, gym.Env. If you only use this RNG, you do not need to worry much about seeding, but you need to remember to call super().reset(seed=seed) to make sure that gym.Env correctly seeds the RNG. Once this is done, we can randomly set the state of our environment. In our case, we randomly choose the agent’s location and the randomly sample target positions, until it does not coincide with the agent’s position.\n",
-    "The reset method should return a tuple of the initial observation and some auxiliary information. We can use the methods _get_obs and _get_info that we implemented earlier for that:"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 3,
-   "id": "f17051e7",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gym\n",
-    "from gym import spaces\n",
-    "import pygame\n",
-    "import numpy as np\n",
-    "\n",
-    "class GridWorldEnv(gym.Env):\n",
-    "    metadata = {\"render_modes\": [\"human\", \"rgb_array\"], \"render_fps\": 4}\n",
-    "\n",
-    "    def __init__(self, render_mode=None, size=5):\n",
-    "        self.size = size  # The size of the square grid\n",
-    "        self.window_size = 512  # The size of the PyGame window\n",
-    "\n",
-    "        # Observations are dictionaries with the agent's and the target's location.\n",
-    "        # Each location is encoded as an element of {0, ..., `size`}^2, i.e. MultiDiscrete([size, size]).\n",
-    "        self.observation_space = spaces.Dict(\n",
-    "            {\n",
-    "                \"agent\": spaces.Box(0, size - 1, shape=(2,), dtype=int),\n",
-    "                \"target\": spaces.Box(0, size - 1, shape=(2,), dtype=int),\n",
-    "            }\n",
-    "        )\n",
-    "\n",
-    "        # We have 4 actions, corresponding to \"right\", \"up\", \"left\", \"down\"\n",
-    "        self.action_space = spaces.Discrete(4)\n",
-    "\n",
-    "        \"\"\"\n",
-    "        The following dictionary maps abstract actions from `self.action_space` to \n",
-    "        the direction we will walk in if that action is taken.\n",
-    "        I.e. 0 corresponds to \"right\", 1 to \"up\" etc.\n",
-    "        \"\"\"\n",
-    "        self._action_to_direction = {\n",
-    "            0: np.array([1, 0]),\n",
-    "            1: np.array([0, 1]),\n",
-    "            2: np.array([-1, 0]),\n",
-    "            3: np.array([0, -1]),\n",
-    "        }\n",
-    "\n",
-    "        \n",
-    "    def reset(self, seed=None, options=None):\n",
-    "        # We need the following line to seed self.np_random\n",
-    "        super().reset(seed=seed)\n",
-    "\n",
-    "        # Choose the agent's location uniformly at random\n",
-    "        self._agent_location = self.np_random.integers(0, self.size, size=2, dtype=int)\n",
-    "\n",
-    "        # We will sample the target's location randomly until it does not coincide with the agent's location\n",
-    "        self._target_location = self._agent_location\n",
-    "        while np.array_equal(self._target_location, self._agent_location):\n",
-    "            self._target_location = self.np_random.integers(\n",
-    "                0, self.size, size=2, dtype=int\n",
-    "            )\n",
-    "\n",
-    "        observation = self._get_obs()\n",
-    "        info = self._get_info()\n",
-    "\n",
-    "        return observation, info # initial state\n",
-    "    \n",
-    "    def step(self, action):\n",
-    "        # Map the action (element of {0,1,2,3}) to the direction we walk in\n",
-    "        direction = self._action_to_direction[action]\n",
-    "        # We use `np.clip` to make sure we don't leave the grid\n",
-    "        self._agent_location = np.clip(\n",
-    "            self._agent_location + direction, 0, self.size - 1\n",
-    "        )\n",
-    "        # An episode is done iff the agent has reached the target\n",
-    "        terminated = np.array_equal(self._agent_location, self._target_location)\n",
-    "        reward = 1 if terminated else 0  # Binary sparse rewards\n",
-    "        observation = self._get_obs()\n",
-    "        info = self._get_info()\n",
-    "\n",
-    "        return observation, reward, terminated, False, info # new state, reward\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 4,
-   "id": "0b717679",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "from gym.envs.registration import register\n",
-    "\n",
-    "register(\n",
-    "    id='gym_examples/GridWorld-v0',\n",
-    "    entry_point='gym_examples.envs:GridWorldEnv',\n",
-    "    max_episode_steps=300,\n",
-    ")"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "d24184ca",
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3 (ipykernel)",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.10.13"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 5
-}
diff --git a/code/3_deep_reinforcement_learning/3_custom_env_DQN.ipynb b/code/3_deep_reinforcement_learning/3_custom_env_DQN.ipynb
deleted file mode 100644
index 3203cf1..0000000
--- a/code/3_deep_reinforcement_learning/3_custom_env_DQN.ipynb
+++ /dev/null
@@ -1,258 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "code",
-   "execution_count": 1,
-   "id": "a2298e89",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "from gymnasium import spaces\n",
-    "import numpy as np\n",
-    "from functions import *"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 2,
-   "id": "cf1e1809",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "buyer_strategies = ['Honest']\n",
-    "seller_strategies = ['Honest','Honest','Honest','Honest','Honest','Honest','Honest','Honest']\n",
-    "nbuyers, nsellers = len(buyer_strategies), len(seller_strategies)\n",
-    "nrounds, nperiods, ntokens, nsteps, gametype, nbuyers, nsellers = 1, 10000, 10, 10, '1234', len(buyer_strategies), len(seller_strategies)\n",
-    "R1, R2, R3, R4 = gametype_to_ran(gametype)\n",
-    "game_metadata = [nrounds, nperiods, ntokens, nbuyers, nsellers, nsteps, R1, R2, R3, R4]\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "rnd = 0\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "period = 0"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 5,
-   "id": "4ac652b9",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "[<functions.Honest at 0x11e836590>,\n",
-       " <functions.Honest at 0x11e835540>,\n",
-       " <functions.Honest at 0x11e835510>,\n",
-       " <functions.Honest at 0x11e8355a0>,\n",
-       " <functions.Honest at 0x11e8354b0>,\n",
-       " <functions.Honest at 0x11e835750>,\n",
-       " <functions.Honest at 0x11e8344f0>,\n",
-       " <functions.Honest at 0x11e835570>]"
-      ]
-     },
-     "execution_count": 5,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "db.sellers"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 15,
-   "id": "304478f7",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "class TradingEnv(gym.Env):\n",
-    "    def __init__(self, db, nsteps, render_mode = None):\n",
-    "        self.db = db\n",
-    "        self.action_space = spaces.Box(low=0, high=1, shape=(1,), dtype=np.float)\n",
-    "        self.observation_space = spaces.Box(low=0, high=nsteps, shape=(1,), dtype=int)\n",
-    "\n",
-    "    def reset(self):\n",
-    "        self.db.reset_period(rnd)\n",
-    "        observation = np.array([0])\n",
-    "        return observation, None\n",
-    "\n",
-    "    def step(self, action, timestep, seed = None, options = None):\n",
-    "        # convert action to bid\n",
-    "        self.db.buyers[0].next_token()\n",
-    "        min_bid = self.db.buyers[0].value*0.6\n",
-    "        max_bid = self.db.buyers[0].value*1.4\n",
-    "        bid = min_bid * action.item() + (1-action.item())*max_bid\n",
-    "        \n",
-    "        # simulate market\n",
-    "        bids = [bid]\n",
-    "        asks = [seller.ask(self.db) for seller in self.db.sellers]\n",
-    "        current_ask, current_ask_idx, current_bid, current_bid_idx = current_bid_ask(bids, asks) \n",
-    "        sale, price, bprofit, sprofit, buy, sell = buy_sell(db, current_bid, current_bid_idx, current_ask, current_ask_idx)\n",
-    "        step_data = [rnd,period,timestep,bids,asks,current_bid,current_bid_idx,current_ask,current_ask_idx,buy,sell,price,sale,bprofit,sprofit]\n",
-    "        self.db.add_step(step_data)\n",
-    "        \n",
-    "        # compute reward, new state\n",
-    "        reward = 0\n",
-    "        if (sale == 1) and (current_bid_idx == 0):\n",
-    "            reward = bprofit\n",
-    "        observation = np.array([timestep + 1])\n",
-    "        \n",
-    "        # check termination \n",
-    "        if timestep == nsteps-1:\n",
-    "            terminated = True\n",
-    "        else:\n",
-    "            terminated = False\n",
-    "        return observation, reward, terminated, False, None"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 16,
-   "id": "b2655b4b",
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 0, New State: 1, Action:0.0, Reward: 26.3, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 2, Action:0.8, Reward: 55.2, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 3, Action:0.3, Reward: 26.8, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 4, Action:0.7, Reward: 41.2, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 5, Action:0.2, Reward: 12.5, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 6, Action:0.6, Reward: 18.9, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 7, Action:1.0, Reward: 21.7, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 8, Action:0.6, Reward: 11.8, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 9, Action:1.0, Reward: 14.3, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 10, Action:0.9, Reward: 0, Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 0, New State: 1, Action:0.6, Reward: 49.2, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 2, Action:0.4, Reward: 39.7, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 3, Action:0.0, Reward: 19.2, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 4, Action:0.2, Reward: 23.6, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 5, Action:0.6, Reward: 20.3, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 6, Action:0.5, Reward: 17.0, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 7, Action:0.1, Reward: 5.2, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 8, Action:0.9, Reward: 16.2, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 9, Action:0.2, Reward: 3.1, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 10, Action:0.0, Reward: 0, Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 0, New State: 1, Action:0.6, Reward: 51.4, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 2, Action:0.1, Reward: 27.7, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 3, Action:0.6, Reward: 38.0, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 4, Action:1.0, Reward: 49.3, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 5, Action:0.4, Reward: 16.8, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 6, Action:0.1, Reward: 8.7, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 7, Action:0.4, Reward: 11.0, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 8, Action:0.2, Reward: 4.3, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 9, Action:0.2, Reward: 2.0, Period End: False\n",
-      "Rnd: 0, Period: 0, New State: 10, Action:1.0, Reward: 0, Period End: True\n",
-      "done\n"
-     ]
-    }
-   ],
-   "source": [
-    "env = TradingEnv(db, nsteps)\n",
-    "observation, info = env.reset()\n",
-    "timestep = 0\n",
-    "\n",
-    "for _ in range(30): \n",
-    "    action = env.action_space.sample()\n",
-    "    observation, reward, done, info, reset_info = env.step(action, timestep)\n",
-    "    print(f\"Rnd: {rnd}, Period: {period}, New State: {observation.item()}, Action:{np.round(action.item(),1)}, Reward: {np.round(reward,1)}, Period End: {done}\")\n",
-    "\n",
-    "    if done:\n",
-    "        # If the episode is done, reset the environment\n",
-    "        print('done')\n",
-    "        observation, info = env.reset()\n",
-    "        timestep = 0\n",
-    "    else:\n",
-    "        timestep += 1\n",
-    "\n",
-    "# Close the environment when done\n",
-    "env.close()\n",
-    "\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 55,
-   "id": "44f7ed47",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gym\n",
-    "from stable_baselines3 import PPO\n",
-    "from stable_baselines3.ppo import MlpPolicy\n",
-    "from stable_baselines3.common.env_util import make_vec_env\n",
-    "import os\n",
-    "import time\n",
-    "# Saving logs to visulise in Tensorboard, saving models\n",
-    "models_dir = f\"models/Mountain-{time.time()}\"\n",
-    "logdir = f\"logs/Mountain-{time.time()}\"\n",
-    "\n",
-    "if not os.path.exists(models_dir):\n",
-    "    os.makedirs(models_dir)\n",
-    "\n",
-    "if not os.path.exists(logdir):\n",
-    "    os.makedirs(logdir)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "eec8b644",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "# Parallel environments\n",
-    "env = make_vec_env(\"MountainCarContinuous-v0\", n_envs=1)\n",
-    "\n",
-    "# The learning agent and hyperparameters\n",
-    "model = PPO(\n",
-    "    policy=MlpPolicy,\n",
-    "    env=env,\n",
-    "    seed=0,\n",
-    "    batch_size=256,\n",
-    "    ent_coef=0.00429,\n",
-    "    learning_rate=7.77e-05,\n",
-    "    n_epochs=10,\n",
-    "    n_steps=8,\n",
-    "    gae_lambda=0.9,\n",
-    "    gamma=0.9999,\n",
-    "    clip_range=0.1,\n",
-    "    max_grad_norm =5,\n",
-    "    vf_coef=0.19,\n",
-    "    use_sde=True,\n",
-    "    policy_kwargs=dict(log_std_init=-3.29, ortho_init=False),\n",
-    "    verbose=1,\n",
-    "    tensorboard_log=logdir\n",
-    "    )\n",
-    "\n"
-   ]
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3 (ipykernel)",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.10.13"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 5
-}
diff --git a/code/3_deep_reinforcement_learning/4_DQN_monopoly.ipynb b/code/3_deep_reinforcement_learning/4_DQN_monopoly.ipynb
deleted file mode 100644
index bd46add..0000000
--- a/code/3_deep_reinforcement_learning/4_DQN_monopoly.ipynb
+++ /dev/null
@@ -1,2250 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "markdown",
-   "id": "759514f9",
-   "metadata": {},
-   "source": [
-    "# Trading Game"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 253,
-   "id": "62aa116f",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "from gymnasium import spaces\n",
-    "import numpy as np\n",
-    "from functions import *\n",
-    "from itertools import count\n",
-    "buyer_strategies = ['Honest']\n",
-    "seller_strategies = ['Honest','Honest','Honest','Honest','Honest']\n",
-    "nbuyers, nsellers = len(buyer_strategies), len(seller_strategies)\n",
-    "nrounds, nperiods, ntokens, nsteps, gametype, nbuyers, nsellers = 1, 100, 5, 5, '1234', len(buyer_strategies), len(seller_strategies)\n",
-    "R1, R2, R3, R4 = gametype_to_ran(gametype)\n",
-    "game_metadata = [nrounds, nperiods, ntokens, nbuyers, nsellers, nsteps, R1, R2, R3, R4]\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "rnd = 0\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "period = 0\n",
-    "num_actions = 11\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.1\n",
-    "max_frac = 1.0\n",
-    "action_to_bid_frac = np.linspace(0,1,num_actions)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 254,
-   "id": "eebbf694",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "class TradingEnv(gym.Env):\n",
-    "    def __init__(self, db, nsteps, render_mode = None):\n",
-    "        self.db = db\n",
-    "        self.action_space = spaces.Discrete(num_actions)\n",
-    "        self.observation_space = spaces.Discrete(num_states)\n",
-    "\n",
-    "    def reset(self, rnd):\n",
-    "        self.db.reset_period(rnd)\n",
-    "        observation = np.array([0])\n",
-    "        return observation, None\n",
-    "\n",
-    "    def step(self, action, timestep, period, rnd, seed = None, options = None):\n",
-    "        bid_frac = action_to_bid_frac[action]\n",
-    "        # convert action to bid\n",
-    "        self.db.buyers[0].next_token()\n",
-    "        min_bid = self.db.buyers[0].value*min_frac\n",
-    "        max_bid = self.db.buyers[0].value*max_frac\n",
-    "        bid = np.round(min_bid * bid_frac + (1-bid_frac)*max_bid,1)\n",
-    "        \n",
-    "        # simulate market\n",
-    "        bids = [bid]\n",
-    "        asks = [seller.ask(self.db) for seller in self.db.sellers]\n",
-    "        current_ask, current_ask_idx, current_bid, current_bid_idx = current_bid_ask(bids, asks) \n",
-    "        sale, price, bprofit, sprofit, buy, sell = buy_sell(db, current_bid, current_bid_idx, current_ask, current_ask_idx)\n",
-    "        step_data = [rnd,period,timestep,bids,asks,current_bid,current_bid_idx,current_ask,current_ask_idx,buy,sell,price,sale,bprofit,sprofit]\n",
-    "        self.db.add_step(step_data)\n",
-    "        \n",
-    "        # compute reward, new state\n",
-    "        reward = np.array([0])\n",
-    "        if (sale == 1) and (current_bid_idx == 0):\n",
-    "            reward = np.array([bprofit])\n",
-    "        observation = np.array([timestep + 1])\n",
-    "        \n",
-    "        # check termination \n",
-    "        if timestep == nsteps-1:\n",
-    "            terminated = True\n",
-    "        else:\n",
-    "            terminated = False\n",
-    "        return observation, reward, terminated, False, None"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 255,
-   "id": "b00d629a",
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 0, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 1, New State: [1], Action:3, Reward: [42.9], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 2, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [2], Action:8, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 3, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [3], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [5], Action:9, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 4, New State: [1], Action:9, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [2], Action:7, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [3], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [5], Action:1, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 5, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [4], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 6, New State: [1], Action:8, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [2], Action:8, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [4], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 7, New State: [1], Action:5, Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [2], Action:3, Reward: [26.9], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 8, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [3], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 9, New State: [1], Action:2, Reward: [39.], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [2], Action:1, Reward: [20.9], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [3], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [5], Action:1, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 10, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [3], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [4], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [5], Action:4, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 11, New State: [1], Action:3, Reward: [42.9], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [5], Action:8, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 12, New State: [1], Action:7, Reward: [58.5], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [3], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [4], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [5], Action:8, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 13, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [2], Action:1, Reward: [20.9], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [4], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [5], Action:1, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 14, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [2], Action:4, Reward: [29.9], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [3], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 15, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [2], Action:4, Reward: [29.9], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 16, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 17, New State: [1], Action:8, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [4], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 18, New State: [1], Action:7, Reward: [58.5], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [4], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 19, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [5], Action:9, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 20, New State: [1], Action:3, Reward: [42.9], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 21, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [3], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [4], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 22, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 23, New State: [1], Action:3, Reward: [42.9], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [2], Action:3, Reward: [26.9], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 24, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [2], Action:3, Reward: [26.9], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [4], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 25, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [3], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 26, New State: [1], Action:5, Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [2], Action:4, Reward: [29.9], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [4], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [5], Action:1, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 27, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [2], Action:4, Reward: [29.9], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [4], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 28, New State: [1], Action:7, Reward: [58.5], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [2], Action:1, Reward: [20.9], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [3], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 29, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [4], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 30, New State: [1], Action:6, Reward: [54.6], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [4], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 31, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [2], Action:1, Reward: [20.9], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 32, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [3], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 33, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [3], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [4], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 34, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [5], Action:4, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 35, New State: [1], Action:8, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [4], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [5], Action:4, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 36, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [3], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [5], Action:9, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 37, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [2], Action:8, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [3], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 38, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [3], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [5], Action:9, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 39, New State: [1], Action:5, Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [2], Action:1, Reward: [20.9], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [5], Action:4, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 40, New State: [1], Action:6, Reward: [54.6], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [3], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 41, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [2], Action:7, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 42, New State: [1], Action:5, Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [2], Action:1, Reward: [20.9], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [4], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [5], Action:8, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 43, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 44, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [3], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 45, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [4], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 46, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [3], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 47, New State: [1], Action:3, Reward: [42.9], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [3], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 48, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [3], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 49, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [3], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 50, New State: [1], Action:6, Reward: [54.6], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [2], Action:4, Reward: [29.9], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [3], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 51, New State: [1], Action:8, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [3], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [4], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 52, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [3], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [4], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [5], Action:1, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 53, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [2], Action:8, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 54, New State: [1], Action:5, Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [2], Action:7, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [4], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 55, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [2], Action:10, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [4], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 56, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [2], Action:3, Reward: [26.9], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [3], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [4], Action:7, Reward: [0], Period End: False\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 56, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 57, New State: [1], Action:6, Reward: [54.6], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [4], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 58, New State: [1], Action:2, Reward: [39.], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [2], Action:4, Reward: [29.9], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [5], Action:8, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 59, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [3], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 60, New State: [1], Action:9, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [2], Action:8, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [3], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 61, New State: [1], Action:3, Reward: [42.9], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [3], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 62, New State: [1], Action:6, Reward: [54.6], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [3], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [4], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 63, New State: [1], Action:8, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [3], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [5], Action:9, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 64, New State: [1], Action:9, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [2], Action:3, Reward: [26.9], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [5], Action:1, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 65, New State: [1], Action:9, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [2], Action:10, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 66, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [3], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [4], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 67, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [3], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 68, New State: [1], Action:8, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 69, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 70, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 71, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [3], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 72, New State: [1], Action:9, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [2], Action:3, Reward: [26.9], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [3], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 73, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [2], Action:9, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 74, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [2], Action:1, Reward: [20.9], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 75, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [3], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 76, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [2], Action:10, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [3], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [4], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [5], Action:8, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 77, New State: [1], Action:6, Reward: [54.6], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [2], Action:7, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [5], Action:6, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 78, New State: [1], Action:5, Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [2], Action:7, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 79, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [2], Action:7, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [4], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 80, New State: [1], Action:5, Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 81, New State: [1], Action:10, Reward: [62.4], Period End: False\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 81, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [4], Action:1, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [5], Action:10, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 82, New State: [1], Action:5, Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [2], Action:7, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [3], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [5], Action:1, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 83, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [3], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [4], Action:6, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 84, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [4], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [5], Action:1, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 85, New State: [1], Action:3, Reward: [42.9], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [2], Action:10, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 86, New State: [1], Action:8, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [3], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [4], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 87, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [3], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [4], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 88, New State: [1], Action:2, Reward: [39.], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [3], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [4], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 89, New State: [1], Action:9, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [5], Action:8, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 90, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [2], Action:3, Reward: [26.9], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [3], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [5], Action:5, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 91, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [2], Action:8, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [3], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 92, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 93, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [2], Action:1, Reward: [20.9], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [4], Action:4, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 94, New State: [1], Action:10, Reward: [62.4], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [4], Action:7, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [5], Action:2, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 95, New State: [1], Action:4, Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [3], Action:2, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [4], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 96, New State: [1], Action:7, Reward: [58.5], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [2], Action:4, Reward: [29.9], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [4], Action:9, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [5], Action:3, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 97, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [2], Action:5, Reward: [32.9], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [3], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [4], Action:5, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [5], Action:0, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 98, New State: [1], Action:6, Reward: [54.6], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [2], Action:0, Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [3], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [4], Action:8, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 99, New State: [1], Action:0, Reward: [31.2], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [2], Action:2, Reward: [23.9], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [3], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [4], Action:0, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [5], Action:7, Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 100, New State: [1], Action:1, Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [2], Action:6, Reward: [35.8], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [3], Action:10, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [4], Action:3, Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [5], Action:8, Reward: [0], Period End: True\n",
-      "done\n"
-     ]
-    }
-   ],
-   "source": [
-    "env = TradingEnv(db, nsteps)\n",
-    "rnd = 0\n",
-    "observation, info = env.reset(rnd)\n",
-    "for period in count():\n",
-    "    for timestep in count(): \n",
-    "        action = env.action_space.sample()\n",
-    "        observation, reward, done, info, reset_info = env.step(action, timestep, period, rnd)\n",
-    "        print(f\"Rnd: {rnd}, Period: {period}, New State: {observation}, Action:{np.round(action,1)}, Reward: {np.round(reward,1)}, Period End: {done}\")\n",
-    "\n",
-    "        if done:\n",
-    "            # If the episode is done, reset the environment\n",
-    "            print('done')\n",
-    "            observation, info = env.reset(rnd)\n",
-    "            timestep += 1\n",
-    "            break\n",
-    "    if period == nperiods:\n",
-    "        break\n",
-    "\n",
-    "# Close the environment when done\n",
-    "env.close()"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "dd2ff437",
-   "metadata": {},
-   "source": [
-    "# DQN"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 256,
-   "id": "c76c48b1",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "import math\n",
-    "import random\n",
-    "import matplotlib\n",
-    "import matplotlib.pyplot as plt\n",
-    "from collections import namedtuple, deque\n",
-    "from itertools import count\n",
-    "import torch\n",
-    "import torch.nn as nn\n",
-    "import torch.optim as optim\n",
-    "import torch.nn.functional as F\n",
-    "\n",
-    "# set up matplotlib\n",
-    "is_ipython = 'inline' in matplotlib.get_backend()\n",
-    "if is_ipython:\n",
-    "    from IPython import display\n",
-    "plt.ion()\n",
-    "\n",
-    "# if GPU is to be used\n",
-    "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 257,
-   "id": "28e8f271",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "Transition = namedtuple('Transition',('state', 'action', 'next_state', 'reward'))\n",
-    "class ReplayMemory(object):\n",
-    "\n",
-    "    def __init__(self, capacity):\n",
-    "        self.memory = deque([], maxlen=capacity)\n",
-    "\n",
-    "    def push(self, *args):\n",
-    "        \"\"\"Save a transition\"\"\"\n",
-    "        self.memory.append(Transition(*args))\n",
-    "\n",
-    "    def sample(self, batch_size):\n",
-    "        return random.sample(self.memory, batch_size)\n",
-    "\n",
-    "    def __len__(self):\n",
-    "        return len(self.memory)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 258,
-   "id": "6322f7db",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "class DQN(nn.Module):\n",
-    "    def __init__(self, n_observations, n_actions):\n",
-    "        super(DQN, self).__init__()\n",
-    "        self.layer1 = nn.Linear(n_observations, 256)\n",
-    "        self.layer2 = nn.Linear(256, 256)\n",
-    "        self.layer3 = nn.Linear(256, n_actions)\n",
-    "\n",
-    "    # Called with either one element to determine next action, or a batch\n",
-    "    # during optimization. Returns tensor([[left0exp,right0exp]...]).\n",
-    "    def forward(self, x):\n",
-    "        x = F.relu(self.layer1(x))\n",
-    "        x = F.relu(self.layer2(x))\n",
-    "        return self.layer3(x)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 259,
-   "id": "708bda54",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "def select_action(state):\n",
-    "    global steps_done\n",
-    "    sample = random.random()\n",
-    "    eps_threshold = EPS_END + (EPS_START - EPS_END) * \\\n",
-    "        math.exp(-1. * steps_done / EPS_DECAY)\n",
-    "    steps_done += 1\n",
-    "    if sample > eps_threshold:\n",
-    "        with torch.no_grad():\n",
-    "            return policy_net(state).max(1)[1].view(1, 1)\n",
-    "    else:\n",
-    "        return torch.tensor([[env.action_space.sample()]], device=device, dtype=torch.long)\n",
-    "\n",
-    "def plot_durations(show_result=False):\n",
-    "    plt.figure(1)\n",
-    "    durations_t = torch.tensor(episode_durations, dtype=torch.float)\n",
-    "    if show_result:\n",
-    "        plt.title('Result')\n",
-    "    else:\n",
-    "        plt.clf()\n",
-    "        plt.title('Training...')\n",
-    "    plt.xlabel('Episode')\n",
-    "    plt.ylabel('Duration')\n",
-    "    plt.plot(durations_t.numpy())\n",
-    "    if len(durations_t) >= 100:\n",
-    "        means = durations_t.unfold(0, 100, 1).mean(1).view(-1)\n",
-    "        means = torch.cat((torch.zeros(99), means))\n",
-    "        plt.plot(means.numpy())\n",
-    "    plt.pause(0.001)\n",
-    "    if is_ipython:\n",
-    "        if not show_result:\n",
-    "            display.display(plt.gcf())\n",
-    "            display.clear_output(wait=True)\n",
-    "        else:\n",
-    "            display.display(plt.gcf())"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 260,
-   "id": "0c832be2",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "def optimize_model():\n",
-    "    if len(memory) < BATCH_SIZE:\n",
-    "        return\n",
-    "    transitions = memory.sample(BATCH_SIZE)\n",
-    "    batch = Transition(*zip(*transitions))\n",
-    "    non_final_mask = torch.tensor(tuple(map(lambda s: s is not None,\n",
-    "                                          batch.next_state)), device=device, dtype=torch.bool)\n",
-    "    non_final_next_states = torch.cat([s for s in batch.next_state\n",
-    "                                                if s is not None])\n",
-    "    state_batch = torch.cat(batch.state)\n",
-    "    action_batch = torch.cat(batch.action)\n",
-    "    reward_batch = torch.cat(batch.reward)\n",
-    "    state_action_values = policy_net(state_batch).gather(1, action_batch)\n",
-    "    next_state_values = torch.zeros(BATCH_SIZE, device=device)\n",
-    "    with torch.no_grad():\n",
-    "        next_state_values[non_final_mask] = target_net(non_final_next_states).max(1)[0]\n",
-    "    expected_state_action_values = (next_state_values * GAMMA) + reward_batch\n",
-    "    criterion = nn.SmoothL1Loss()\n",
-    "    loss = criterion(state_action_values, expected_state_action_values.unsqueeze(1))\n",
-    "    optimizer.zero_grad()\n",
-    "    loss.backward()\n",
-    "    torch.nn.utils.clip_grad_value_(policy_net.parameters(), 100)\n",
-    "    optimizer.step()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 261,
-   "id": "e196c240",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "rnd = 0\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "period = 0\n",
-    "num_actions = 11\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.1\n",
-    "max_frac = 1.0\n",
-    "action_to_bid_frac = np.linspace(0,1,num_actions)\n",
-    "rnd = 0\n",
-    "env = TradingEnv(db, nsteps)\n",
-    "BATCH_SIZE = 256\n",
-    "GAMMA = 0\n",
-    "EPS_START = 0.9\n",
-    "EPS_END = 0.05\n",
-    "EPS_DECAY = 1000\n",
-    "TAU = 0.005\n",
-    "LR = 1e-4\n",
-    "n_actions = env.action_space.n\n",
-    "state, info = env.reset(rnd)\n",
-    "n_observations = len(state)\n",
-    "policy_net = DQN(n_observations, n_actions).to(device)\n",
-    "target_net = DQN(n_observations, n_actions).to(device)\n",
-    "target_net.load_state_dict(policy_net.state_dict())\n",
-    "optimizer = optim.AdamW(policy_net.parameters(), lr=LR, amsgrad=True)\n",
-    "memory = ReplayMemory(30000)\n",
-    "steps_done = 0\n",
-    "episode_durations = []"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 262,
-   "id": "c35ac7c5",
-   "metadata": {
-    "scrolled": false
-   },
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "0 114.55 [5, 3, 5, 1, 0] 0.89576060731378\n",
-      "1 112.35000000000001 [3, 4, 7, 10, 7] 0.8915423586867929\n",
-      "2 110.7 [2, 8, 2, 5, 9] 0.8873451486626033\n",
-      "3 114.525 [8, 5, 2, 3, 7] 0.883168872310742\n",
-      "4 119.64000000000001 [8, 9, 7, 10, 0] 0.8790134252240828\n",
-      "5 121.45 [7, 7, 3, 3, 5] 0.874878703516232\n",
-      "6 119.80714285714286 [2, 10, 3, 10, 4] 0.8707646038189315\n",
-      "7 116.59375 [0, 7, 0, 1, 7] 0.8666710232794748\n",
-      "8 116.94444444444444 [5, 9, 2, 3, 7] 0.862597859558135\n",
-      "9 118.455 [10, 4, 7, 10, 3] 0.858545010825607\n",
-      "10 116.81818181818181 [0, 5, 5, 0, 7] 0.8545123757604612\n",
-      "11 116.59166666666665 [8, 3, 0, 1, 1] 0.8504998535466114\n",
-      "12 116.7576923076923 [6, 7, 0, 8, 1] 0.846507343870793\n",
-      "13 115.21428571428571 [1, 2, 9, 6, 5] 0.842534746920056\n",
-      "14 113.40333333333334 [0, 5, 0, 7, 0] 0.8385819633792699\n",
-      "15 112.24375 [0, 4, 4, 3, 1] 0.8346488944286404\n",
-      "16 112.43235294117648 [2, 10, 7, 6, 1] 0.8307354417412388\n",
-      "17 112.37222222222222 [1, 9, 7, 5, 7] 0.826841507480544\n",
-      "18 112.62105263157896 [8, 0, 8, 9, 7] 0.8229669942979967\n",
-      "19 112.41000000000001 [1, 8, 4, 7, 7] 0.8191118053305656\n",
-      "20 113.48249999999999 [10, 7, 3, 6, 5] 0.8152758441983258\n",
-      "21 113.295 [3, 3, 7, 0, 10] 0.811459015002049\n",
-      "22 114.06750000000002 [7, 7, 0, 7, 7] 0.8076612223208066\n",
-      "23 112.61250000000003 [1, 5, 2, 0, 6] 0.8038823712095838\n",
-      "24 111.595 [5, 8, 2, 10, 7] 0.8001223671969062\n",
-      "25 112.14500000000001 [9, 7, 10, 7, 7] 0.7963811162824771\n",
-      "26 111.98000000000002 [7, 2, 0, 2, 2] 0.7926585249348292\n",
-      "27 113.255 [3, 7, 7, 7, 7] 0.788954500088985\n",
-      "28 112.26750000000001 [3, 1, 7, 1, 7] 0.7852689491441301\n",
-      "29 111.93000000000002 [10, 2, 7, 7, 7] 0.7816017799612992\n",
-      "30 112.70750000000001 [7, 1, 5, 6, 4] 0.7779529008610715\n",
-      "31 114.00750000000001 [8, 7, 6, 4, 3] 0.7743222206212796\n",
-      "32 114.17999999999999 [5, 6, 4, 4, 10] 0.7707096484747286\n",
-      "33 115.6875 [10, 2, 9, 5, 3] 0.7671150941069261\n",
-      "34 117.42749999999998 [7, 7, 0, 1, 7] 0.7635384676538263\n",
-      "35 117.12249999999999 [1, 4, 0, 2, 3] 0.7599796796995812\n",
-      "36 118.35499999999999 [8, 8, 7, 10, 5] 0.7564386412743068\n",
-      "37 118.63499999999999 [3, 6, 8, 3, 7] 0.7529152638518579\n",
-      "38 118.52749999999999 [5, 3, 7, 9, 7] 0.7494094593476157\n",
-      "39 118.46999999999998 [0, 8, 6, 7, 0] 0.7459211401162845\n",
-      "40 117.15 [4, 5, 2, 6, 7] 0.7424502189497024\n",
-      "41 118.63000000000002 [7, 7, 7, 2, 10] 0.738996609074659\n",
-      "42 118.98499999999999 [7, 5, 7, 7, 10] 0.7355602241507279\n",
-      "43 120.93999999999998 [7, 8, 7, 8, 0] 0.7321409782681068\n",
-      "44 120.75500000000002 [7, 1, 7, 0, 1] 0.7287387859454705\n",
-      "45 118.80750000000003 [6, 2, 0, 4, 3] 0.725353562127834\n",
-      "46 119.86500000000004 [5, 7, 7, 1, 8] 0.7219852221844253\n",
-      "47 118.33000000000001 [0, 3, 3, 8, 8] 0.7186336819065705\n",
-      "48 117.71250000000002 [0, 1, 9, 7, 4] 0.715298857505588\n",
-      "49 118.21000000000001 [7, 7, 5, 0, 6] 0.7119806656106942\n",
-      "50 119.21000000000001 [7, 9, 7, 7, 10] 0.7086790232669189\n",
-      "51 118.80750000000003 [10, 4, 8, 6, 5] 0.7053938479330314\n",
-      "52 119.29250000000002 [6, 7, 7, 7, 1] 0.7021250574794774\n",
-      "53 119.1 [10, 4, 1, 7, 7] 0.6988725701863252\n",
-      "54 119.55250000000001 [6, 8, 7, 4, 8] 0.6956363047412232\n",
-      "55 120.40500000000002 [7, 1, 1, 3, 3] 0.6924161802373666\n",
-      "56 119.58500000000001 [4, 7, 10, 7, 7] 0.6892121161714753\n",
-      "57 120.5375 [7, 7, 7, 6, 8] 0.6860240324417806\n",
-      "58 121.59 [7, 7, 9, 7, 7] 0.682851849346023\n",
-      "59 122.55500000000002 [7, 4, 7, 5, 7] 0.6796954875794602\n",
-      "60 123.05500000000002 [3, 8, 6, 5, 7] 0.6765548682328837\n",
-      "61 121.92500000000003 [7, 4, 0, 9, 2] 0.6734299127906459\n",
-      "62 121.845 [10, 8, 0, 5, 4] 0.6703205431286983\n",
-      "63 120.97 [9, 0, 7, 3, 0] 0.6672266815126373\n",
-      "64 121.76250000000002 [6, 7, 7, 7, 8] 0.6641482505957614\n",
-      "65 123.05250000000001 [10, 7, 0, 7, 4] 0.6610851734171372\n",
-      "66 121.57250000000002 [1, 9, 0, 8, 2] 0.6580373733996759\n",
-      "67 123.285 [7, 3, 8, 1, 8] 0.6550047743482182\n",
-      "68 123.51000000000002 [1, 5, 0, 3, 9] 0.65198730044763\n",
-      "69 122.1025 [4, 2, 5, 9, 7] 0.6489848762609065\n",
-      "70 121.2825 [3, 7, 7, 6, 8] 0.6459974267272867\n",
-      "71 121.00750000000001 [7, 4, 7, 1, 6] 0.6430248771603764\n",
-      "72 120.58 [4, 7, 7, 0, 7] 0.640067153246282\n",
-      "73 120.98500000000001 [7, 5, 5, 7, 4] 0.6371241810417515\n",
-      "74 119.91750000000002 [4, 9, 0, 7, 3] 0.6341958869723264\n",
-      "75 121.28000000000002 [7, 7, 4, 2, 7] 0.6312821978305024\n",
-      "76 121.89500000000002 [7, 9, 9, 4, 2] 0.6283830407738995\n",
-      "77 121.89500000000001 [7, 7, 6, 2, 7] 0.62549834332344\n",
-      "78 121.89500000000001 [7, 10, 7, 7, 4] 0.6226280333615375\n",
-      "79 122.51000000000002 [10, 6, 7, 3, 0] 0.6197720391302934\n",
-      "80 123.60499999999999 [9, 7, 7, 8, 7] 0.6169302892297033\n",
-      "81 124.73500000000001 [7, 7, 6, 7, 8] 0.6141027126158716\n",
-      "82 125.11749999999999 [7, 7, 7, 7, 7] 0.6112892385992355\n",
-      "83 125.15500000000002 [3, 7, 9, 0, 3] 0.6084897968427982\n",
-      "84 123.7125 [3, 2, 7, 0, 7] 0.6057043173603702\n",
-      "85 124.09500000000003 [7, 8, 9, 6, 7] 0.6029327305148191\n",
-      "86 125.58250000000001 [7, 9, 2, 4, 8] 0.6001749670163294\n",
-      "87 126.225 [7, 7, 10, 7, 7] 0.5974309579206702\n",
-      "88 126.96 [0, 7, 5, 4, 3] 0.5947006346274709\n",
-      "89 128.385 [7, 7, 5, 4, 7] 0.5919839288785074\n",
-      "90 128.32999999999998 [9, 0, 7, 7, 7] 0.589280772755994\n",
-      "91 128.27249999999998 [7, 7, 1, 7, 7] 0.5865910986808871\n",
-      "92 128.88750000000002 [7, 7, 10, 0, 7] 0.5839148394111947\n",
-      "93 128.7375 [7, 4, 7, 5, 3] 0.5812519280402957\n",
-      "94 129.48000000000005 [7, 7, 1, 7, 9] 0.5786022979952672\n",
-      "95 129.8325 [8, 7, 8, 3, 7] 0.5759658830352198\n",
-      "96 130.10750000000002 [10, 7, 7, 7, 7] 0.5733426172496424\n",
-      "97 129.07999999999998 [2, 7, 7, 2, 0] 0.5707324350567538\n",
-      "98 128.54500000000002 [7, 6, 2, 7, 9] 0.5681352712018629\n",
-      "99 128.6775 [9, 7, 7, 5, 7] 0.5655510607557385\n",
-      "100 128.6775 [9, 10, 9, 7, 4] 0.5629797391129845\n",
-      "101 128.24 [8, 3, 7, 5, 5] 0.5604212419904261\n",
-      "102 128.51500000000001 [10, 7, 7, 5, 7] 0.5578755054255019\n",
-      "103 129.35250000000002 [7, 7, 7, 5, 7] 0.5553424657746653\n",
-      "104 128.7525 [0, 2, 7, 7, 8] 0.5528220597117929\n",
-      "105 128.7525 [7, 7, 9, 7, 4] 0.5503142242266019\n",
-      "106 129.15500000000003 [7, 7, 7, 10, 5] 0.5478188966230747\n",
-      "107 128.49500000000003 [7, 3, 7, 0, 3] 0.5453360145178912\n",
-      "108 129.825 [10, 7, 2, 7, 9] 0.5428655158388694\n",
-      "109 129.845 [7, 7, 7, 7, 7] 0.5404073388234136\n",
-      "110 128.8825 [2, 2, 7, 3, 1] 0.5379614220169706\n",
-      "111 127.94500000000001 [7, 2, 0, 4, 8] 0.5355277042714927\n",
-      "112 126.91750000000002 [7, 3, 2, 3, 2] 0.5331061247439095\n",
-      "113 126.85500000000002 [7, 6, 2, 3, 1] 0.5306966228946065\n",
-      "114 125.91750000000002 [7, 2, 0, 2, 3] 0.5282991384859124\n",
-      "115 123.26750000000001 [1, 2, 2, 2, 9] 0.5259136115805917\n",
-      "116 121.86499999999998 [7, 1, 4, 5, 2] 0.5235399825403478\n",
-      "117 121.4675 [4, 2, 7, 2, 2] 0.521178192024331\n",
-      "118 120.44999999999997 [7, 0, 2, 7, 4] 0.5188281809876554\n",
-      "119 117.8975 [1, 3, 2, 2, 1] 0.5164898906799226\n",
-      "120 117.60249999999999 [7, 8, 5, 2, 7] 0.514163262643753\n",
-      "121 116.40500000000002 [1, 8, 2, 9, 2] 0.5118482387133249\n",
-      "122 113.68500000000002 [1, 2, 2, 8, 1] 0.5095447610129191\n",
-      "123 112.87500000000003 [7, 2, 9, 2, 2] 0.5072527719554734\n",
-      "124 112.88250000000001 [2, 2, 2, 4, 2] 0.5049722142411417\n",
-      "125 110.6425 [2, 2, 2, 10, 2] 0.5027030308558627\n",
-      "126 108.40249999999999 [2, 2, 2, 3, 6] 0.5004451650699333\n",
-      "127 108.03500000000001 [2, 7, 6, 2, 2] 0.4981985604365912\n",
-      "128 106.4775 [2, 7, 0, 8, 10] 0.49596316079060393\n",
-      "129 104.10500000000002 [3, 0, 2, 2, 6] 0.4937389102468636\n",
-      "130 104.575 [5, 2, 4, 2, 2] 0.49152575319899094\n",
-      "131 103.86500000000001 [2, 0, 10, 2, 2] 0.4893236343179443\n",
-      "132 103.48000000000002 [2, 7, 2, 6, 6] 0.4871324985506371\n",
-      "133 101.605 [2, 1, 2, 2, 4] 0.48495229111856103\n",
-      "134 101.04 [3, 2, 2, 2, 2] 0.48278295751641676\n",
-      "135 100.83500000000001 [0, 2, 2, 2, 2] 0.48062444351075106\n",
-      "136 99.3125 [0, 2, 2, 2, 2] 0.4784766951386017\n",
-      "137 99.75750000000001 [7, 1, 8, 2, 3] 0.4763396587061472\n",
-      "138 100.09750000000001 [7, 2, 2, 7, 10] 0.4742132807873656\n",
-      "139 101.1625 [7, 2, 2, 4, 9] 0.4720975082226981\n",
-      "140 99.97 [7, 2, 2, 2, 7] 0.4699922881177204\n",
-      "141 101.07 [7, 6, 2, 2, 2] 0.4678975678418203\n",
-      "142 102.3025 [7, 2, 2, 2, 2] 0.4658132950268818\n",
-      "143 101.64500000000001 [7, 2, 0, 8, 2] 0.4637394175659759\n",
-      "144 103.75750000000001 [9, 8, 2, 2, 2] 0.4616758836120581\n",
-      "145 105.9775 [7, 8, 5, 9, 2] 0.45962264157667204\n",
-      "146 107.40750000000003 [7, 2, 8, 2, 2] 0.45757964012866\n",
-      "147 107.60499999999999 [7, 2, 5, 2, 2] 0.4555468281928792\n",
-      "148 108.07749999999999 [7, 2, 2, 2, 2] 0.4535241549489255\n",
-      "149 109.2375 [7, 2, 2, 2, 3] 0.45151156982986246\n",
-      "150 109.30750000000003 [7, 0, 4, 2, 5] 0.44950902252095726\n",
-      "151 111.465 [7, 9, 5, 2, 2] 0.44751646295842284\n",
-      "152 112.49249999999999 [7, 10, 2, 6, 0] 0.44553384132816637\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "153 112.93999999999998 [5, 0, 2, 2, 0] 0.44356110806454385\n",
-      "154 114.56999999999998 [7, 7, 2, 2, 9] 0.4415982138491209\n",
-      "155 116.8175 [7, 7, 2, 2, 3] 0.43964510960944\n",
-      "156 119.4675 [7, 9, 9, 7, 0] 0.4377017465177933\n",
-      "157 120.045 [7, 7, 2, 2, 9] 0.43576807599000245\n",
-      "158 120.43749999999997 [3, 7, 7, 5, 0] 0.43384404968420337\n",
-      "159 121.65 [7, 7, 10, 7, 8] 0.4319296194996383\n",
-      "160 122.20250000000001 [7, 3, 7, 0, 0] 0.43002473757545295\n",
-      "161 122.7375 [7, 7, 7, 4, 4] 0.42812935628949994\n",
-      "162 123.95 [7, 7, 7, 5, 0] 0.42624342825714845\n",
-      "163 124.57000000000002 [6, 3, 7, 5, 1] 0.4243669063300994\n",
-      "164 123.26000000000002 [0, 7, 7, 7, 2] 0.4224997435952068\n",
-      "165 122.70250000000001 [7, 5, 3, 7, 6] 0.42064189337330526\n",
-      "166 122.3625 [7, 0, 7, 7, 0] 0.41879330921804225\n",
-      "167 121.7625 [2, 7, 2, 7, 0] 0.41695394491471777\n",
-      "168 122.975 [7, 7, 7, 6, 0] 0.41512375447912825\n",
-      "169 122.14500000000001 [1, 2, 7, 6, 5] 0.4133026921564177\n",
-      "170 123.4425 [7, 7, 7, 7, 5] 0.411490712419933\n",
-      "171 123.4625 [7, 7, 7, 7, 3] 0.4096877699700865\n",
-      "172 123.39250000000001 [7, 4, 7, 7, 6] 0.407893819733223\n",
-      "173 125.20750000000002 [7, 7, 4, 7, 5] 0.4061088168604931\n",
-      "174 122.87250000000002 [0, 3, 0, 7, 10] 0.4043327167267321\n",
-      "175 123.27500000000002 [7, 7, 7, 10, 5] 0.40256547492934414\n",
-      "176 123.275 [7, 7, 7, 3, 4] 0.40080704728719224\n",
-      "177 122.84 [3, 7, 7, 0, 7] 0.3990573898394937\n",
-      "178 122.42749999999998 [1, 7, 7, 7, 2] 0.39731645884472117\n",
-      "179 121.785 [7, 3, 7, 7, 6] 0.3955842107795092\n",
-      "180 121.57000000000001 [10, 0, 7, 7, 9] 0.393860602337566\n",
-      "181 120.3375 [1, 7, 7, 7, 10] 0.39214559042859054\n",
-      "182 120.3375 [7, 7, 7, 7, 7] 0.39043913217719595\n",
-      "183 121.39000000000001 [8, 7, 7, 2, 7] 0.388741184921837\n",
-      "184 122.82749999999999 [7, 7, 7, 7, 6] 0.3870517062137439\n",
-      "185 123.405 [7, 7, 10, 1, 3] 0.3853706538158609\n",
-      "186 123.40500000000002 [7, 0, 7, 7, 0] 0.3836979857017906\n",
-      "187 123.07250000000002 [1, 7, 1, 1, 10] 0.38203366005474293\n",
-      "188 122.6625 [5, 9, 7, 5, 10] 0.38037763526649004\n",
-      "189 123.19750000000002 [1, 7, 3, 4, 7] 0.378729869936326\n",
-      "190 123.19750000000002 [7, 7, 7, 7, 7] 0.37709032287003175\n",
-      "191 123.47250000000001 [9, 8, 7, 7, 2] 0.37545895307884525\n",
-      "192 123.94500000000001 [7, 7, 7, 8, 8] 0.37383571977843666\n",
-      "193 124.0925 [7, 7, 7, 7, 2] 0.37222058238788897\n",
-      "194 124.6525 [2, 0, 7, 9, 2] 0.37061350052868336\n",
-      "195 124.65249999999999 [7, 8, 7, 7, 2] 0.3690144340236896\n",
-      "196 123.215 [0, 7, 7, 2, 7] 0.3674233428961618\n",
-      "197 123.8475 [6, 7, 7, 7, 7] 0.36584018736873886\n",
-      "198 125.06250000000003 [7, 7, 7, 0, 9] 0.3642649278624501\n",
-      "199 125.98000000000002 [10, 7, 7, 7, 4] 0.36269752499572594\n",
-      "Complete\n"
-     ]
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/plain": [
-       "<Figure size 1000x800 with 0 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/plain": [
-       "<Figure size 1000x800 with 0 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "if torch.cuda.is_available():\n",
-    "    num_episodes = 600\n",
-    "else:\n",
-    "    num_episodes = 200\n",
-    "rnd = 0\n",
-    "period_reward_history = []\n",
-    "for period in range(num_episodes):\n",
-    "    state, info = env.reset(rnd)\n",
-    "    state = torch.tensor(state, dtype=torch.float32, device=device).unsqueeze(0)\n",
-    "    period_reward = np.array([0.0])\n",
-    "    actions_taken = []\n",
-    "    for timestep in count():\n",
-    "        action = select_action(state)\n",
-    "        actions_taken.append(action.item())\n",
-    "        observation, reward, terminated, truncated, _ = env.step(action.item(), timestep, period, rnd)\n",
-    "        period_reward += reward\n",
-    "        reward = torch.tensor([reward], device=device)\n",
-    "        done = terminated or truncated\n",
-    "        if terminated:\n",
-    "            next_state = None\n",
-    "        else:\n",
-    "            next_state = torch.tensor(observation, dtype=torch.float32, device=device).unsqueeze(0)\n",
-    "        memory.push(state, action, next_state, reward)\n",
-    "        state = next_state\n",
-    "        optimize_model()\n",
-    "        target_net_state_dict = target_net.state_dict()\n",
-    "        policy_net_state_dict = policy_net.state_dict()\n",
-    "        for key in policy_net_state_dict:\n",
-    "            target_net_state_dict[key] = policy_net_state_dict[key]*TAU + target_net_state_dict[key]*(1-TAU)\n",
-    "        target_net.load_state_dict(target_net_state_dict)\n",
-    "        if done:\n",
-    "            eps = EPS_END + (EPS_START - EPS_END) * math.exp(-1. * steps_done / EPS_DECAY)\n",
-    "            #episode_durations.append(t + 1)\n",
-    "            #plot_durations()\n",
-    "            break\n",
-    "    period_reward_history.append(period_reward.item())\n",
-    "    print(period, np.mean(period_reward_history[-20:]), actions_taken, eps)\n",
-    "print('Complete')\n",
-    "plot_durations(show_result=True)\n",
-    "plt.ioff()\n",
-    "plt.show()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 173,
-   "id": "39985728",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "env.db.step_data = env.db.step_data.drop_duplicates(subset=['rnd','period','step'], keep='last')"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 263,
-   "id": "9a979c2c",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[50.2]</td>\n",
-       "      <td>[29.3, 36.8, 52.0, 66.9, 22.8]</td>\n",
-       "      <td>50.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.8</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>36.50</td>\n",
-       "      <td>1</td>\n",
-       "      <td>54.80</td>\n",
-       "      <td>13.70</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[55.0]</td>\n",
-       "      <td>[29.3, 36.8, 52.0, 66.9, 30.4]</td>\n",
-       "      <td>55.0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>29.3</td>\n",
-       "      <td>0</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>42.15</td>\n",
-       "      <td>1</td>\n",
-       "      <td>33.15</td>\n",
-       "      <td>12.85</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[31.2]</td>\n",
-       "      <td>[33.8, 36.8, 52.0, 66.9, 30.4]</td>\n",
-       "      <td>31.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>30.4</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>30.80</td>\n",
-       "      <td>1</td>\n",
-       "      <td>25.90</td>\n",
-       "      <td>0.40</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[31.4]</td>\n",
-       "      <td>[33.8, 36.8, 52.0, 66.9, 44.8]</td>\n",
-       "      <td>31.4</td>\n",
-       "      <td>0</td>\n",
-       "      <td>33.8</td>\n",
-       "      <td>0</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>33.80</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0.70</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[32.8]</td>\n",
-       "      <td>[61.8, 36.8, 52.0, 66.9, 44.8]</td>\n",
-       "      <td>32.8</td>\n",
-       "      <td>0</td>\n",
-       "      <td>36.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>5</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[66.6]</td>\n",
-       "      <td>[29.3, 36.8, 52.0, 66.9, 22.8]</td>\n",
-       "      <td>66.6</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.8</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>44.70</td>\n",
-       "      <td>1</td>\n",
-       "      <td>46.60</td>\n",
-       "      <td>21.90</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>6</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[48.2]</td>\n",
-       "      <td>[29.3, 36.8, 52.0, 66.9, 30.4]</td>\n",
-       "      <td>48.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>29.3</td>\n",
-       "      <td>0</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>38.75</td>\n",
-       "      <td>1</td>\n",
-       "      <td>36.55</td>\n",
-       "      <td>9.45</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>7</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[21.0]</td>\n",
-       "      <td>[33.8, 36.8, 52.0, 66.9, 30.4]</td>\n",
-       "      <td>21.0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>30.4</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>30.40</td>\n",
-       "      <td>1</td>\n",
-       "      <td>26.30</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[3.4]</td>\n",
-       "      <td>[33.8, 36.8, 52.0, 66.9, 44.8]</td>\n",
-       "      <td>3.4</td>\n",
-       "      <td>0</td>\n",
-       "      <td>33.8</td>\n",
-       "      <td>0</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>33.80</td>\n",
-       "      <td>1</td>\n",
-       "      <td>0.70</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>9</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[12.1]</td>\n",
-       "      <td>[61.8, 36.8, 52.0, 66.9, 44.8]</td>\n",
-       "      <td>12.1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>36.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "   rnd  period  step    bids                            asks  current_bid  \\\n",
-       "0    0       0     0  [50.2]  [29.3, 36.8, 52.0, 66.9, 22.8]         50.2   \n",
-       "1    0       0     1  [55.0]  [29.3, 36.8, 52.0, 66.9, 30.4]         55.0   \n",
-       "2    0       0     2  [31.2]  [33.8, 36.8, 52.0, 66.9, 30.4]         31.2   \n",
-       "3    0       0     3  [31.4]  [33.8, 36.8, 52.0, 66.9, 44.8]         31.4   \n",
-       "4    0       0     4  [32.8]  [61.8, 36.8, 52.0, 66.9, 44.8]         32.8   \n",
-       "5    0       1     0  [66.6]  [29.3, 36.8, 52.0, 66.9, 22.8]         66.6   \n",
-       "6    0       1     1  [48.2]  [29.3, 36.8, 52.0, 66.9, 30.4]         48.2   \n",
-       "7    0       1     2  [21.0]  [33.8, 36.8, 52.0, 66.9, 30.4]         21.0   \n",
-       "8    0       1     3   [3.4]  [33.8, 36.8, 52.0, 66.9, 44.8]          3.4   \n",
-       "9    0       1     4  [12.1]  [61.8, 36.8, 52.0, 66.9, 44.8]         12.1   \n",
-       "\n",
-       "   current_bid_idx  current_ask  current_ask_idx    buy   sell  price  sale  \\\n",
-       "0                0         22.8                4   True   True  36.50     1   \n",
-       "1                0         29.3                0   True   True  42.15     1   \n",
-       "2                0         30.4                4   True   True  30.80     1   \n",
-       "3                0         33.8                0   True  False  33.80     1   \n",
-       "4                0         36.8                1  False  False    NaN     0   \n",
-       "5                0         22.8                4   True   True  44.70     1   \n",
-       "6                0         29.3                0   True   True  38.75     1   \n",
-       "7                0         30.4                4   True  False  30.40     1   \n",
-       "8                0         33.8                0   True  False  33.80     1   \n",
-       "9                0         36.8                1  False  False    NaN     0   \n",
-       "\n",
-       "   bprofit  sprofit  \n",
-       "0    54.80    13.70  \n",
-       "1    33.15    12.85  \n",
-       "2    25.90     0.40  \n",
-       "3     0.70     0.00  \n",
-       "4     0.00     0.00  \n",
-       "5    46.60    21.90  \n",
-       "6    36.55     9.45  \n",
-       "7    26.30     0.00  \n",
-       "8     0.70     0.00  \n",
-       "9     0.00     0.00  "
-      ]
-     },
-     "execution_count": 263,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.head(10)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 124,
-   "id": "1985b17e",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>demand_schedule</th>\n",
-       "      <th>supply_schedule</th>\n",
-       "      <th>P_grid</th>\n",
-       "      <th>redemption_values</th>\n",
-       "      <th>token_costs</th>\n",
-       "      <th>p_eqbm</th>\n",
-       "      <th>q_eqbm</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>[10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1...</td>\n",
-       "      <td>[1, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 5, 5, 6, 6, ...</td>\n",
-       "      <td>[12.3, 13.054545454545455, 13.80909090909091, ...</td>\n",
-       "      <td>[[87.0, 76.7, 70.5, 66.3, 55.5, 50.3, 42.1, 40...</td>\n",
-       "      <td>[[40.9, 54.0, 55.2, 57.8, 58.7, 61.9, 62.8, 73...</td>\n",
-       "      <td>26.636364</td>\n",
-       "      <td>9</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "   rnd                                    demand_schedule  \\\n",
-       "0    0  [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1...   \n",
-       "\n",
-       "                                     supply_schedule  \\\n",
-       "0  [1, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 5, 5, 6, 6, ...   \n",
-       "\n",
-       "                                              P_grid  \\\n",
-       "0  [12.3, 13.054545454545455, 13.80909090909091, ...   \n",
-       "\n",
-       "                                   redemption_values  \\\n",
-       "0  [[87.0, 76.7, 70.5, 66.3, 55.5, 50.3, 42.1, 40...   \n",
-       "\n",
-       "                                         token_costs     p_eqbm  q_eqbm  \n",
-       "0  [[40.9, 54.0, 55.2, 57.8, 58.7, 61.9, 62.8, 73...  26.636364       9  "
-      ]
-     },
-     "execution_count": 124,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.get_round(rnd)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 241,
-   "id": "a09d4970",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>[77.1]</td>\n",
-       "      <td>[22.3, 17.5, 22.4, 19.2, 30.9]</td>\n",
-       "      <td>77.1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>17.5</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>47.30</td>\n",
-       "      <td>46.70</td>\n",
-       "      <td>29.80</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>1</td>\n",
-       "      <td>[17.6]</td>\n",
-       "      <td>[22.3, 22.9, 22.4, 19.2, 30.9]</td>\n",
-       "      <td>17.6</td>\n",
-       "      <td>0</td>\n",
-       "      <td>19.2</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>19.20</td>\n",
-       "      <td>73.30</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>2</td>\n",
-       "      <td>[6.9]</td>\n",
-       "      <td>[22.3, 22.9, 22.4, 26.6, 30.9]</td>\n",
-       "      <td>6.9</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.3</td>\n",
-       "      <td>0</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>22.30</td>\n",
-       "      <td>46.30</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>3</td>\n",
-       "      <td>[61.0]</td>\n",
-       "      <td>[31.2, 22.9, 22.4, 26.6, 30.9]</td>\n",
-       "      <td>61.0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.4</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>41.70</td>\n",
-       "      <td>25.30</td>\n",
-       "      <td>19.30</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>4</td>\n",
-       "      <td>[42.2]</td>\n",
-       "      <td>[31.2, 22.9, 25.7, 26.6, 30.9]</td>\n",
-       "      <td>42.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.9</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>32.55</td>\n",
-       "      <td>33.35</td>\n",
-       "      <td>9.65</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>5</th>\n",
-       "      <td>5</td>\n",
-       "      <td>[42.2]</td>\n",
-       "      <td>[31.2, 48.3, 25.7, 26.6, 30.9]</td>\n",
-       "      <td>42.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>25.7</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>33.95</td>\n",
-       "      <td>17.55</td>\n",
-       "      <td>8.25</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>6</th>\n",
-       "      <td>6</td>\n",
-       "      <td>[42.1]</td>\n",
-       "      <td>[31.2, 48.3, 30.0, 26.6, 30.9]</td>\n",
-       "      <td>42.1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>26.6</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>34.35</td>\n",
-       "      <td>16.95</td>\n",
-       "      <td>7.75</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>7</th>\n",
-       "      <td>7</td>\n",
-       "      <td>[14.9]</td>\n",
-       "      <td>[31.2, 48.3, 30.0, 38.7, 30.9]</td>\n",
-       "      <td>14.9</td>\n",
-       "      <td>0</td>\n",
-       "      <td>30.0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>30.00</td>\n",
-       "      <td>10.30</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8</th>\n",
-       "      <td>8</td>\n",
-       "      <td>[35.2]</td>\n",
-       "      <td>[31.2, 48.3, 41.0, 38.7, 30.9]</td>\n",
-       "      <td>35.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>30.9</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>33.05</td>\n",
-       "      <td>5.65</td>\n",
-       "      <td>2.15</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>9</th>\n",
-       "      <td>9</td>\n",
-       "      <td>[28.9]</td>\n",
-       "      <td>[31.2, 48.3, 41.0, 38.7, 36.9]</td>\n",
-       "      <td>28.9</td>\n",
-       "      <td>0</td>\n",
-       "      <td>31.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>31.20</td>\n",
-       "      <td>0.60</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "   step    bids                            asks  current_bid  current_bid_idx  \\\n",
-       "0     0  [77.1]  [22.3, 17.5, 22.4, 19.2, 30.9]         77.1                0   \n",
-       "1     1  [17.6]  [22.3, 22.9, 22.4, 19.2, 30.9]         17.6                0   \n",
-       "2     2   [6.9]  [22.3, 22.9, 22.4, 26.6, 30.9]          6.9                0   \n",
-       "3     3  [61.0]  [31.2, 22.9, 22.4, 26.6, 30.9]         61.0                0   \n",
-       "4     4  [42.2]  [31.2, 22.9, 25.7, 26.6, 30.9]         42.2                0   \n",
-       "5     5  [42.2]  [31.2, 48.3, 25.7, 26.6, 30.9]         42.2                0   \n",
-       "6     6  [42.1]  [31.2, 48.3, 30.0, 26.6, 30.9]         42.1                0   \n",
-       "7     7  [14.9]  [31.2, 48.3, 30.0, 38.7, 30.9]         14.9                0   \n",
-       "8     8  [35.2]  [31.2, 48.3, 41.0, 38.7, 30.9]         35.2                0   \n",
-       "9     9  [28.9]  [31.2, 48.3, 41.0, 38.7, 36.9]         28.9                0   \n",
-       "\n",
-       "   current_ask  current_ask_idx   buy   sell  price  bprofit  sprofit  \n",
-       "0         17.5                1  True   True  47.30    46.70    29.80  \n",
-       "1         19.2                3  True  False  19.20    73.30     0.00  \n",
-       "2         22.3                0  True  False  22.30    46.30     0.00  \n",
-       "3         22.4                2  True   True  41.70    25.30    19.30  \n",
-       "4         22.9                1  True   True  32.55    33.35     9.65  \n",
-       "5         25.7                2  True   True  33.95    17.55     8.25  \n",
-       "6         26.6                3  True   True  34.35    16.95     7.75  \n",
-       "7         30.0                2  True  False  30.00    10.30     0.00  \n",
-       "8         30.9                4  True   True  33.05     5.65     2.15  \n",
-       "9         31.2                0  True  False  31.20     0.60     0.00  "
-      ]
-     },
-     "execution_count": 241,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "db.get_period(rnd, 0)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 243,
-   "id": "9b83cc07",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>1990</th>\n",
-       "      <td>0</td>\n",
-       "      <td>[77.1]</td>\n",
-       "      <td>[22.3, 17.5, 22.4, 19.2, 30.9]</td>\n",
-       "      <td>77.1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>17.5</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>47.30</td>\n",
-       "      <td>46.70</td>\n",
-       "      <td>29.80</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1991</th>\n",
-       "      <td>1</td>\n",
-       "      <td>[34.2]</td>\n",
-       "      <td>[22.3, 22.9, 22.4, 19.2, 30.9]</td>\n",
-       "      <td>34.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>19.2</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>26.70</td>\n",
-       "      <td>65.80</td>\n",
-       "      <td>7.50</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1992</th>\n",
-       "      <td>2</td>\n",
-       "      <td>[37.7]</td>\n",
-       "      <td>[22.3, 22.9, 22.4, 26.6, 30.9]</td>\n",
-       "      <td>37.7</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.3</td>\n",
-       "      <td>0</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>30.00</td>\n",
-       "      <td>38.60</td>\n",
-       "      <td>7.70</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1993</th>\n",
-       "      <td>3</td>\n",
-       "      <td>[36.8]</td>\n",
-       "      <td>[31.2, 22.9, 22.4, 26.6, 30.9]</td>\n",
-       "      <td>36.8</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.4</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>29.60</td>\n",
-       "      <td>37.40</td>\n",
-       "      <td>7.20</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1994</th>\n",
-       "      <td>4</td>\n",
-       "      <td>[36.2]</td>\n",
-       "      <td>[31.2, 22.9, 25.7, 26.6, 30.9]</td>\n",
-       "      <td>36.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>22.9</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>29.55</td>\n",
-       "      <td>36.35</td>\n",
-       "      <td>6.65</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1995</th>\n",
-       "      <td>5</td>\n",
-       "      <td>[28.3]</td>\n",
-       "      <td>[31.2, 48.3, 25.7, 26.6, 30.9]</td>\n",
-       "      <td>28.3</td>\n",
-       "      <td>0</td>\n",
-       "      <td>25.7</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>27.00</td>\n",
-       "      <td>24.50</td>\n",
-       "      <td>1.30</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1996</th>\n",
-       "      <td>6</td>\n",
-       "      <td>[28.2]</td>\n",
-       "      <td>[31.2, 48.3, 30.0, 26.6, 30.9]</td>\n",
-       "      <td>28.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>26.6</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>27.40</td>\n",
-       "      <td>23.90</td>\n",
-       "      <td>0.80</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1997</th>\n",
-       "      <td>7</td>\n",
-       "      <td>[22.2]</td>\n",
-       "      <td>[31.2, 48.3, 30.0, 38.7, 30.9]</td>\n",
-       "      <td>22.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>30.0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>30.00</td>\n",
-       "      <td>10.30</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1998</th>\n",
-       "      <td>8</td>\n",
-       "      <td>[24.8]</td>\n",
-       "      <td>[31.2, 48.3, 41.0, 38.7, 30.9]</td>\n",
-       "      <td>24.8</td>\n",
-       "      <td>0</td>\n",
-       "      <td>30.9</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>30.90</td>\n",
-       "      <td>7.80</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1999</th>\n",
-       "      <td>9</td>\n",
-       "      <td>[26.1]</td>\n",
-       "      <td>[31.2, 48.3, 41.0, 38.7, 36.9]</td>\n",
-       "      <td>26.1</td>\n",
-       "      <td>0</td>\n",
-       "      <td>31.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>31.20</td>\n",
-       "      <td>0.60</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "      step    bids                            asks  current_bid  \\\n",
-       "1990     0  [77.1]  [22.3, 17.5, 22.4, 19.2, 30.9]         77.1   \n",
-       "1991     1  [34.2]  [22.3, 22.9, 22.4, 19.2, 30.9]         34.2   \n",
-       "1992     2  [37.7]  [22.3, 22.9, 22.4, 26.6, 30.9]         37.7   \n",
-       "1993     3  [36.8]  [31.2, 22.9, 22.4, 26.6, 30.9]         36.8   \n",
-       "1994     4  [36.2]  [31.2, 22.9, 25.7, 26.6, 30.9]         36.2   \n",
-       "1995     5  [28.3]  [31.2, 48.3, 25.7, 26.6, 30.9]         28.3   \n",
-       "1996     6  [28.2]  [31.2, 48.3, 30.0, 26.6, 30.9]         28.2   \n",
-       "1997     7  [22.2]  [31.2, 48.3, 30.0, 38.7, 30.9]         22.2   \n",
-       "1998     8  [24.8]  [31.2, 48.3, 41.0, 38.7, 30.9]         24.8   \n",
-       "1999     9  [26.1]  [31.2, 48.3, 41.0, 38.7, 36.9]         26.1   \n",
-       "\n",
-       "      current_bid_idx  current_ask  current_ask_idx   buy   sell  price  \\\n",
-       "1990                0         17.5                1  True   True  47.30   \n",
-       "1991                0         19.2                3  True   True  26.70   \n",
-       "1992                0         22.3                0  True   True  30.00   \n",
-       "1993                0         22.4                2  True   True  29.60   \n",
-       "1994                0         22.9                1  True   True  29.55   \n",
-       "1995                0         25.7                2  True   True  27.00   \n",
-       "1996                0         26.6                3  True   True  27.40   \n",
-       "1997                0         30.0                2  True  False  30.00   \n",
-       "1998                0         30.9                4  True  False  30.90   \n",
-       "1999                0         31.2                0  True  False  31.20   \n",
-       "\n",
-       "      bprofit  sprofit  \n",
-       "1990    46.70    29.80  \n",
-       "1991    65.80     7.50  \n",
-       "1992    38.60     7.70  \n",
-       "1993    37.40     7.20  \n",
-       "1994    36.35     6.65  \n",
-       "1995    24.50     1.30  \n",
-       "1996    23.90     0.80  \n",
-       "1997    10.30     0.00  \n",
-       "1998     7.80     0.00  \n",
-       "1999     0.60     0.00  "
-      ]
-     },
-     "execution_count": 243,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "db.get_period(rnd, 199)"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "0a56182c",
-   "metadata": {},
-   "source": [
-    "# Graph"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 264,
-   "id": "f958b2e9",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "def graph(demand_schedule, supply_schedule, P_grid, p_eqbm, q_eqbm, \n",
-    "                        period_bids, period_asks, period_prices, period_sales, \n",
-    "                        redemption_values, token_costs, ntokens, nbuyers, nsellers, nsteps):\n",
-    "    plt.plot(demand_schedule, P_grid, label = 'Demand Curve')\n",
-    "    plt.plot(supply_schedule, P_grid, label = 'Supply Curve')\n",
-    "    plt.plot(period_prices, color='green', linestyle='--', label='Mean Real Prices')\n",
-    "    plt.axhline(y=np.nanmean(p_eqbm), color='black', linestyle='--', label='Mean Eqbm Prices')\n",
-    "    prices = []\n",
-    "    for i in range(nsteps):\n",
-    "        if (period_prices[i] > 0):\n",
-    "            plt.scatter([period_sales[i]]*len(period_bids[i]), period_bids[i], s = 10, marker = 'x', c = 'red')\n",
-    "            plt.scatter([period_sales[i]]*len(period_asks[i]), period_asks[i], s = 10, marker = 'o', c = 'blue')\n",
-    "        else:\n",
-    "            pass  \n",
-    "    plt.legend()\n",
-    "    text_content = f'q*={q_eqbm}, mean(q)={np.round(np.nanmax(period_sales),1)},p*={np.round(p_eqbm,1)}, mean(p)={np.round(np.nanmean(period_prices),1)}'\n",
-    "    plt.title(text_content)\n",
-    "    plt.xlim(0,q_eqbm*1.2)\n",
-    "    plt.ylim(0,p_eqbm*3.0)\n",
-    "    plt.show()\n",
-    "    \n",
-    "    plt.plot(period_bids, c = 'r', linestyle='--')\n",
-    "    plt.plot(period_asks, c = 'b', linestyle='--')\n",
-    "    plt.scatter(range(nsteps), period_prices, c = 'g')\n",
-    "    plt.title('Bids (red), Asks (blue) and Prices (green) over trading steps')\n",
-    "    plt.show()\n",
-    "\n",
-    "def graph_period(db, rnd, period):\n",
-    "    period_bids = list(db.get_period(rnd, period).bids)\n",
-    "    period_asks = list(db.get_period(rnd, period).asks)\n",
-    "    period_prices = list(db.get_period(rnd, period).price)\n",
-    "    period_sales = np.cumsum(np.where(db.get_period(rnd, period).price > 0,1,0))\n",
-    "    [_, demand_schedule, supply_schedule, P_grid, redemption_values, token_costs, p_eqbm, q_eqbm] = db.get_round(rnd).iloc[0].tolist()\n",
-    "    graph(demand_schedule, supply_schedule, P_grid, p_eqbm, q_eqbm, period_bids, period_asks, period_prices, period_sales, redemption_values, token_costs, db.ntokens, db.nbuyers, db.nsellers, db.nsteps)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 265,
-   "id": "4f957991",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "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CxsiIiIiIgIACAEcPaqGEHJnUngsbIiIiIiICABw8KAWvXuXQadO8LnihoUNERERERFBCGDOnGAAQP36gCTJnFAhsbAhIiIiIiJ8/70Gx45poNUKvPyy3NkUHgsbIiIiIqJSTghg7lx7b82QIVmoUEHmhIqAhQ0RERERUSn3448a/PyzFhqNwLPPZsidTpGwsCEiIiIiKuX27NEBAAYPzkL58jaZsykaldwJEBERERGRvKZOTUOnTkbUrGmRO5UiY2FDRERERFTKSRJw330mxy1ZcykqDkUjIiIiIiqlLl5UIjnZNwuZW7GwISIiIiIqpSZODEOLFuWwd69W7lTuGIeiERERERGVQkePanDokBYqlcBdd/nutTUO7LEhIiIiIiqF5swJAgAMGJCFmBirzNncORY2RERERESlzLFjahw8qINKJTB2rG+uW3MrFjZERERERKXMvHnBAID+/bNQubLv99YALGyIiIiIiEqVX39V48ABHZRKgeee84/eGoCTBxARERERlSq//aaGSiXQr58BVar4R28NwMKGiIiIiKhUGTEiCx07ZkOlEnKnUqxY2BARERERlTL+cl1NToUubJKSkvD555/jt99+Q3Z2NqKjozF69GjUqFEDACCEwPr16/HNN98gMzMTdevWxZNPPony5csXe/JERERERFQwZ88qYbFIqFvX99escaVQkwdkZGRg0qRJUKlUeO211zB37lwMHToUgYGBzpitW7di9+7dGDlyJN5++21otVrMmDEDJpOp2JMnIiIiIqKCefvtEHTsWBbLlgXePtgHFaqw2bp1KyIjIzF69GjUrFkTZcuWRYMGDRAdHQ3A3luza9cu9OvXD82aNUOVKlUwZswYJCcn4+jRox75BYiIiIiIKH9//qnCnj16SJJA27bZcqfjEYUainbs2DE0aNAAc+bMwV9//YWIiAh07twZDzzwAAAgLi4OKSkpuOeee5zPCQgIQM2aNXH69Gm0bt26eLMnIiIiIqLbcqxb07u3ATVr+udQtEIVNnFxcdi3bx+6d++Ovn374ty5c1i+fDlUKhXat2+PlJQUAEBoaGiu54WGhjofu5XZbIbZbHbeliQJer3e+X+5OXLwhlz8EdvXs9i+nsX29Sy2r2exfT2L7etZbN/C+esvFXbvtvfWjBuXedt289X2LVRhY7PZUKNGDQwePBgAUK1aNfz777/Yt28f2rdvX6QENm/ejI0bNzpvV6tWDbNmzUJUVFSRtucpjuF25BlsX89i+3oW29ez2L6exfb1LLavZ7F9C2bsWPu/Dz8soV27gp9j+1r7FqqwCQ8PR6VKlXLdV6lSJRw5cgQAEBYWBgBITU1FeHi4MyY1NRVVq1Z1uc2+ffuiR48eztuOyjA+Ph4Wi/zdZJIkITo6GtevX4cQ/jXXtzdg+3oW29ez2L6exfb1LLavZ7F9PYvtW3D//KPCl1/ai5lRo+IRG3v782tval+VSlXgDo9CFTZ16tTBtWvXct137do154uVLVsWYWFh+OOPP5yFTFZWFs6ePYvOnTu73KZarYZarXb5mNwNmZMQwqvy8TdsX89i+3oW29ez2L6exfb1LLavZ7F9b+/ffxWIjLSiRQsT6tQxozDN5WvtW6jCpnv37pg0aRI2bdqEVq1a4ezZs/jmm2/w1FNPAbBXd926dcOmTZtQvnx5lC1bFmvXrkV4eDiaNWvmkV+AiIiIiIhc69QpG4cPxyE93beulymKQhU2NWvWxIsvvog1a9bgyy+/RNmyZTFs2DDcd999zpjevXsjOzsbS5YsQVZWFurWrYvXXnsNGo2m2JMnIiIiIqL8BQQIBAT4Ts9LURWqsAGAJk2aoEmTJm4flyQJAwcOxMCBA+8oMSIiIiIiKprz55X45x81unY1QlGolSt9Vyn5NYmIiIiISo+5c4MxcmQEpkwJkTuVEsPChoiIiIjIj5w7p8SWLfZ1Ifv3N8icTclhYUNERERE5EcWLAiGzSbhgQeMuOces9zplBgWNkREREREfuLCBSU2b7b31kyYkC5zNiWLhQ0RERERkZ9YsCAYVquEDh2MaNCg9PTWACxsiIiIiIj8wsWLSnz5pb23Zvz40tVbAxRhumciIiIiIvI+6ekK1KtnRkSEDY0bl67eGoCFDRERERGRX7j7bjN27UpAWpokdyqy4FA0IiIiIiI/IUlAaKiQOw1ZsLAhIiIiIvJhV64osWBBENLTS2dPjQMLGyIiIiIiH7ZwYRBmzQrB+PFhcqciKxY2REREREQ+6upVJdatCwAAjByZKXM28mJhQ0RERETkoz74IAhms4SWLbPRvLlJ7nRkxcKGiIiIiMgHXbumwNq19t6aCRNK37o1t2JhQ0RERETkgxYtCoLJJKFFi2y0alW6e2sAFjZERERERD7n+nUF1qwJBACMH8/eGoALdBIRERER+RyrFejWzYDr15Vo3Zq9NQALGyIiIiIin1Oxog0ffJACs9m+KCdxKBoRERERkc9Sq+XOwHuwsCEiIiIi8hFxcQq88EIozp9Xyp2K12FhQ0RERETkIxYvDsLatYEYPz5c7lS8DgsbIiIiIiIfkJCgwMqV9nVrnn+eM6HdioUNEREREZEPWLw4CEajAg0bmnD//dlyp+N1WNgQEREREXm5xEQFVqyw99aMH5/OmdBcYGFDREREROTlliwJhMGgwD33mNCxI3trXGFhQ0RERETkxZKSFFi+PBAAe2vywwU6iYiIiIi8mEYjMHp0Bg4f1qJTJ/bWuMPChoiIiIjIiwUFCYwfnwEhMthbkw8ORSMiIiIi8gEsavLHwoaIiIiIyAulpEh45JFIfPONFkLInY3341A0IiIiIiIv9MknQfj+ey0SEhS4//549tjcBntsiIiIiIi8TGqqhE8/tc+ENm5cOhQ8a78tNhERERERkZdZtiwQaWkK1KljRrduRrnT8QksbIiIiIiIvEhamoSlS4MAAM8/z96agmIzERERERF5kWXLApGaqkCtWmb06MHemoJiYUNERERE5CXS02/21owblwGlUuaEfAgLGyIiIiIiLxEYKDBzZgoefNCAnj0NcqfjUzjdMxERERGRl1AogF69jOjVi0PQCos9NkREREREXoCLcN4ZFjZERERERDLLypLQqVMUliwJRHa23Nn4JhY2REREREQyW7UqAH//rcaqVYGcMKCIWNgQEREREcnIYJDw0Uf2mdCeey4dKl4FXyQsbIiIiIiIZLRqVQASEpSoXNmCfv04E1pRsbAhIiIiIpJJ7t6aDKjVMifkw1jYEBERERHJ5PPPAxAfr0SlShY89FCW3On4NBY2REREREQyMJuBxYvtvTVjx2ZAo5E5IR/HwoaIiIiISAZqNbByZSKGDMnEgAHsrblTnHOBiIiIiEgm9etb8O67qXKn4RfYY0NEREREVMK4CGfxY2FDRERERFSCsrOB++8vi5dfDkVKiiR3On6DhQ0RERERUQlauzYAly6p8M03Ouj1Qu50/AYLGyIiIiKiEmIyAR98YJ8JbcyYdGi1MifkR1jYEBERERGVkPXrA3DtmgrlylkxaBBnQitOLGyIiIiIiEqAyQQsXGjvrRk9OgM6ncwJ+RkWNkREREREJWDjxgBcuaJC2bJWDBmSKXc6foeFDRERERGRhwkBLFsWCAB45pkM6PUyJ+SHuEAnEREREZGHSRKwfn0iVqwIwGOP8doaT2BhQ+QvrFZofvoJ+q1bIQICkDZ1qtwZERERUQ4RETZMmJAhdxp+i4UNkS8TAurjx6Hftg367duhjIsDANiCg5H26quQLBZgzhwEZ2QgbdIkmZMlIiIqnZKSFIiIsMmdht9jYUPkowI//RSBH38M1ZUrzvtsYWEwdO8OQ+/egFoN9dGjwPvvI1CpRNaAAbDUqSNjxkRERKWPxQL07FkG0dFWzJ2bgsqVrXKn5LdY2BD5COW5c7BWrAjH3JCKlBSorlyBLTAQxi5dYOjdG9lt2wIajfM5prZtgd69IW3ditDJk5H4xRf2Qb5ERERUIrZs0ePiRRXS0iRERrLXxpNY2BB5McXVq9Bv3w79li3Q/PEHkj7+GMbu3QEAWQMGwFy7NrIfeAAiv6lVZs+G2L0b2u+/h27PHhi7di2h7ImIiEo3qxWYPz8YAPD005kIDBQyZ+TfWNgQeRlFYiJ027dDv3UrtD//7LxfKJVQnT3rvG2NiYE1Jub2G6xRA5mjRiFowQKETJ0KY/v24IpgREREnrd1qx7nz6sQFmbD8OFct8bTWNgQeRHF9esod++9kKw3x99mt2gBQ+/eMHbvDltkZJG2mzF2LPTr10P1778IWrIEGc8/X1wpExERkQtWKzBvXhAA4OmnMxAUxN4aT2NhQyQTyWCAdt8+KK9eReYzzwAAbNHRMNerB0gSDL16wdCrF2wVKtzxa4nAQKS9/jrCx45F4PLlyHj6afbaEBERedCOHTqcO6dGWJgNI0awt6YksLAhKkkmE7Tffgv9tm3Q7dkDRVYWhFaLrCFDIEJCAACJGzdCBAYW+0sb+vaF8tIlZA0axKKGiIjIwzZvDgAAPPlkBoKD2VtTEljYEJUA9a+/ImD1auh37YIiNdV5v6VyZRh69YJkscBxyPNEUQMAkCRkjB/vmW0TERFRLp98koQtW/To3NkodyqlBgsbIk8Qwj64VmX/iGl+/hmBX3wBALCWKwdDjx4w9OkDc6NGsk2/rDl6FKbGjQGlUpbXJyIi8mcqFdC/v0HuNEoVFjZExUUIqE6ehH7bNui3bkX6hAkwDBwIADD06gXVuXMw9O4NU4sWshcToS+8gMC1a5Hy3nvIGjxY1lyIiIj8yaVLSkRHW6HVyp1J6cPChugOKc+dg37rVui3boU6x3TMuq++chY2tvLlkfruu3KlmIelbl0AQPA778DQvTtEaKjMGREREfk+mw144okIpKZK+PjjZDRqZJY7pVKFhQ1RUZlMKNOnDzS//+68S2i1MHbsaJ+euWNHGZPLX+bw4QhYvRrqM2cQPGcO0qZOlTslIiIin/fVVzr8/bcaQUE2VKtmkTudUkchdwJEvkKRkADd7t0379BoIAICIJRKGDt0QPK8ebj+++9IXroUxh49AL1evmRvR612FjOBK1ZAdeaMzAkRERH5NiGAuXODAQCPP56JsDDOhFbS2GNDlA8pNRW6r76CfssWaA8dAgDcOH4ctrJlAQCpM2fCFhkJW0SEnGkWSXa7djB07gz93r0ImTwZSatXyzaRARERka/bu1eHv/5SIzDQhpEjM+ROp1RiYUN0C8lggHbvXui3boXuwAFIJpPzMVPDhlDExTkLG0utWnKlWSzSJk+G7ttvofvuO2j37UN2585yp0RERORzhADmzAkCAIwYkYmICPbWyIGFDdEt9Js3I+yll5y3zXXqwNC7Nwy9e8Natap8iXmAtWpVZDz1FPSbNsk+UxsREZGv2rdPiz//1CAgwIann86UO51Si4UNlV5WKzQ//AD9tm0wNW0KwyOPAAAMDz6IwCVLYHzwQRh694blrrtkTtSzMsaNQ8a4cRDefE0QERGRF/vpJ/vczvbeGpvM2ZReLGyodBEC6mPH7NMz79gBZXw8AEB96pSzsBHh4Yj/7js5syxRLGiIiIjuzOTJaejZ04AqVaxyp1KqsbChUiP4vfeg37gRqitXnPfZwsJg6N4dhj595EvMW1itCFi7FqpTp5A2bZrc2RAREfmUxo25Zo3cWNiQ31JevgxrTIzzturvv6G6cgW2wEAYu3aFoXdvZLdtC6jVMmbpPVSnTiF04kRIQsDQsyfMzZrJnRIREZFXO3VKhbAwG8qV4/Azb8B1bMivKK9eRdCiRSjTpQvKtWgB5cWLzscyR41C0pIluP7770hZsADZHTuyqMnB8r//IWvgQABA6Jtv2pdPJiIiIpeEAF56KQwtW5bD7t06udMhsMeG/IAiPh66HTsQsGULNMeOOe8XKhU0v/0Gw38zmZnuvVemDH1H+iuvQL9zJzQnTiBg3TpkDRokd0pERERe6fvvtTh+XAOdTqBJE9Ptn0Aex8KGfJrmhx8Q+cgjkP7rXRCSBFOLFjD07g1j9+4+uXCmnGxRUUgfNw6h06cj+J13YOjeHSIkRO60iIiIvErOdWuGDMlE2bIc5eANWNiQz5CysqDdtw9QKmHs0QMAYG7cGEKvh7l2bRh69YKhZ0/YypeXOVPflvn44whYswbqc+cQPHcu0iZPljslIiIir3LokAZHj2qh1QqMHp0hdzr0HxY25N2ys6H97jvot26Fbs8eKAwGmOvUcRY2Qq9H3OHD7JkpThoN0qZOReSjjyJwxQpkjB4NW1SU3FkRERF5jXnzggEAgwdnIjqavTXegoUNeSXNTz9Bv3Ej9Lt3Q5Ga6rzfUqUKjJ07A2az88J/FjXFL/v++5E+ZgyMDz7IooaIiCiHH3/U4PBhLTQa9tZ4GxY25B0cM3BJEgAgYM0aBGzaBACwRkfD0LMnDL17w9ywoTOGPCv91VflToGIiMjrnD2rgk4nMHBgFipUYG+NN2FhQ/IRAqo//wTmzUPU6tVIWr4clnr1AABZAwZABATA0KePfTYzpVLmZEs35cWLsJYvD2i1cqdCREQkq6FDs9C1qxEKLpridVjYUIlTnj2LgK1bodu6Fepz5wDYd0T99u1I/6+wMd13H0z33SdjluQQuHgxQmbNQvqLLyLj2WflToeIiEh2nAXNO7GwoRKjvHIFEY8/DvXJk877hE4HqUcPJHfpAsP998uYHblji4yEZDIhaP58ZPXvD1u5cnKnREREVOJOnlTBaJTQpIlZ7lTIDXaikcco4uOhOXrUedtarhwU165BqFQwduiA5AULcOP334ENG2Ds3h3Q62XMltwxPPQQTI0aQZGZiZC335Y7HSIiIllMnx6KXr2isHRpoNypkBvssaFiJaWkQL97N/RbtkDz44+wRkcj7sgRQKEA1Gokf/opzLVqQfw3k5nEiQC8n0KB1LfeQlT37gjYuBGZQ4fC3KSJ3FkRERGVmKNH1fj+ey1UKoGuXY1yp0NusLChO+ZYOFO/ZQt0Bw5AMt/sorWVKwdFYqJzymBT8+ZypUl3wNywIbIGDkTAunUIffNNJGzfDl41SUREpYVj3ZqHH85CTIxV5mzIHRY2dMeCZ85E0LJlztvmu+6CoVcvGHr3hrVKFRkzo+KU9sor0O3cCc1vv0G/YQMMAwfKnRIREZHH/fKLGt9+q4NSKTB2LNet8WYsbAogMxPIypIgRN7HFAoBne7m7aws90OrJEnkuoykMLEGg+vXt8cCer0oYiwghPs8AgJyxGZYof7xMHQ7dyLr4YdhadwYAGDu1AfWfT9C0bczDH36wFKnDoxGwGaTgKzbb9dodN++gD1fx4i17GzAanWfb2FidTrh7HQwmQCLpXhitVrhnJ26MLFmM2A2u4/VaARUqsLHWiz5t69aLRxrncJiAUwmN9sNKgfVcy8gYu67kLKyYLUC2dnuc1CpBDQa+/8LE2uzAUZj8cQqlcI5Q7UQ9s9GccS6+ty7a99SdYwoRKzzGFHA2OL63PMYcTM25+c+v89ngY8Rt8SW9mNEQT/LPEa4jr3dMSIwx2Uut4u902PE++/be2v69DEgKsrmbHd/Pkb47OoOwkvFxcWJq1evyv5z7do1YT+Euf7p0MGQK16vt7qNbdnSmCs2IsLiNrZBg+xcsZUqmd3G1q5tyhVbu7bJbWylSuZcsQ0aZLuNjYiwiKuXL4v4LVtExvDhoq3qkNtYvd6aa7sdOhjybbec7du/v/s4QIgzZ6454x9+ODPf2BMnYp2xw4Zl5Bt7+PB1Z+yoUen5xu7ff8MZO2FCWr6xO3fe3HffeCMl39gNG+KdsTNmJOcbu3JlgjN2zpykfGMXL050tu/69fm375w5Sc7trlyZkG/sjKkJIvboUXH16lWxYUN8vrFvvJHi3O7OnXH5xk6YkOaM3b//Rr6xo0alO2MPH76eb+ywYRnO2BMnYvONffjhTGfsmTP5f+67d89ytq8Q+bev3x8jcsS2bGl0G1uUY4SjfXv0yMo3lscI+09hjxGO9l2yJP/YQh0jZiQ7Y0v7McLRvqX+PMJDx4ic7du9O48RxX2MWLIkydm+Od8XOX7i4uIKXD+wx4bckrKyULZ5c6iuXbPfxjCZMyLZqZSwVaggdxZEREREeUj2bxu9T3x8PMxm+ecJlyQJISHlcf36dbhqKn/qQlYkJcH232xlsNkQ1b49QmPPwhYUBGPXrkjq9hCMLVrBOc7gFkUZZiJJEsLDy+PqVdftC3CYiUNRhqJJkoSoqPK4dMl9+xZ1mIny0E/A7gNIf/11l7H+PsxEp7O3b/ny5XHunPv29adjhCueHIrmaN8LF2JhzedaXR4j7Ao/FM3evpcvxyI7220oh6IVIdY+FM3evrGxscjMdBvKY4Sb2IIMRXO0r8EgPDoUzWQCMjMlhIfnbhR/PkZotUBMjL195S4V1Go1ov6bhOp22GNTAIGB9g9bQd7YnB/K4ozNeRApztigxCvQb90K/datUFy7hhu//vpf4SLB9vo4JGm1MN5/P6DXQwEgAABw++3bD9IFy0OnK3j72v+oFGy7hYnVaOwfeDlj1Wr7SUFxx6pUBW9flcp+UnA7irg4lH1sMCSTCar770X2Aw/kG69UFnx/Vyg8EytJnokFCt6+jtjCbLegPHWMsJ8YFSy+MLGFPUYUtH15jCh8rEplP2kvaGxBjhFA4T73peEYIXes/x0jbp6UF+Z4UpRjREAAEBaW/3P87Rjhq8txsLAphRRxcdDv2GFfa+b4cef9QqWC+uRJmBs2BAAY+vaVKUPydrayZZH5xBMI+ugjhE6Zgri2beH8ipSIiMjH/fWXCn/+qUa/fgZnLwd5Py5EUcoErF6Nck2aIHTSJGiOH4eQJGS3aoWUd9/F9V9/dRY1RLeT/vzzsEZFQXXhAgI//VTudIiIiIrN7NnBGD8+HNOmhcidChUCCxs/JmVmQr95M9S//uq8z9SwISSbDabGjZE6dSpuHD+OxA0bkDVkCITj+hqiAhDBwUh79VUAQPDcuVDcuCFzRkRERHfu5EkVvvpKD0kSeOwxN+tWkFdi55q/yc6G7sAB6LdsgXbfPiiMRmT164eUhQsBAJb//Q83fv4Z1ooVZU6U/IHh4YcR+Nln0Pz6K0JmzkTKvHlyp0RERHRH5s2zr1vTs6cRtWpZZM6GCoOFjT8QAtqDB6HfuhW63buhSEtzPmSpWhWWOnVuxkoSixoqPgoFUqdNQ1TPngjYsAEZTz0Fy//+J3dWRERERfLXXyrs2mXvrRk3Ll3udKiQWNj4A0lCyNSpUJ86BQCwRkfD0Ls3DL17w3zPPYCPzmxBvsHcuDHSn30WlrvuguWuu+ROh4iIqMjmz7f31nTvbkSdOuyt8TUsbHyJEFD/+ad9mNk33yBh1y6IAPsEzFmPPgrV6dMw9OkD0733wjlZOlEJSH/tNblTICIiuiOnTqmwc6d9USH21vgmFjY+QHXmjHOtGdX58877tfv2wdi7NwAg8/HH5UqPKBcpPR1QKCACA+VOhYiIqMCsVqBFCxPCw2246y721vgiFjZeTH38OMJeeQXqv/5y3id0OhgfeACGPn3sC2cSeRHdV18h9JVXYOjfH2lvvCF3OkRERAX2v/9ZsHFjIgwGuTOhomJh40UUcXGQ0tJgrVkTAGCLioL6r78gVCpkt2tnL2Y6d4YICpI5UyLXhEoFZXw8Aj/5BJmDBsFao4bcKRERERWKXi93BlRUvBBDZlJKCgLWrEHkgAH2hTPfesv5mLVyZSQtXYrrv/2GpFWrYOjXj0UNebXsBx6AsUMHSGYzQqdOlTsdIiKi2zp7VoWZM4ORlMTTYl/HHhsZSJmZ0O3da58E4LvvIJnNNx9LT7cP8lQqAQDGbt3kSpOoSFInT4b24EHovvkG2m++QXbHjnKnRERE5Nb8+UHYtCkAFy+qsGRJstzp0B1gYSODiGHDoP3pJ+dt8113OadntlauLGNmRHfOWrMmMp94AkFLliB0yhTE3XcfoNHInRYREVEe584psWWLfezZs89myJwN3Sn2uXmSxQLtd98hbMIESMk3vwEwPvggLFWrIv355xF34ADiv/4aGWPHsqghv5E+fjysUVFQnT+PwGXL5E6HiIjIpQULgmGzSXjgASPuucd8+yeQV2OPTXGz2aA5ehT6rVuh27EDysREAICpaVNkDR4MAMgcOtQ+PTMXziQ/JYKDkfbqqwifMAGqy5flToeIiCiPCxeU2LzZ3lszYQLXrfEHLGyKiSIuDkFLlkC3bRtU164577dGRMDYowdM99xzM1itliFDopJlePhhmOvVg6V+fblTISIiymPBgmBYrRI6dDCiQQP21vgDFjZ3QMrMvLkIoSQh8OOPIdlssAUHw9i1Kwx9+iC7TRtAxWamUkihYFFDRERe6eJFJb780t5bM348e2v8Bc+4C0n577/Qb9sG/ZYtsIWFIXHjRgD2NWfSX3wRltq17Qtn6nQyZ0rkPZT//ouA1auRPnEioOClfUREJC+9XmDQoCzExSnQuDF7a/xFoQqb9evXY+N/J/IOFSpUwLx58wAAJpMJq1atwo8//giz2YwGDRrgySefRFhYWHHlK4/YWAR88gn0W7ZA88svzruFVgspJQXiv98v4/nnZUqQyIsZjSjTvTuUSUmw1KwJw8MPy50RERGVcuXK2TBrVipsNrkzoeJU6B6bmJgYTJo0yXlbkePb15UrV+KXX37BhAkTEBAQgE8//RSzZ8/G9OnTiydbGQS//TawaBFC/9vzhSTB1KoVDH36wPDgg86ihojc0OmQOWoUQt5+GyFvvw3jgw9yoVkiIvIKHETgXwr9dioUCoSFhTl/QkJCAABZWVnYv38/hg0bhvr166N69eoYPXo0Tp06hdOnTxd74iXFUqMGYLPB1KQJUqdNw43jx5G4fj2yBg+GCA+XOz0in5Dx5JOwVK0KZVwcgubPlzsdIiIqpa5eVWLkyHD8+SevxvBHhX5Xr1+/jqeffhpqtRq1a9fG4MGDUaZMGZw/fx5WqxV33323M7ZixYooU6YMTp8+jdq1axdr4iXF2KMH0KcPErVaCCHkTofIN2m1SJ08GZEjRiBo6VJkDRoEa/XqcmdFRESlzMKFQdi1S4+0NAXWrUuUOx0qZoUqbGrVqoXRo0ejQoUKSE5OxsaNG/Hmm29i9uzZSElJgUqlQqBjlrD/hIaGIiUlxe02zWYzzOabF21JkgS9Xu/8v+yCgoDoaEjXr8udiV9yvMde8V77IW9qX1PnzjC2bw/dt98idOpUJK9aJXdKd8yb2tcfsX09i+3rWWxfzypK+169qsDatQEAgAkTMvje5MNX999CFTaNGjVy/r9KlSrOQuenn36CRqMpUgKbN2/ONSFBtWrVMGvWLERFRRVpe54SHR0tdwp+je3rWV7Tvh99BNx9N3Rff43yf/wBdO4sd0bFwmva10+xfT2L7etZbF/PKkz7vvUWYDYD7dsDfftGei4pP+Jr++8dDTAMDAxEhQoVcP36ddxzzz2wWCzIzMzM1WuTmpqa76xoffv2RY8ePZy3HZVhfHw8LBbLnaRXLCRJQnR0NK5fv86haB7A9vUsr2vf0FAEPfssoFQio0YNIDZW7ozuiNe1r59h+3oW29ez2L6eVdj2jY1V4JNPygKQMGZMImJjTZ5P0od50/6rUqkK3OFxR4WN0WjE9evXcd9996F69epQKpX4448/0KJFCwDAtWvXkJCQkO/1NWq1Gmq12uVjcjdkTkIIr8rH37B9Pcub2jf95Zdv3vCSnO6UN7WvP2L7ehbb17PYvp5V0Pb98MNAmEwSmjfPRosW2f7y58fjfG3/LVRhs2rVKjRt2hRlypRBcnIy1q9fD4VCgTZt2iAgIAAdOnTAqlWrEBQUhICAACxbtgy1a9f22YkDiMjDrFZIRiPELdfmERERFZfr1xVYvdr+d2b8+HT42GUjVAiFKmySkpIwf/58pKenIyQkBHXr1sWMGTOcUz4PGzYMkiRh9uzZsFgszgU6iYhupf79d4S+/DLM9esjdfZsudMhIiI/FRpqw6uvpuHoUQ3atOEQNH9WqMJm3Lhx+T6u0Wjw5JNPspghotszmaD580+oT55E1tChMDdoIHdGRETkh/R6YOTITIwcmSl3KuRhXG+ViGRhbtYMWf36QRICoZMm+c31NkRERCQPFjZEJJu0116DLSAAmuPHod+0Se50iIjIj8THK9C9exls3arjd2elBAsbIpKNrXx5ZDz3HAAgZMYMSBkZMmdERET+YvHiIPz2mwZLlwbJnQqVEBY2RCSrjJEjYalSBcobNxC0cKHc6RARkR9ISFBg5coAAJwJrTRhYUNE8tLpkDZ5MgBAc/w4YLPJnBAREfm6JUsCYTAo0KCBCR06ZMudDpWQO1qgk4ioOBg7d0bi6tXIbtsWUPD7FiIiKrqkJAVWrLCvWzNuHHtrShMWNkQkP0lCdvv2cmdBRER+YMmSQGRlKXD33SZ06sTemtKEX40SkVeRMjIQtGgRYDbLnQoREfmYlBQJy5fbe2vGj89gb00pwx4bIvIeQqBMv35QnzwJoVYjc+RIuTMiIiIfEhoqsGRJMrZv16NzZ6Pc6VAJY48NEXkPSULm8OEAgODZs6FISJA3HyIi8imSBNx/fzbmzElhb00pxMKGiLxK1sCBMN19NxTp6QieNUvudIiIyEdYrXJnQHJjYUNE3kWpRNr06QCAgC++gPrECZkTIiIib5eSIqFVq7KYMycI2ZwvoNRiYUNEXsfUrBmy+vaFJARCJ00ChJA7JSIi8mKffhqEK1dU2LlTD7Va7mxILixsiMgrpb32Gmx6PTTHjkG/ebPc6RARkZdKS5PwySc3163hcmilF2dFIyKvZKtQARnPPQfV6dPIbtFC7nSIiMhLffppINLSFKhd24zu3TkTWmnGwoaIvFbG2LHgtDZEROROerqETz4JAsDeGuJQNCLyZrcWNSaTPHkQEZFXWrYsECkpCtSsaUaPHuytKe1Y2BCR11Ncu4bwp59G+OjRcqdCRERewmQCPv00AAAwblwGlEqZEyLZcSgaEXk9RUYGdLt3Q7JakXnwIExt28qdEhERyUyjAbZsScTq1QHo1csgdzrkBdhjQ0Rez1K7NjKHDwcAhE6eDJjN8iZEREReoXp1K954I429NQSAhQ0R+Yj0F16ANSIC6tOnEbhypdzpEBGRjDIyOLEM5cXChoh8gggNRfrEiQCA4NmzoUhMlDkjIiKSQ1aWhDZtojB4MJCczAKHbmJhQ0Q+I2vQIJjq14ciLQ3Bs2bJnQ4REclg1aoAxMUp8fPPQHCwkDsd8iIsbIjIdyiVSJs+HQCg/fZbSJmZMidEREQlyWCQ8NFH9nVrXn8dUHEaLMqBhQ0R+RTTvfciadEixH/7LURgoNzpEBFRCVq1KgAJCUpUrmzBo4/KnQ15G9a5RORzjL17y50CERGVMIMBzt6asWMzoFaHyZsQeR322BCR77LZoN+4EVJWltyZEBGRh61eHYj4eCUqVbLg4Ye5bg3lxcKGiHxW+DPPIPz55xH0wQdyp0JERB4kBPDFFwEA7L01Go3MCZFXYmFDRD7L8N+QtKDFi6H891+ZsyEiIk+RJGDr1gRMmZKKAQPYS0+usbAhIp9lfPBBZLdpAyk7GyHTpsmdDhEReVBQkMDIkZnsrSG3WNgQke+SJKROmwahVEK/ezc0338vd0ZERFTMrl5VQHC5GioAFjZE5NMsdeogc9gwAEDo5MmAxSJzRkREVFyys4HevaPw4INlcOmSUu50yMuxsCEin5f+wguwhodDfeoUAletkjsdIiIqJuvXByA2Von4eCWio61yp0NejoUNEfk8ERaG9IkTYWrYEKaGDeVOh4iIioHJBCxcaF+35tlnM6DVypwQeT0u0ElEfiFr8GBkDRkCKPh9DRGRP9iwIQBXr6pQrpwVgwdnyp0O+QAWNkTkH5S3jL0Wwj4/KBER+Ryz+WZvzejRGdDpZE6IfAK/2iQivyJlZSH43XcRMWQIOI0OEZFv2rgxAJcvqxAVZcWQIeytoYJhYUNEfkVKTkbgkiXQffcddNu2yZ0OEREVwddf2y+oeeaZDOj1MidDPoOFDRH5FVvFisgYMwYAEPLWW5AMBpkzIiKiwlq6NBmffpqEoUOz5E6FfAgLGyLyOxmjRsFSqRJU164h6MMP5U6HiIgKSaEAunY1Qq/nkGIqOBY2ROR/9HqkvfkmACDoo4+gvHxZ5oSIiKgg/vlHhawsTvxCRcPChoj8krFbN2S3agXJaETItGlyp0NERLdhsQBPPhmB5s3L4pdf1HKnQz6IhQ0R+SdJQuq0aRAKBbT790N59arcGRERUT62btXjwgUVhADq1LHInQ75IK5jQ0R+y3LXXUh5/32Y2rSBtWJFudMhIiI3rFZg/nz7ujVPP52JwEBeW0OFx8KGiPyaYeBAuVMgIqLb2LZNj3Pn1AgLs2HECK5bQ0XDoWhEVGpofv4ZiqQkudMgIqIccvbWjByZgaAg9tZQ0bCwIaJSIfj991Gmb18Ev/ee3KkQEVEOO3bocOaMGqGhNjz+OHtrqOhY2BBRqZDdujUAIODzz6E6eVLmbIiIyOGvv9SQJIGRIzMQEsLeGio6FjZEVCqYWraEoUcPSDYbQt98ExD840lE5A1efTUd33wTjyeeYG8N3RkWNkRUaqRNmgSbTgft4cPQbd8udzpERPSfOnUs7K2hO8bChohKDWulSsh49lkAQMj06ZAMBpkzIiIqvX77TY1Ll5Ryp0F+hIUNEZUqmc88A0vFilBdu4agRYvkToeIqFSy2YAXXwzDffeVxa5dOrnTIT/BwoaIShWh1yNt0iRYy5WDuWZNudMhIiqV9u7V4e+/1dDrBVq2zJY7HfITXKCTiEodY48eyO7YESIgQO5UiIhKHSGAuXPt69aMGJGJ8HBeW0PFgz02RFT6SBKLGiIimezbp8Wff2oQGGjDU09lyJ0O+REWNkRUetls0G/YgIghQwCLRe5siIj8nhDAnDnBAOy9NRER7K2h4sPChohKLSktDaFTpkD37bcI+PxzudMhIvJ733yjxR9/aBAQYMPTT3PdGipeLGyIqNQSYWFIe+klAEDIe+9BSkqSOSMiIv8WH69EcLANw4dnIiLCJnc65Gc4eQARlWpZjz6KwM8/h/rvvxHy/vtIffttuVMiIj9gMgEXLgBxcUoIkXu4VblyVmi19v+npkpITXX/PXPZslbo/psNOS1NQkqK+9ioKBv0evtrZWRISEpyH1umjA0BAfbYzEwJiYnuYyMjbQgMtMdmZUlISHAfGx5uQ3CwPdZgsBcyObVunY2NGxMgSfbfx7Eop9Fobyt3QkJsCAuzx5pMwI0bSudzbm3f4GCbc0ICsxmIjXW/3aAgm3M4nMUCXLvmPjYwUCAy0l6M2WzAlSvuYwMCBMqUsccKAVy+7D5WrxeIirpZ5F2+rIRwM0JPqxUoV+5m7JUrStjc1IcajUB09M0Hr15Vwmp1HatSCVSocDP22jUFoqLcpuy1WNgQUemmUiF16lSUGTAAAZ99hsxHH4Xlf/+TOysi8mFnzqgwaFAkYmMBoGyex7/6Kh53320GAHz2WSBmzgxxu61NmxLQvLkJALBhQwDefDPUbeznnyfi/vvtUydv367Hiy+GuY1dujQJ3boZAQBff63F6NERbmPnz09G//72BY0PHdJgxIhIt7EzZ6Zg6NAsAMCxYxo88kgZt7FvvpnqHI528qQavXq5P5N+8cU0jB9vn2jg7FkVOnVytGve9n322XS89lo6APvJfOvW5dxu9/HHMzB9ehoAIClJgZYt3cc+8kgmZs9OBWAvBvOL7dXLgI8+SgZgL4Lyi+3UyYgVK26OGGjXriyysyWXsa1bZ2P9+kTn7S5dotwWu40ambBjR4Lzdu/eZdwWeXfdZcbXX8c7bw8cGIlvvgE0GrdpeyUWNkRU6plat4ahe3fod+5E6JtvInHDBkBy/UeFiOh2duzQITZWCY0GUKnyfp0uSTe/jlepBAIC3A/JUuQ4Z71drFKZ8/+FiUW+saocZ4sKRcFjc27XZpMghD0vB7W64Nt1FStJCgiR9zk5YyWp4Nu9XeytJ/n5x+bucskvVqvNHavXi1ztdLtYk8n1tnW6vLHu8nAV64t/BiVxa/+dl4iPj4fZbJY7DUiShPLlyyM2NjZPVyfdObavZ7F9C0555QrKtmsHyWhE/LZtMDdpctvnsH09i+3rWWxfzxECWLYsEKNHh8JkYvsKYe8tOH5cgylTUjFy5J1PGsD917O8qX3VajWiCjgujj02REQArJUqIfWtt2CpUaNARQ0RUU4JCQoEB9ug1dq/+X/yySxERob+NxytdPv+ey2OH9dApxPo3dsgdzrkx1jYEBH9J2vQILlTICIflJCgwEMPRSImxoqlS5Og18udkfewr1sTBAAYMiQTZctyJjTyHE73TETkgvLKFSiuX5c7DSLycsnJEh55JBJnz6rxzz/qfGciK40OHdLg6FEttFqB0aMz5E6H/Bw/fUREt9B/+SXKtmuH0KlT5U6FiLxYWpqEIUMi8fffapQta8X69QmoWJE9EjnNmxcMABg8ODPX1MNEnsDChojoFua6dQGTCfpt26D56Se50yEiL5SZKeGxxyLx++8aRERYsW5dIqpXd7NISCn1448aHD6shUbD3hoqGSxsiIhuYalXD1lDhgAAQt98E25XNCOiUslgAIYPj8CxYxqEhtrwxReJqF3bIndaXsdqBWrWNGPQoKxciz8SeQoLGyIiF9Jffhm20FCo//oLAatXy50OEXmR8+dVOHFCjaAgG1avTkT9+ixqXLnvPhP274/H66+nyZ0KlRIsbIiIXLBFRCDtpZcAACGzZkFKTpY5IyLyFvXqWbBuXSI++ywJjRrJv+aeN1MqgcBArjNDJYOFDRGRG1mPPQZz3bpQpKQgePZsudMhIhlZrcDFi0rn7YYNzbj3XpOMGXmvX35RY9myQBiNcmdCpQ0LGyIid1QqpE6dCqHVwhYRIXc2RCQTmw144YUwdO8ehd9+U8udjtd7771gTJoUilmzQuROhUoZLtBJRJQPU5s2uPHzz7CVKSN3KkQkAyGA114LxYYNAVAqBWJjlWjYkMPP3Dl2TI2DB3VQqQQefzxT7nSolGGPDRHRbbCoISqdhACmTg3BZ58FQpIE5s9PwYMPcnxVfubOta9b8/DDWYiJ4YySVLJY2BARFZD6+HGEjxxpn+uViPzeu+8GY+nSIADA+++noG9ffvbz88svanz7rQ5KpcDYsVy3hkoeCxsiooIwmxH+zDPQ79qFoMWL5c6GiDxs/vwgLFhg732YMSMFjzzCouZ2HL01/fsbUKUKe2uo5LGwISIqCLUaaa+/DgAI+uADKK5elTkhIvIUiwX44QctAGDSpFQMH54lc0be77ff1Ni/39Fbky53OlRKsbAhIiogY69eyG7eHAqjESEzZsidDhF5iEoFrFyZiA8/TMaoUbwAviACAwU6dTKiXz8DqlVjbw3Jg4UNEVFBSRJSp02DUCgQsHUr1EeOyJ0RERWjkydVEP+tJanXA336cPhZQdWqZcGKFUl4//0UuVOhUoyFDRFRIVjq10fW4MEAgNA33rCv2kdEPm/LFj26dInCO+8EO4sbKjwVFxIhGbGwISIqpPSJE2ELDYX65Engyy/lToeI7tDu3To891wYhJCQnMxTo8L4808VXn89FNeusd1IfqyriYgKyRYRgdTJkyEBCOvfH7hxQ+6UiKiI9u/X4plnwmG1SujfPwvvvJMKSZI7K98xb14wdu/WIy1NwsKFKXKnQ6UcCxsioiIwDBwISZIQpuC3lES+6tAhDUaOjIDZLKFnTwNmz04BP9IF99dfKuzerYckcd0a8g78+BIR3SEpKwuK2Fi50yCiQvj5Zw2GD4+A0SihSxcDFi5M5vUhheRYt6ZHDyNq17bInA0RCxsiojtz8CCi7rsP4ePGgVccE/mOs2dVMBgUaN/eiI8+SoZaLXdGvuWff1TYtUsPABg3juvWkHfgdxNERHciJgaKpCRoY2Oh++orGB98UO6MiKgABg/OQrlyVrRqZYJWK3c2vmfePHtvTffuBtSty94a8g7ssSEiuhPVqiFj1CgAQMi0aYDRKHNCROTO2bNKJCXdPPXp2DEbej17Wgvr9GkVduzQAQDGj2dvDXkPFjZERHcoc+xYWKOjofr3XwQtWSJ3OkTkwvnzSjz8cBn07x+JuDie/tyJyEgbRo3KxEMPZeGuu9hbQ96Dn2wiojskAgKQNmkSACBo4UIorl2TOSMiyunyZSUGDoxEXJwSCgWgUrGX5k5ERtrwxhtpWLAgRe5UiHJhYUPk5wQvaC8Rht69kX3vvVAYDAiZMUPudIjoP7GxCgwcGIlr11SoWdOMtWsTERHB4yKRP2JhQ+SHMkwZmPTjJDRf0xwxc2PQfE1zTPpxEjJMXGfAYyQJqdOnQygUkKxWwMLhGURyi4+3FzWXLqlQpYoFa9cmokwZm9xp+axz55QYNCgCR45o5E6FyCXOikbkZzJMGei5rSfOJp+FDTf/gK84uQKHrh3C9l7bEaQJkjFD/2WpXx9x330Ha/XqcqdCVOolJUkYNCgS586pUaGCBevXJ6J8eRY1d2L+/GAcPKiDVgs0b54kdzpEebDHhsjPzDo2K09RAwA22HA2+SzePfauTJmVDixqiLxDRoYCaWkSypWzYv36RFSqZJU7JZ92/rwSmzfb162ZMIEzoZF3YmFD5Gf2Xtqbp6hxsMGGvZf2lnBGpZPi2jWEvvwypNRUuVMhKpUqV7Zi8+ZErFuXiGrVWNTcqQULgmGzSejY0Yh77jHLnQ6RSxyKRuRHhBCw2PK/tsNsM0MIAUmSSiirUkgIRIwcCc1vv0Ho9UibOlXujIhKBYNBwu+/q9GihQkAULEiC5ricPGiEps22XtruG4NeTP22BD5EUmSoFLk/32FSqFiUeNpkoT0iRMBAIHLl0N1+rTMCRH5v+xs4IknwjFwYCR27tTJnY5fWbAgGFarhPvvN6JRI/bWkPdiYUPkZzpX6QyFm4+2Agp0qdKlhDMqnbLbtoWhSxdIVitCJk8GOO02kceYzcCoUeH47jsd1GqBsmU5SUBx+fdfJTZuZG8N+QYWNkR+ZmLTiagZXjNPcaOAArXCa+Hlpi/LlFnpk/bmmxAaDXQHD0K3l9c2EXmCxQKMGROOvXv10OkEVqxIQrNmJrnT8hvly1sxa1YqhgzJRJMm7K0h78bChsjPBGmCsL3XdoyoNwIxQTGoGFwRMUExGFFvBLb12sapnkuQtWpVZDz1FAAgZOpUwGiUOSMi/2KzARMmhGHHDj3UaoFPPklCmzYsaoqTWg0MGpSFd9/lRCjk/Th5AJEfCtIEYVqraZjeejqio6Nx/fp1CA6FkkXGc88hYONGqC5dQuCKFcgcNUrulIj8ghDAK6+E4ssvA6BUCixenIz778+WOy2/IgTASzLJl7DHhsjPcaIAeYnAQKS++SbSx4xB1qOPyp0Okd+w2ew/CoXAwoXJ6NqVPaLF6epVJdq1i8KaNQG8RJB8BgsbIiIPM/bujfRXX4UI4jBAouKiVALvvpuKzZsT0Ls3i5ritnBhEM6dU2PzZj17bchnsLAhIipJNhsUCQlyZ0Hks776SgfLf8t1KRRA06a8oL24Xb2qwNq1AQCACRM4Exr5DhY2REQlRHnuHMr07o2IRx8FrFw4kKiwFi8OxBNPROCZZ8Jh44zOHrNoUTDMZgktW2ajZUtOxkC+g4UNEVEJEaGhUJ05A80ffyBg3Tq50yHyKStWBGD69FAAQP36Zih4BuMRsbEKrFlj763hujXka3hYICIqIbYyZZA+fjwAIPiddyClcvpUooL44osAvP56GADguefS8fzzGfIm5McWLQqCySShefNstGrF3hryLSxsiIhKUOaIETDXrAllYiKC586VOx0ir7dpkx4vvWTvqXnqqQy8/DJ7ETwlKUmB1asDAdh7azhpAPkaFjZERCVJo0Ha1KkAgMDly6E6c0bmhIi8186dOowbFwYhJAwdmok330zjybYHRUTYsHZtIp56KoMLnZJPYmFDRFTCstu3h7FTJ0gWC0KmTAEXiSByLThYQK0WGDAgCzNmpLKoKQH33mvC5MksIMk3qeROgIioNEqdPBna776DIjERUloaRGio3CkReZ22bbOxc2cCatWycLIADzMaAZ1O7iyI7gwPE0REMrBWq4aEzZuRsHMnixqiHI4e1eDsWaXzdt26FiiV+TyB7lh8vALNmpXDtGkhyM6WOxuiomNhQ0QkE3PDhuAZG9FNv/yixpAhEXjooTI4f56fjZKyeHEQkpKU+PlnDTQaubMhKjoWNkREMpMMBgTNnQtFbKzcqRDJ5s8/VXj00UhkZipQp44F5ctzEduSkJCgwMqVN9et4bU15Mt4jQ0RkczCnn8e+p07oTp/HikLF8qdDlGJO3VKhUceiURqqgLNmmVj+fIk6PVyZ1U6LFkSCINBgQYNTOjQgePQyLexx4aISGYZo0cDAAI2bYL62DGZsyEqWefOKTFwYCSSk5Vo0MCEVauSEBjImQJLQlKSAitW2NetGTeOvTXk+1jYEBHJzNywITIfeQQAEPrmm4DNJnNGRCXjyhUlBg4sg/h4Je66y4zVqxMREsKipqQsWRKIrCwF7r7bhE6d2FtDvu+OCpstW7ZgwIABWLFihfM+k8mETz75BI8//jgee+wxvP/++0hJSbnDNImI/Fv6K6/AFhwMze+/Q79+vdzpEJWI4GAbype3olYtM9auTUR4OIuakpKdDaxZ47i2JoO9NeQXilzYnD17Fvv27UOVKlVy3b9y5UocP34cEyZMwNSpU5GcnIzZs2ffcaJERP7MFhWF9HHjAAAhM2dCSkuTNyGiEhAaKvDFF4lYty4RZcqwp7IkabXAnj3xmDgxDZ07G+VOh6hYFKmwMRqNWLhwIZ5++mkEBgY678/KysL+/fsxbNgw1K9fH9WrV8fo0aNx6tQpnD59utiSJiLyR5mPPw5zjRpQJiQgeN48udMh8oikJAU2bLg5M0BQkEC5cixq5FChgg3PPcfeGvIfRSpsPvnkEzRq1Aj33HNPrvvPnz8Pq9WKu+++23lfxYoVUaZMGRY2RES3o9EgbepUGLp1Q+bw4XJnQ1TsUlMlDBoUgXHjwrFsWeDtn0AekZjIS6zJPxV6uucffvgBFy5cwMyZM/M8lpKSApVKlasXBwBCQ0PdXmdjNpthNpudtyVJgv6/OR4lL/gKwZGDN+Tij9i+nsX29SxPtK+pQweYOnSwb7fYtuqbuP96Vkm3b0aGhMcei8Cff2oQGWlF27Ymv35vvXX/TU2V0KZNWdx7rwnz56f47HVN3tq+/sJX27dQhU1CQgJWrFiBN954A5piWpp28+bN2Lhxo/N2tWrVMGvWLERFRRXL9otLdHS03Cn4NbavZ7F9Pcuj7ZuRAQQFeW77PoD7r2eVRPtmZQGPPAIcPw5ERAD79ytxzz3e9XfeU7xt/126FEhLA2JjdahbNxoKH++88bb29Te+1r6FKmzOnz+P1NRUTJw40XmfzWbD33//ja+++gqvv/46LBYLMjMzc/XapKamIiwszOU2+/btix49ejhvOyrD+Ph4WCyWwqTnEZIkITo6GtevX4cQvvmthjdj+3oW29ezPNm+UlISQqZMgeaXXxD/zTf2K31LGe6/nlVS7Ws0AsOHR+DgQS2Cg21YvToJUVFmxMZ67CW9gjfuv2lpEubMKQtAgTFjknHjhu9OGuCN7etPvKl9VSpVgTs8ClXY3H333Xj//fdz3ffRRx+hQoUK6N27N8qUKQOlUok//vgDLVq0AABcu3YNCQkJqF27tsttqtVqqNVql4/J3ZA5CSG8Kh9/w/b1LLavZ3mkfdVqaA8ehDIuDoGffOJcxLM04v7rWZ5sX5sNePppe1ETEGDDZ58l4p57zChNb6c37b+ffhqI1FQFatUyo3t3g1+8D97Uvv7I19q3UB2Qer0elStXzvWj1WoRHByMypUrIyAgAB06dMCqVavw559/4vz581i0aBFq167ttrAhIqK8RFAQ0l59FQAQNG8eFDduyJwRUeEpFECLFtnQ6WxYuTIJzZqZb/8k8oj0dAlLl9qHtY4blwGlUuaEiDyg0JMH3M6wYcMgSRJmz54Ni8WCBg0a4MknnyzulyEi8nuG/v0RuGoVNL/+ipCZM5HCKaDJB40alYmePQ2oWJFTOstp+fJApKQoUKOGGT17GuROh8gj7riwmTJlSq7bGo0GTz75JIsZIqI7pVAgdfp0RPXogYANG5A5dCjMjRvLnRVRvmw24OOPAzF4cBZCQuxDWFjUyEsIYNs2+4yzzz/P3hryXz4+FwYRkX8zN2qErAEDAAChkybZzxqJvJQQwOTJIZg+PRSDB0fCapU7IwIASQJ27IjHnDnJ6N2bvTXkv1jYEBF5ubRXX4UtKAjKq1ehvHRJ7nSIXBICePvtYCxbZr+OY9iwTPYMeBGdDhg40ABVsV+EQOQ9uHsTEXk5W9mySFq+HOa774YIDpY7HSKX5s4NwqJF9v3znXdS8PDD7BnwBmfPqlCtmoVFJpUK7LEhIvIBplatWNSQ11q0KAizZ4cAAKZMScVjj2XJnBEBQFaWhH79ItG+fVlcusTKhvwfCxsiIl8iBPRbtkB57pzcmRABAD7/PAAzZtiLmldeScPIkZkyZ0QOq1YFIDFRCasVqFiRFzyR/2NhQ0TkQ4LfeQfhzz6L0FtmpCSSy733mlC2rBXjxqVj7NgMudOh/xgMEj76yH6903PPpfPaGioVWNgQEfmQrAEDINRq6Pbvh/brr+VOhwi1a1vw9dfxePHFdLlToRw+/zwACQlKxMRY8NBDvN6JSgcWNkREPsRaowYy/1snLHTKFMBkkjchKpV27tTh++81ztuRkTZIkowJUS4Gg/26JwAYOzYDarXMCRGVEBY2REQ+Jv3552GNioLqwgUEfvqp3OlQKbN3rxajR4dj2LBI/Pknxzd5ozVrAhEXp0TFihY8/DAncqDSg4UNEZGPEcHBSHv1VQBA8Lx5UMTFyZwRlRYHD2rx9NMRsFgkdOtmwF13WeROiVw4csTemzZ2bAY0mtsEE/kRFjZERD7I8PDDMDVqBEVGBkJmzpQ7HSoFfvpJgxEjwmEy2YuaefNSuDaKl1qyJBnr1iVgwAD21lDpwsKGiMgXKRRInTYN5nr1kDVggNzZkJ87flyNYcMiYDQq0KGDER9+mMxZtryYJAFt2pig1cqdCVHJ4mGJiMhHmRs3RvyePeBV2+RJ584p8eijkcjMVKBNm2wsXZrE4U1e6tdf1aha1YLwcCF3KkSyYI8NEZEvy1nUmM3y5UF+q3JlK9q3z8a992Zj+fIk6HRyZ0SuZGcDI0dGoEWLcjh+nNOgUenEwoaIyNdlZyNo/nyUbd8eUgYXSKTipVYDH3yQjM8/T0JAAHsCvNX69QGIjVUiKEigXj1+yUGlEwsbIiI/ELB+PVQXLyJo/ny5UyE/cOmSEu+8EwybzX5bqQQCA1nUeCuTCVi40L5uzejRGexVo1KLhQ0Rka/TapE6ZQoAIGjpUijPn5c3H/JpV68qMHBgJBYuDMbs2cFyp0MFsGFDAK5eVaFsWSsGD86UOx0i2bCwISLyA9kPPADj/fdDMpsROnWq3OmQj7pxQ4EBA8rg8mUVqla1YOhQniR7O7M5d2+NXi9zQkQyYmFDROQPJAmpU6ZAqFTQff01tAcOyJ0R+ZjERAUeeSQSFy+qUKmSBevXJ6BcOZvcadFtbNwYgMuXVYiKsuLRR7luDZVuLGyIiPyEtWZNZD7xBAAgZPJk+8B7ogJISZEwaFAkTp9WIzraivXrE1GxIosaX3D1qhJKpcCoURnQ63kdFJVuLGyIiPxI+rhxsJYpA9Xly9D8+qvc6ZAPsNmA4cMjcPKkGlFRVqxbl4AqVaxyp0UF9OKL6Th0KA5Dh7K3hogLdBIR+REREoLkhQthjYmBtVo1udMhH6BQAM88k4nLl1VYvToRNWuyqPE1lSvzPSMCWNgQEfkdU9u2cqdAPqZLFyPatjXywnMf8tNPGoSH21C3rkXuVIi8BoeiERH5MfVvv0H1119yp0FexmQCXnklBBcv3ryPRY3vsFiAl14KQ8eOZbFrFxetIXJgYUNE5KcCvvgCUd27I2ziRDhXWqRSz2IBnn02HKtWBaJrV/tt8i1bt+px4YIK4eFWtGuXLXc6RF6DhQ0RkZ8y3n8/bAEB0PzyC/SbNsmdDnkBqxUYNy4Mu3bpodEILFgAqDgo3adYrcD8+fZ1a55+OhOBgZwJjciBhQ0RkZ+yRUcj4/nnAQAhb78NKSND5oxITjYbMHFiKDZvDoBKJfDxx8no3FnurKiwtm/X49w5NcLCbBg+nAuoEuXEwoaIyI9ljBwJS9WqUN64gaAFC+ROh2QiBDBpUii++CIQCoXABx8ko3NnDmHyNVYrMG+evbdm5MgMBAezt4YoJxY2RET+TKtF6uTJAICgpUuhvHBB5oRIDkuWBGLFikBIksC8eSno2dMod0pUBDt26HDmjBqhoTY8/jh7a4huxcKGiMjPZXfqBGO7dpBMJoROnSp3OiSD/v0NqFfPjFmzUvHQQwa506EiMpslREZaMXJkBkJC2FtDdCteMkhE5O8kCWlTp0L9yCMwdupkH5ckSXJnRSWoTBkbduyIh0YjdyZ0J/r3N6BbN/a2EbnDwoaIqBSw1KqFGz/9BJ7Zlh6ffhoIvV5g8OAsAHzr/UVAAHtqiNxhYUNEVFrkPLNlr41f+/zzALz5ZigAoG5dMxo3NsucEd2JQ4c0SEtToGtXIxS8iIDILRY2BZCRIZCVJUG4+JJEoRDQ5Vj0NyvL/YmCJIlcKzsXJtZgcP369lhArxdFjAWEcJ9Hzm+GChNrNAI2W8Fj3bUvYM/Xcf6VnQ1Yre63W5hYnU44/0CYTIDFUjyxWq2AUln4WLPZPn7aHY1GONebKEysxZJ/+6rVAmr1zViTyf12c8ZarUB2tvtYlUo4z6MLE2uzAUZj8cQqlQJarf3/Qtg/G8UR6+pz7659ve4YIQRsm75C0IeLkLRiBWxlyriPhfccI4rrc18ajhEbNujxyiv2oubJJzNQp44lz76k0eT+3Of3+eQxovCxCkXBP8u3O0YIAUyeHIp//lHjtddS8eyzmW5jc/L384jAQBQ4lscIu8KcRzj2dZ8jvFRcXJy4evWqbD+nLpwSj294XMS8HyPshxXXPx06GHI9T6+3uo1t2dKYKzYiwuI2tkGD7FyxlSqZ3cbWrm3KFVu7tsltbKVK5lyxDRpku42NiLDkim3Z0ug2Vq+35ort0MGQb7s54q5duyb693cfBwhx5sw1Z/zDD2fmG3viRKwzdtiwjHxjDx++7owdNSo939j9+284YydMSMs3dufOm/vuG2+k5Bu7YUO8M3bGjOR8Y1euTHDGzpmTlG/s4sWJzvZdvz7/9p0zJ8m53ZUrE/KNnTEj2Rm7YUN8vrFvvJHijN25My7f2AkT0pyx+/ffyDd21Kh0Z+zhw9fzjR02LMMZe+JEbL6xDz+c6Yw9c+ZavrHdu2c521eI/NvX644Rly+Lu7Rn3cZ60zHC0b49emTlG8tjhP1n5coE8dFHiUKhsOUbB9iPEY72XbIk/+MJjxH2n8IeIxzte+1a/rGFOUY0bcrzCMdPzvbt3p3HiOI+j1iyJMnZvjnfFzl+4uLiClw/sMfGhQxTBnpu64mzyWdhg03udIiIio9CAVvZKOCy3IlQcfvlFzU+/DAYNpuE5s2zceSIr37lSu44esOIyDXJ/m2j94mPj4fZLM+Y4Ek/TsKKkytuFjWmAOdjEhR47K7HMKnFJABeOMyk0LGAnMNMJElCeHh5XL16He52RXYh2xVlKJokSYiKKo9Ll9y3L4eZFD7W8bmXJAnly5fHuXPu29dbjxEhE15AwLatMDVqjMR165zX23jTMcLRvhcuxMJqdRvKYwSA8+eV6NkzCiaThH79svDeeyn5tq99KJq9fS9fjkV2Pmt18hhR+Fj7UDR7+8bGxiIznyVn8jtGfPONBqNGRUKvt+Hbb+MRGWnlecR/AgPhbF+DQXAoGop/KFpMjL195S4V1Go1oqKiChTLwsaF5l80x5WMK24fjwmKweFBh0swI//lOHHxhg+OP2L7epYvt68iNhZl27aFIisLyQsXwtCvn9wp5eHL7VvShABmzw7GqVMqfPRRsvPkJT9sX8+60/YVAujWrQxOnNDg2WfT8dpr6R7I0ndx//Usb2rfwhQ2nFvjFkIIWGyWfGPMNrPsbzIR0Z2wlS+PjLFjAQAhM2ZAyu8rZfJ6kgS8+GI6Fi8uWFFD3m//fi1OnNBAr7fh6af5+SQqCBY2t5AkCSpF/n8VVAoVJE6TSkQ+LuOpp2CpUgXK69eh++orudOhQjpxQo2nngrPNRzJMSSFfF9goMA995gwbFgWIiN5vS9RQfB7HRc6V+mc+xqbHBRQoEuVLjJkRURUzHQ6pMyaBUgSTG3ayJ0NFcLff6swaFAkUlIUqFjRismT0+ROiYpZixYm7NqVAJNJ7kyIfAd7bFyY2HQiaobXhOKW5lFAgVrhtfBy05dlyoyIqHiZ7ruPRY2POXtWhUcesRc1jRqZ8MILvPbCX0mSD68nQiQDFjYuBGmCsL3XdoyoNwIxQTGoGFwRMUExGFFvBLb12oYgTZDcKRIRFTvF9etQ/fmn3GlQPi5eVGLgwEgkJChRr54Zn3+eiKAgXvPpT374QYMFC4KQns4h70SFxaFobgRpgjCt1TRMbz0d0dHRuH7d/XSuRES+TvP994h4/HFYK1ZE/L59XDDDC129ai9qrl9Xok4dM9auTURYGP8u+RMhgHffDcGxYxqkp0t4/XX2xhEVBntsCoATBRCRvzPfcw+EXg/1mTMIXLFC7nToFkIAI0eG48oVFapVs2Dt2kRERPCCcn/z/fcaHDumgVYr8OSTnAmNqLBY2BAREURoKNInTgQABM+ZA0VioswZUU6SBMyalYoGDUxYty4BZcuyqPE3QgBz5wYDAIYMyUS5cnyPiQqLhQ0REQEAsh55BKb69aFIS0PwrFlyp0O3uPtuM3buTEDFijzh9Uc//qjBzz9rodEIjB6dIXc6RD6JhQ0REdkplUh76y0AQMCaNVD/8YfMCZVuaWkSHnkkEseO3bzeiSOj/Zejt2bw4CyUL8/ilagoWNgQEZGTqVkzZPXtC0kIhEyaZB8fQyUuK0vC0KER+P57LcaMCedaJn7up580+Okne2/Ns89ywgCiouKsaERElEvaa69Bt38/zE2bAmYzoNHInVKpYjAAw4dH4OhRLUJDbfjkkyS+BX4uOtqKvn2zEBZmQ4UK7K0hKioWNkRElIutQgXcOHIEIjhY7lRKnexs4KmnIvDDD1oEBtrw+eeJqF/fInda5GHVqlnxwQcp7CAlukMcikZERHmwqCl5ZjPw7LPh2L9fB53OhlWrktC4sVnutKgE8RoqojvDwoaIiNxS//EHIgcOhPLSJblT8XtLlwZh9249tFqB5cuT0KIFL6zxd0ePqvH882E4f14pdypEfoGFDRERuRU8cya0hw4hZPp0uVPxe48/noFu3QxYsiQJbduyqCkN5s4NxsaNAfjooyC5UyHyCyxsiIjIrbTJkyGUSuh374bm4EG50/E7QtyceE6nA5YuTUanTtnyJkUl4vhxNb77TgeVSmDsWK5bQ1QcWNgQEZFbljp1kDl8OAAgdPJk+4UgVCyEAKZNC8H06SG8aLwUcqxb079/FipXtsqcDZF/YGFDRET5Sp8wAdbwcKhPn0bgqlVyp+M33nsvGB9/HIQlS4Jw7Bjncy5Nfv1VjQMHdFAq2VtDVJxY2BARUb5EWBjSJ04EAATPng1FYqLMGfm+BQuCMH++/Rv7t95KQbNmvKamNJkzx/7e9+tnQNWq7K0hKi4sbIiI6LayBg+GuV49KFJTEbBypdzp+LSPPw7ErFkhAIA33kjFiBFZMmdEJem339TYv18HhULguefS5U6HyK9wgU4iIro9pRIpM2ZA/ddfyBoyRO5sfNbKlQGYOjUUAPDii2l45plMmTOikla9ugUvvpiG5GQFqldnbw1RcWJhQ0REBWJu1gzmZs3kTsNnXbyoxKRJ9qJmzJh0jBvHaytKo5AQgfHj+d4TeQILGyIiKjyDAapLl2CpW1fuTHxG1apWzJ+fghMn1HjllXSuMk9EVMx4jQ0RERWK6swZlL3/fkQ++iikLF4fcjvWHKON+vY1YPLkNBY1pdCff6rQs2cZ7N+vlTsVIr/FwoaIiArFUqkSAEAZG4ugDz+UORvvduCAFl27RuH6df65Le3mzQvGL79osHGjXu5UiPwWj7RERFQ4ej3S3nwTABD00UdQ/vuvzAl5p0OHNHjyyQj89ZcaixcHyZ0Oyeivv1TYvVsPSRK8torIg1jYEBFRoRkffBDZrVtDys5GyPTpcqfjdY4e1WD48AgYjRI6dTLi9dfT5E6JZDRvnn3dmh49jKhd2yJzNkT+i4UNEREVniQhddo0CKUS+l27oDl0SO6MvMZvv6nx6KMRMBgUaNfOiMWLk6BWy50VyeWff1TYudM+/GzcOK5bQ+RJLGyIiKhILHXrInPoUABA6OTJgIXfRJ88qcKQIZHIyFCgZctsfPppMnQ6ubMiOc2dax+G2L27AXXr8jNC5EksbIiIqMjSX3gB1vBwWCpXhpReur+NFgJ45ZUwpKQo0KSJCStWJEGvF3KnRTL65x+BHTvslS17a4g8j+vYEBFRkYnwcMR/8w1s5crJnYrsJAn4+OMkTJ8egpkzUxEUxKKmNMowZWDWsVnYd2kfrEIgYkhPVEjrico1awDgJBJEnsTChoiI7khpL2pMJkCjsf+/fHkbFi1KkTUfkk+GKQM9t/XE2eSzsMFmv7PmR0jGEvTcVhPbe21HkIbFDZGnsLAhIqJioYiLQ/CsWcgcMQKW+vXvaFuJiQoIIaF8efvtrCwJn30W4Da+Th0L2rfPBmAvNJYvD3QbW726BZ062WOFAD7+2H1s5cpWPPig0Xn7008Dc11KlJYm4bPPAtGuXTY6dTKiV6+bsStWBCA72/VKnGXL2tC3r8F5e/XqAGRkuI4ND7dhwICbsevW6ZGS4nokeXCwwODBNxdN3bRJj/h417EBAcDEiTdvb9umQ2ys0mWsWg08/nim8/auXTpcvuw6FgCefvpm7N69Wly44P504/HHM52TKxw4oMXp0+5jhw7NhP6/ZWAOHtTg77/dz8oweHAWgoPtvWY//aTBiRPuYx9+OAsREfbYo0fV+OUXjdvYvn0NKFvWXrT89psaR47cjP3q4vc4c70HBARQ5hRQexcAwAYbziafxbvH3sW0VtPcbpuI7gwLGyIiKhYhb7+NgA0boLpwAYlffmkfm1UI168r8NVXOuzcqcfhwxqMGpUJx/qfmZkSpk0LdfvcAQOynIWN2Zx/bM+eBmdhAyDf2I4djbkKm7ffDoHRmPf32rQpAFevKnMVNu+/H4zkZNcn/40amXIVNvPnB+HqVdd/kuvUMecqbBYtCsLZs65P0mNiLLkKm6VLA3HihOuT9DJlrLkKm5UrA3H4sNZlbECALVdhs2ZNAA4ccD8rQs7CZsOGAOza5X5RyqFDbxY2W7bosXGj+wL24YcN0OvtRcWuXXp89pn7orR7dyOCg60AgH37dFiyxH1PSYcO2YiIsFes332nw9y5wW5jW7QwOQubH37Q4u23Q3I8OvC/HwABccB9M4EW8wDJXtzsvbSXhQ2RB7GwISKiYpH+0kvQbd8O7ZEj0G3bBmPv3rd9zpUrSuzcqcOuXXocP66GEDeLhkuXbhYFWq1Av35ZrjYBAGjSxOT8v1KZf2zjxqZct/OLrVfPnOt2794GmM32XqHvv9chNVUBvd6Gtm2z0bBh7tgePYzIzHRd3FWtas11u2tXI5KTXfesVKiQO7ZzZyPuucfsMjYy0pbrdocO2ahZ0/VMXPbejJuFQdu22Xley0GrzX29UOvW2QgPt7mMvVWLFibodO6vN1LmqP2aNjXBls9mNZqb22nUyOS2fQEgIOBm7N13m/N9n4OCbr7oXXflHxsWdjO2du3csbsu7oLRcrMIhToLyJGi2WaGEAJSIYt+IioYSQjhlVc3xsfHw2x2feAuSZIkoXz58oiNjYWXNpVPY/t6FtvXs9i+eQXNnYuQ99+HpUIFxB88CKF3/029zQY0alQOCQk3z2wbNzahe3cDunUzokoVm1e2b1qahIEDI3HihAZly1rx5ZcJqF7ddUHgzbj/Fr/mXzTHlYwrbh+vFFQJRwYdKcGM/Bf3X8/ypvZVq9WIiooqUCyneyYiomKTMWoULJUqQXXtGoL+G0cmBPD33yrMnh2MRx6JdH4jr1AA3boZ0bJlNqZPT8XRo9exfXsCRo3KROXK3lkoZGZKeOwxe1ETEWHFunWJPlnUkGd0rtIZCjenVgoo0KVKlxLOiKh04VA0IiIqPno90t58E+FPPYV/PjyCzxKBHd+XzXXx+C+/qNG0qb1H/u23Uwt7KY6s1q4NwLFjGoSG2vDFF4moXZsLLtJNE5tOxKFrh3LPigZ7UVMrvBZebvqyjNkR+T8WNkREVKy2KvthirYH/s0uD6yy36fVCrRtm41u3Qy5igFfKmoA+wxe8fEKdOliRP36LGootyBNELb32o53j72LvZf2wibZoBAKdK7SGS83fZlTPRN5GAsbIiIqMosFOHJEg6gom7NgCY8Q+De7PAJU2ejQIRvd+ljQsWO2zy5Y6bjcU622F2KvvMIV5Mm9IE0QprWahumtpyM6OhrXr1+X/RoFotKChQ3R/9u78/CmqvwN4O/N1qT7BpRSKJRSFgsIA+owbqAstoA/RlFAQUQRLYOKsjgUGdlUEBEUHUZBkVEUdZQBW7GICyhFGZUdlVUEWrqmaZs99/7+uJA0NCltaZqmfT/Pw0OTfHNzcrik98295xwiqhOrVZ7mNjtbi61btSgpUWLChEo891wZAHlmqzffLMGNN1qg0wX2AZ3DATz6aBQsFuCf/yxFkOfZkIk84uxnRI2LwYaIiC5LFOW1QLKytPjiC3ma44siI0W36XIVCmDoUNd6LpAkKE+fhiMxsTGbfMVEEXjyyUhs3qyDWi1h/341+vf3/2ydRETkGYMNERF5ZLcDqgu/JQQBeOaZcJw+Ld/RqpUDw4aZkZZmwp//bHUusHgpRVERoqZMgfqXX3B+505I0dGN1PorI0nAnDkR+PDDYCiVEl57rZShhoioiWOwISIiJ4NBwLZtWmRna7F3rwa5ueeh0cjBZvx4I/LzFUhPN6NfP6vbworeiJGRUJSVQaHXI3zZMpQ9+6zv38QVkiQ5xP373yEQBAkrV+qRlma+/BOJiMivGGyIiFq4khIFPv9cDjM7dwbBZnONC/jhBw2uv94KAMjIqKj7xlUqlC1YgNjRoxH873+j8p57YL/qqoZquk8sWRKGNWvk2auWLdNj1CjTZZ5BRERNAYMNEVELtnGjDjNnRsLhcIWZlBQb0tLky8x69LjyKY2tAwbAlJ4OXVYWIv7xDxR/+GGTnef5zBkl1q4NAQAsXqzHmDEMNUTUvKkOHoTy/Hkoz5+H4vx5KPPzoSwoAD7+2N9NqzMGGyKiFuLMGSWys7Xo1cuG666Tz8L07GmDwyEgNdWKtDQz0tPNSE5u+PVZDPPmQbt9O4Jyc6H99FOYR4xo8NdoCAkJDmzYUIL9+9WYONHo7+YQEdWLoqQEivx8OawUFMhh5UJwcbRrB8OCBc7a2LvugqKsrPpG8vKAkJBGbPWVY7AhImrGTpxQIjtbh+xsLfbt0wAA/vpXozPYdO9ux+7d59G+vcOn7XAkJKAiIwNhy5cjfOFCWG69FZJO59PXrAuDQUB4uDw1df/+VvTvb/Vzi4iILiFJEMrKXGdXqoQVMSYGFdOnO0tb33ADFHq9x83Yund3v92jB4Tycoht2sARF+f8OzI6GrBYfPmOGhyDDRFRM+NwACtXhiI7W4cjR1zTlSkUEq691ooBA1wH7YIAn4eaiyoyMqB7/31IoaFQ5OXBkZTUKK97Oe+/r8Ozz4Zjw4ZipKY2/NkqIqIaSRKE8nJXWCkogPL8eYghITDed5+zrE2/flDm53vchK1bN7dg44iLg6RQOEOKo00b+ec2beDo0MHtucUffVRte4IgyMEmL6+B3mTjYLAhIgpwkgScPq1EYqIcUJRKOEONSiVhwAAL0tPNGDrUjFatxMtszYft1OlQvHGj/EtV1TR+/WzapMOMGZGQJAFZWTqkppb7u0lE1IwIFRXOMyvK8+chqVQwjxzpfDx2+HCofvkFClP18Xy2bt3cgo0YGQllfj4cUVEQ4+LgaN3aGVbsHTu6PbcwJwe1mrqymWkav1mIiKhORBH46Se18zKzwkIl9u/PR0iIfDnVo4+Ww2QSMGSIGVFRkp9b69JUztIAQHa2Fo8+Koea8eMrMWsWQw0R1Y5gNDrPrsDhgPUvf3E+FvXgg1D/+isU589DUVnp9jxb165uwUYwm52hRoyIcDuzYu/Uye25xe+/DzEsDNBqL9/AFhhqAAYbIqKA4XAA33+vQXa2Fp99pkN+vusXl1Yr4vBhlXMRyZEjm/i6KxYLQt94A9Z+/WC97rpGf/nt24OQkREFh0PA6NFGPPtsWVOdqI2IGpPJBGVBAQSTCfZu3Zx3h8+dC/Vvv8mzhp0/D0W564sQW0oKCr/6ynlbdeoUVCdOOG+LYWHOsyv2zp3dXq501SpIOh0crVsDlxl3KLZqdaXvrtljsCEiChDr1oVg3rwI5+3QUBGDB5uRlmbGwIEW6HRN58zM5YStXImwlSth694dhVu3NuqlaTt3ajB5cjRsNgEjR5rw4ot6KBSN9vJE5A8WCxQGg1s4CH3lFaiOHXNNc3z+vHN2sEvDStDu3VAfOeK2SVGnky8JS0x0u79s/nxAoXCefZFqmFmsaniiK8dgQ0TUxJjNwI4dQcjO1uGWW8wYMUI++zJ4sBnLl4dhyBB5jZkbb7QgKMjPja2nigcfRMjbb0N95AiC333X7TpyX5IkYPXqUFgsAoYONeHll0tb6hUbRM2DKLqti6X74AOoTpyAsqDAFVby86EsLYWtSxcUfv21q3bzZqgPH662SUmrhaTRuN1X/thjEGw2t0vFpNBQj2tyVb0sjRoXgw0RURNgNAr48ssgZGdr8cUXWlRWyqcQSksVzmDToYMD+/blN5Vx91dEio6GYeZMRGZmInzpUphGjoQUFeXz1xUE4I03SrFqVSgee6wcavXln0NE/hX0zTdQ/v6725kVZX4+UFSE2IgIt7ASumYN1IcOedyOoqTE7Xbl+PFQGAzyTGFt2shnX9q0gRQeXi2wNNW1t8hdM/j1SEQUuBwO4OGHo/Dll0Ewm13XQ7Vt60BamskZai5qDqHmIuO99yLknXegPnIE4cuWoWzxYp+9VnGxAjEx8oxwwcESJwog8jPVkSNQnjnjvuL9hb+l4GAUV1n1PnzxYq9hRXnJbGKmtDRY+/d3DyutW8uB5ZIvT4wTJjT8GyO/aka/IomImr6SEgE//aTBrbfKi54plUBRkQJmswKJiXakpcmXmV19ta35j/tQqVA2fz5i77oLwevXo/Lee2G/ZOG4hvDbbyrccUcM7r+/EtOnV3CSACIfUZSUQJGX53EBSahUKH3jDWdt5PTp0Bw44HE7Ymio223LgAGwJyS41mGJi4MUF4fo1FQUXvJBWfH44w3+vihwMNgQEflYQYECn32mRXa2Drm58nXbe/eeR3S0fAYhM9MArVbCVVfZW9xBt/Uvf4EpLQ267GyEL1yIkg0bGnT7J04ocffdMSgpUWLbNi0eeaTichMPEVFVkgShtNT9zMqFwAJJQtlzzzlLo8eN8x5WLhlAf3HQfNWwUvVnSJLzcjDDM89U254gCEDbthDz8uRaIjDYEBH5RF6eAp9+Kq8xs2ePBpLkSixXXWXDuXMKZ7Dp18/mr2Y2CYZ58wBRhGHOnAbd7h9/yKGmoECJ7t1tePfdYoYaooskCYJe71zl/uLZFdhsqHjiCWdZ7MiR0Pz0k8dNiMHBbsHG0bYtHPn5bgPsnWGlTRu3sKJfscKnb49aJgYbIqIGIopwXj725ZdaPPOMa2rmPn2sSE834bbbzOjY0eGnFjZNjvbtUbp2bYNuMy9PgbvvjsG5cyokJ9vw/vvFiI7mt7rUAkgShPJyt7AimEwwjh/vLImaNAnar7+GYLFUe7oYHIyK6dOdAUSMiQEAOKKj5ZByYYC92KaNvPZKlQ++0jff9DhLGFFjYbAhIqonSQIOHQLWrQtFVpYWY8ca8cAD8irTw4aZ8cknFtx2mxnDhpnQrp3o59YGDkVJCcTo6Ho/v7BQDjW//65CYqId779fjNhY9j8FPqGiwm2BSPPQoc7HImbNQtB338mr3V8yoF7U6WC8915n6BBE0RlqxMhIV1i5MMgeDodzppLSFSsgBQcDl0x/7LmBDDXkXww2RER1IEnAwYNqZGXJY2aOHweAMADAZ59pncEmJkbERx8V+6+hgchsRsTTT0P33/+i8KuvICYk1GszO3YE4fhxNeLj7fjgg2K0bctQQ02bYDJBkZ8PRWkpbH37Ou8PW7YMmt27nWNbFJWVzsdErRb5x445w4SisBCqU6dcj4eHu10KBpvNGU7KnnkGZQsWyGdctNoa2yZFRjbcGyXyMQYbIqJacjiAQYNa4dgx1+InGg1w443yTGaDB5treDZdVlAQVCdOQFFZifBFi6Bfvbpem7njDhMcDqB/fysSEnjZH/mR2QzF2bNwxMc77wpetw6aH390X0DSYAAgLwyZVyWsqA4fRlBurtsmxdBQ59kVmM24OHCs4vHHUfnww67V7msYUObo2LGB3yhR08BgQ0TkgcMBfP+9Bj//rMHUqRUA5KmZO3Rw4MwZJQYNsiAtzYx7742C0VgKibPyXDlBQNn8+Wh1223Qbd4M48SJwKhRtXpqRYUAux2IjJT/He66y3SZZ5BPSJI85sJul3+ucjZAUVAAwWaT/3PZ7RAcDufPCAqCvUsXZ616zx4ojEb5MYdDrr3wHDE4GJYhQ5y1uk2boCgqcqu7+LMYEoLKRx5x1oasXi2f1XA4IFyou/izpNO5DWgPX7AA6v373doq2O3OMSWFOTnO2sjHHkPQN9+41zocgNmM1kFByDt+3BlWgnbuhG7r1mpdJ+p0EOPiIBiNkC7MIFY5cSLMI0a41mS5uNq9B7bevev2b0XUDDHYEBFdYLMBu3YFIStLi61btSguVgIAbr/d5Pzm/7nnyhAdLSI4WIIgCIiIAIxGf7a6ebGnpsI4bhxC3nkH4XPnAiNHXvY5JpOAiROjYTAoLkwS0EiXnkmSfBBtt0O4cDAvOByQgoKcB6awWqH84w/XAbcoygfHF2odbdq4vj03maDdscP9YL7KAbW9c2dYr7vOWRu6dq3b41UP7G2pqTDdeadca7MhcuZMz7UqFUKvugrl06c731bsyJGAzeY68K9ysG7t3x/6V15x1rb5058glJW5H8xfYOnfH8WbNjlvtxo6FMqCAo9daU1NRdHnnztvRz3+uNtlVVXZO3VCQZVgE7pqFdRHjnisdcTFuQUbXXY2ND/+6LFWjIhwu60+dKja2ZKLpEtWyhXKy6EsLPRYC0GAUF4ur2YPwDRqFGx/+lP11e5DQ6uNUbHeeKPnbRKRRww2RNTi7dunxltvhWDbNi30etdib5GRIgYPNsNud9Xy0ibfK589G7otW6A+fBjIyIDqnntgS04GAKiOHoXu44+dAcFsBibkTEXuubYIVxtR8NlBRN/TQ649fBhhL73k9k37xVABUZS/Db8QnFQHDyJq2rRq3+Jf/Lnib39D5ZQpcu2hQ2g1bJgcZjy1/29/Q/nf/w4AUJ45gzY1HJxWPPAADAsWAAAUej2iJ03yWls5bpwz2AhWK8KrTLN7KePtt7uCjSAg+MMPvdaqHe77tHr/fvnMigeOxES324LZXG2guvOxqv9xAEgajRz6FAp5YLpSKQcEpbLaZBH25GRIwcHOxy/+DaXS7bIuADAPHAhbSorz8aq1l4YV49ixMA8c6Kqt+pxLxpqUP/ooKu+5x9VWpRJQqZx/V2V45hmUz5zpVieoVGidnIx8kwlVz+eahw/32F9EdOUYbIioxTEa5cuWwsPlw41Tp5T48MNgAEBsrANDh5qRnm7GgAEWqNU1bYl8QYyORvmTTyJi3jzg9dehTk11BhvlyZMIe/llAIANKozDf7AdqQhBBbJtQ3GVfTiMkIONoqQEuuxsr69jrvKtv2CxQP3bb15rhaqn5RQKr6FGfgNVHlOrIUZEuB/MXzwwViggRkU5S6WgIFj79nU7MJeqPMfWo4dbrfGuu9wP/C+8hqRSwV6lFkolDJmZ7gfmF36OjI1F5SULJ5asWSNvq2pbL/wsXjjrcFFhdjYgCNXqLrajqoLvv/feZ5coefvtWteWZ2bWutY4dmyta61/+Uutax0dOlS7TxAEICpKHgfDS1WJGgWDDRG1CAaDgC++0CI7W4uvvgrCo49W4LHH5LEzt9xiwQMPVOC228y45horlEo/N5ZQed99UBYVIaS4GPb27Z33OxITUTFpEuyCGpO+mowtJ/4ErdKK90f9Gz07/QWWPn2ctfbOnaF/9tlqB/MXQ4btwsrnAGBPSUHRBx9Ur73wtxgb66pNTkb+zz+7bavqgb1zMSPIa/TkHz5cq/csRUejaMuW2nWQVgv9Sy/VrlYQUJGR4eFuAZFt28J6ycrtlltvrd12Uf0MDhGRPzHYEFGzVVIiYNs2LbKydNi5MwhWq+v69Z9/dq3JEBoqYcECgz+aSB5UWCuw5H9LsK3DNoiJIhTHd2CwfTBm95uN0K5doZ+/EI8/HolPTgRDrZaw5q1y9B14Oyou2Y7Yti2M991Xq9eUwsJq/w29Wi3PSEVERE0Kgw0RNUt2O3DDDW3cxswkJ9uQlmZGeroJV11lr+HZ5C8V1gqM2DwCx0qPQYTrkq51h9bh23PfYsvILagoCcd33wVBqZSwenUpBg6svno6ERG1PAw2RBTwzp5V4LPPdNi3T42XX9ZDEOSrgm66yYyjR9VISzMhPd2MlBSGmaZuyf+WVAs1ACBCxLHSY1j6v6VYMGABPvmkCIcPqzFsGNcOIiIiGYMNEQWkU6eUyM7WITtb63ZZ2dSpFejWTQ4wL72kR1CQv1pI9ZHze061UAMAkACxJAk5v+dgwYAF6NDBgQ4dOEMdERG5MNgQUUDZti0IS5eG4/Bh13RlgiDhmmusSEszo3Vr10ExQ01gkSQJdtHLWbVvngZ2ZqJ8/GRIkryGEBERUVUMNkTUZEkScOiQChEREtq3l7+dVyqBw4fVUCol/PnPVqSnmzBsmHugocAkCAJUCg+/lr6bAXwtr/UilSQx1BARkUcMNkTUpIgisHevGllZOnz2mRa//65CRkY5MjPLAQDXX2/B8uWlGDzYjOhorg3R3AxJHIJ1h9a5Lkf7fiqw7QUAgDAoE3eOP+/H1hERUVPGYEPUTEkSsH+/GgcOAMXFGrfHevSwoVUr+cCxoECBI0e8r0LZtasNcXFybXGxAgcPeq9NTrahXTu5tqREwIEDGq+1SUl251mY0lIBGzcG44cfNNizR4OSEtdCMmq1hMJC18xmVquAuDjR67YTEuzo3Fnerskk4IcfvLchPt6BLl3kS58sFmD3bu/XrrVp43CO3bHbge++k2tjYqr3b2yswznrmiQBO3Z43250tIiePV2rvO/YoYEkeT4jERkpondvV+1332lgt3uuDQsT0bevq3b3bg0sFs+1wcEi+vd31e7Zo4HR6LlWq5Vw7bVW5+0ff1SjokLhsVatljBggKv255/VMBg81yoUEm64wYrZ/Wbj23Pf4uihcEgnBgJfLJULbliMlNv/g1n9Nnt8PhEREYMNUTN08KAK8+ZF4PvvLx5Qx7g9/q9/lWD4cHk2qdxcDTIyor1ua8WKUowebQIA/PSTGhMnxnitffZZPe67T16h/fBhNcaN8147d24ZHnmkEgBw/LgKCxdGeKyz2QQkJroGiZ85o6xxu1XP7hQUKGqsnTixEosXlwEADIaaa+++24jly/UAAItFuKTW/XkjRpiwenUpADnY1LTdW24xY/36Euft+++PgdnsOVQMGGDBhx8WO29PmRKF0lLPq4n26WPFp58WOW9PmxaJc+c8f+R37WrDl18WOm/PmBGBY8c8B9gOHezIzS1w3p47NwL793sOj7GxDuzb5zrDsnBheJV90l1wsIijR/MRqgnFlpFbcMtbFpzZ2xMAEHrj67jrbycxu/9mhGpCPT6fiIioTsEmJycHOTk5KCyUfwEmJCTgzjvvRJ8LKz1brVasX78eu3btgs1mQ+/evfHggw8iMjKywRtORN4VFSnx/fdB0GoldO0qwGazuT0eHu66hCsiQkKPHrZLN1HlcdfYlbCwmmujoly1ISHVayUJqKgQUF6uwNq1IZgypRIKhVwbE+OA3S4gPFxEaKiEqsMoYmOrTghQcxuqjrVRq2uujYtzBSalsuba+HhXrUIBZ61ara7WvwkJ7rN11bTdDh3cB8t3727zemalY0f32m7d7Cgr8zy2qFMn99qUFDsiIz1funfpdpOT7dB4OdFVtc8A+cybt7NGkZHubevY0YHycs99odW62haqCcUtvdvhfzYb7r5bhQceGAFguOcGERERXSBIklTri9T/97//QaFQoG3btpAkCd988w02b96MpUuXon379njjjTfw008/YerUqQgODsbatWuhUCiwcOHCOjessLCw2sGCPwiCgLZt2yIvLw916CqqJfZvwygpUeDgQRVuvFG+7EeSgH/9KwS3327Gn/7Uxq/9azIJ+OqrIGRna7Ftm9btsqVNmwrdLoEKNNx/fYv961vsX99i//oW+9e3mlL/qtVqtGrVqla1dTpj069fP7fbY8eORU5ODo4ePYqYmBh8+eWXeOyxx5CamgoAyMjIwPTp0/Hbb78hJSWlLi9FRLVgMgFr14Zi1apQSBKwa1cBYmJECALw8MOVfp89auNGHTIzI2AyucJMXJwDt91mQlqa2W0MCBEREdGVqPcYG1EUkZubC4vFgpSUFJw4cQIOhwM9e/Z01rRr1w6xsbEMNkQNzOEAPvpIhxdeCEdenjzGIjXViuJiBWJi/DPtcWmpgJwcLa66yobUVPnSpqQkB0wmBdq3tyMtzYy0NBP69rVB4Xn8OBEREVG91TnYnD59GpmZmbDZbNBqtZgxYwYSEhJw6tQpqFQqhISEuNVHRERAr9d73Z7NZnO75EwQBOh0OufP/naxDU2hLc0R+7duJAn45hsNFi1yLVDZrp0dTz1VgVGjTBcCg6svfd2/hYUKbN2qRVaWFrt2yTN0TZhQieefNwAA+vWzYevWQvTsaa8yZqb5/Ftz//Ut9q9vsX99i/3rW+xf3wrU/q1zsImPj8cLL7wAo9GI3bt349VXX8X8+fPr3YBPPvkEH330kfN2p06dsGTJklpfS9dY4uLi/N2EZo39WzunTwPjx8tnbCIjgcxM4G9/U0GrjQQQ6fV5Ddm/Nhvwz38C//kPsHOnHLYu6tUL6NcvBG3bur7gaNeuwV66yeL+61vsX99i//oW+9e32L++FWj9W+dgo1KpnG8yKSkJx48fR3Z2NgYMGAC73Y7Kykq3szZlZWU1zoo2atQoDB/umu3mYjIsLCyE3W739rRGIwgC4uLikJ+f7/fBU80R+/fy9HrBOZuVWg088EAYBAGYNq0C0dESSku9P7eh+re0VEBUlPx8SQJefLEVTp+WPz6uvtqKtDQz0tPN6NRJnjErL6/eLxVQuP/6FvvXt9i/vsX+9S32r281pf5VqVS+mTzAE1EUYbPZkJSUBKVSiQMHDuC6664DAJw7dw5FRUU1jq9Rq9VQqz2vl+DvjqxKkqQm1Z7mhv1bnV4vYNWqMLz1VjC2bClCjx5y0P/HPwzOmtp2WX369+hRFbKytMjO1uHMGSX27s13TgGckVEBs1lAWpoZ7dq5pv9tqf+E3H99i/3rW+xf32L/+hb717cCrX/rFGw2bNiAq6++GrGxsTCbzfj2229x+PBhZGZmIjg4GIMGDcL69esRGhqK4OBgvPnmm0hJSeHEAUR1YLEA69aF4OWXw6DXy6Ps//tfHXr0KPfp60oScOiQCtnZOmRna3H0qOsLB6VSwsGDaucsZuPHG33aFiIiIqK6qlOwKSsrw6uvvorS0lIEBwcjMTERmZmZ6NWrFwDgvvvugyAIePHFF2G3250LdBLR5YkisHmzDs8/H4Y//pD/a3btakNmpgGDBll8/vqvvx6CBQsinLfVagk33GBBeroJQ4ZYEB3tn9nWiIiIiGqjTsHmkUceqfFxjUaDBx98kGGGqB4mTIjGV19pAQBt2jgwc2Y5Ro82QnXFF4y6cziAPXs0yM7WYtAgC26+WQ5NN95ogVYr4eab5fEyt95qRnh44Jx+JiIiopatgQ+ZiKi+br7Zgj17NMjIqMDkyZUIDm64UGGzAbt2aZCVpcPnn2tRWCivfVNSonAGm27d7DhwIL9BX5eIiIiosTDYXMbvvyuxZw9QUhIEoPoBX9++NsTGypfonD2rxKFD3ru0Vy8b4uLk2rw8BQ4c8DxpAgBcdZUN7drJtQUFCuzd6722e3c72reXB3AXFyvw44/ea7t0sTtnriotFbBnj8ZrbVKSHcnJcm15uYDcXO+1HTs6kJIiD243GgV8+6332vbtHejeXa41m4HNm733b3y8w7nYo90OfPllkNfttmkjondveQyIJAHbtnmvjY0V3Va937YtyOvA96goEf37u2q//DII3ibsi4iQcO21VuftHTuCYDZXrystFfDpp8G45x4jhg2TC5KTbVi8WI/wcKla/2m1Em680bXd3FwNyss9zy2v0cAZVmw2YNIkYNOmNigtda2KGREhYvBgM0aNMjnvEwQw1BAREVHAYrC5jC++CMLTTwNAtMfH33mnGAMHygeRO3dq8OSTUV639frrJUhPlw9if/hBg4wMz9sEgBUrSjF6tHzQuXevGvffH+O19rnn9JgwQR7MfeSIqsbap58uw8MPVwIATpyouXbGDAOmT68AAJw5o6yxdurUcsyZIw9uLyxU1Fh7//0VWLRIntnLYFDg9tsBb/17991GLF+uBwCYzUKN2x050oR//lOe+1iSUGPtrbea8fbbJc7bU6ZEw2LxHBQGDLDgww+LnbenTYtyDuq/VJ8+Vnz6aZHz9pNPRuDcOe//zU6dUmHwYDOUSmDevAgcP+45lHboYEduboHz9vz54ThwwHN4bNXKgb17zwOQp4f+6SegtFSBmBgHhg0zIy3NjAEDLM4ZzoiIiIiaAwaby2jVSsS11wI2m9XjN/phYa4B1dHRIvr0sVYvuiAy0lUbFSXVWFt1oHZERM21F88Yye2pubZNG1dtSEjNtRfPLgHyGYOaauPjXVP+ajQ11yYkuGpVKqnG/u3QwXVqRKFAjdvt2NH9NEpNtZ07u9defbUVVqvnYNOli3ttr15WlJd7DjZdu9rcbqem2tCmjQhJAoqKFMjPV8Jul18nOtqB5ctLoZSvCkOPHnavY1ri4hxut7t2tXsdexMV5T7I//nngYqKYlxzjaXBx+sQERERNRWC1EQnpy4sLITNZrt8oY8JgoC2bdsiLy8voObxDhQtoX937NBgzpxInDwpp4qkJDvmzDFg2DAzBM9ZqsG0hP71J/avb7F/fYv961vsX99i//pWU+pftVrdeAt0ElHNHA4BJ0+qEBvrwBNPlGPcOCO8rElLRERERPXEYEPUwI4fV+LoUbVzUoCbb7Zg2TI9RowwITSU3yoRERER+QKDDVEDKSpSYPnyMLzzTjCCgyXs2lWA6GgRggCMHWv0d/OIiIiImjUGG6IrZDQKeP31ELz2WigqK+VJBa691gKTyccDaIiIiIjIicGGqJ4cDuCDD4KxbFkY8vPlqc1697Zi7lwDBgzwPiMbERERETU8Bhuievr9dyVmz46AwyGgQwc7nnrKgBEjzFB4ngmaiIiIiHyIwYaoDs6eVaJdO3lNmaQkBzIyKhATI2LChEoEBfm5cUREREQtGIMNUS2cPq3EkiVh2LJFh88/L0T37vKinU89Ve7nlhERERERwGBDVKPSUgErV4bh7bdDYLUKEAQJ334b5Aw2RERERNQ0MNgQeWA2A2+9FYJXXglDWZk8aOaGGyyYO7cMqakMNURERERNDYMN0SUkCbj99lgcPKgBAHTvbsPTTxtw000WP7eMiIiIiLxhsCG6QJIAQZD/3HmnCcXFSsyaZcAdd5igVPq7dURERERUE05MSy3eoUMq3HNPND7/XOu87777KrFz53ncdRdDDREREVEg4BkbarHOnlXghRfC8dFHOkiSgPPnlRg61AxBADQaf7eOiIiIiOqCwYZaHINBwKuvhmLNmlCYzQIAYMQIE556ygBB8HPjiIiIiKheGGyoRfnvf7XIzIxAaal8fdm111owd64Bffva/NwyIiIiIroSDDbUooSGSigtVSI52YbMTAMGD7bwLA0RERFRM8BgQ83a7t0a5OUpMWqUCQAwaJAFa9eW4NZbzVBx7yciIiJqNnhoR83S0aMqPPtsGHJydAgPF3HTTWZER0sQBGDYMLO/m0dEREREDYzBhpqV8+cVePHFMLz3XjBEUYBSKeH2203+bhYRERER+RiDDTULlZUCVq8OxerVITAa5eWZhg41Yc6cciQn2/3cOiIiIiLyNQYbahby8pRYuTIUDoeAPn2sePppA6691urvZhERERFRI2GwoYAkScChQyqkpspnY5KT7XjyyXJ07mxHerqZM50RERERtTAKfzeAqK5+/FGNv/41Brfd1gq//OLK5o89VoHhwxlqiIiIiFoinrGhgHHypBLPPReOrCwdAECrlXDokBrdunEMDREREVFLx2BDTV5JiQIrVoRi/foQ2GwCBEHCXXeZMGOGAfHxor+bR0RERERNAIMNNWkOB5Ce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uYAlS8Jw/fWt8d57IRBFAd9/r/F3s4iIiIiICDxjc1lWK7BqFfCPf7RCSYk8aKZ/fwvmzjWgXz+bn1tHREREREQAg81lTZ4chW3bAECJpCQ7MjMNGDrUzJnOiIiIiIiaEAabyxg3zoh9+7R44okyjBlTCbXa3y0iIiIiIqJLMdhcxpAhFoweDRgMRkic7IyIiIiIqEni5AGXIQhASIi/W0FERERERDVhsCEiIiIiooDHYENERERERAGPwYaIiIiIiAIegw0REREREQU8BhsiIiIiIgp4DDZERERERBTwGGyIiIiIiCjgMdgQEREREVHAY7AhIiIiIqKAx2BDREREREQBj8GGiIiIiIgCHoMNEREREREFPAYbIiIiIiIKeAw2REREREQU8BhsiIiIiIgo4DHYEBERERFRwGOwISIiIiKigMdgQ0REREREAY/BhoiIiIiIAh6DDRERERERBTwGGyIiIiIiCngMNkREREREFPAYbIiIiIiIKOAx2BARERERUcBT+bsB3qhUTatpTa09zQ3717fYv77F/vUt9q9vsX99i/3rW+xf32oK/VuXNgiSJEk+bAsREREREZHP8VK0yzCZTJg9ezZMJpO/m9IssX99i/3rW+xf32L/+hb717fYv77F/vWtQO1fBpvLkCQJJ0+eBE9s+Qb717fYv77F/vUt9q9vsX99i/3rW+xf3wrU/mWwISIiIiKigMdgQ0REREREAY/B5jLUajXuvPNOqNVqfzelWWL/+hb717fYv77F/vUt9q9vsX99i/3rW4Hav5wVjYiIiIiIAh7P2BARERERUcBjsCEiIiIiooDHYENERERERAGPwYaIiIiIiAKeyt8NaAq2bt2KLVu2QK/XIzExEZMmTUJycrLX+tzcXGzcuBGFhYWIi4vDPffcg759+zZiiwNLXfr366+/xmuvveZ2n1qtxrvvvtsYTQ0ohw8fxubNm3Hy5EmUlpZixowZuOaaa2p8zqFDh7B+/Xr88ccfiImJwR133IGbb765cRocYOrav4cOHcL8+fOr3f/6668jMjLShy0NTJ988gl++OEHnD17FhqNBikpKbj33nsRHx9f4/P4+Vs79elffv7WXk5ODnJyclBYWAgASEhIwJ133ok+ffp4fQ733dqra/9y370ymzZtwoYNG5CWloaJEyd6rQuEfbjFB5tdu3Zh/fr1mDx5Mrp06YKsrCwsXrwYK1asQERERLX6X3/9FStXrsS4cePQt29ffPvtt3jhhRewZMkSdOjQwQ/voGmra/8CgE6nw8qVKxu5pYHHYrGgY8eOGDRoEJYtW3bZ+oKCAjz//PMYPHgwpk2bhoMHD2L16tWIjIzE1Vdf7fsGB5i69u9FK1asQHBwsPN2eHi4L5oX8A4fPoyhQ4eic+fOcDgceO+997Bo0SIsX74cWq3W43P4+Vt79elfgJ+/tRUdHY1x48ahbdu2kCQJ33zzDZYuXYqlS5eiffv21eq579ZNXfsX4L5bX8eOHcO2bduQmJhYY12g7MMt/lK0Tz/9FLfccgsGDhyIhIQETJ48GRqNBl999ZXH+uzsbFx99dUYOXIkEhISMGbMGCQlJWHr1q2N3PLAUNf+BQBBEBAZGen2h6rr06cPxowZc9mzNBfl5OSgdevWmDBhAhISEjBs2DBcd911yMrK8nFLA1Nd+/eiiIgIt31XoWjxH7MeZWZm4uabb0b79u3RsWNHTJ06FUVFRThx4oTX5/Dzt/bq078AP39rq1+/fujbty/atm2L+Ph4jB07FlqtFkePHvVYz323buravwD33fowm8145ZVXMGXKFISEhNRYGyj7cIs+Y2O323HixAn83//9n/M+hUKBnj174rfffvP4nN9++w3Dhw93u693797Ys2ePL5sakOrTv4D8Hy0jIwOSJKFTp04YO3as129oqPaOHj2Knj17ut3Xu3dvrFu3zj8NaqZmzZoFm82G9u3bY/To0ejWrZu/mxQQjEYjACA0NNRrDT9/6682/Qvw87c+RFFEbm4uLBYLUlJSPNZw362/2vQvwH23PtasWYM+ffqgV69e+Pjjj2usDZR9uEUHG4PBAFEUq6X6yMhInDt3zuNz9Hp9tUuoIiIioNfrfdTKwFWf/o2Pj8cjjzyCxMREGI1GbN68GXPnzsXy5csRExPTCK1uvrztuyaTCVarFRqNxk8tax6ioqIwefJkdO7cGTabDdu3b8f8+fOxePFiJCUl+bt5TZooili3bh26du1a4yUN/Pytn9r2Lz9/6+b06dPIzMyEzWaDVqvFjBkzkJCQ4LGW+27d1aV/ue/W3XfffYeTJ0/iueeeq1V9oOzDLTrYUNOTkpLi9o1MSkoKpk+fjm3btmHMmDF+bBlRzeLj490GZnft2hXnz59HVlYWpk2b5seWNX1r167FH3/8gQULFvi7Kc1SbfuXn791Ex8fjxdeeAFGoxG7d+/Gq6++ivnz53s9+Ka6qUv/ct+tm6KiIqxbtw5z585tdl9qtuhgEx4eDoVCUS1t6vV6r9dmRkZGoqyszO2+srIyXsvpQX3691IqlQqdOnVCfn5+wzewhfG27+p0umb3wdZUJCcn45dffvF3M5q0tWvX4qeffsL8+fMv+80qP3/rri79eyl+/tZMpVIhLi4OAJCUlITjx48jOzsbDz30ULVa7rt1V5f+9fRc7rvenThxAmVlZZg9e7bzPlEUceTIEWzduhUbNmyoNj40UPbhFj2qVaVSISkpCQcPHnTeJ4oiDh486PU6zpSUFBw4cMDtvv3796NLly4+bWsgqk//XkoURZw+fRpRUVG+amaL0aVLF4/7bm3/LajuTp06xX3XC0mSsHbtWvzwww+YN28eWrdufdnn8PO39urTv5fi52/diKIIm83m8THuu1eupv71VMt917uePXti2bJlzpnmli5dis6dO+P666/H0qVLPU56Eyj7cIsONgAwfPhwbN++HV9//TXOnDmDNWvWwGKxONf2WLVqFTZs2OCsT0tLw759+7BlyxacPXsWH3zwAY4fP45hw4b56R00bXXt348++gj79u3D+fPnceLECbz88ssoLCzELbfc4qd30HSZzWacOnUKp06dAiBP53zq1CkUFRUBADZs2IBVq1Y564cMGYKCggK88847OHv2LD7//HPk5uYiPT3dH81v8urav1lZWdizZw/y8/Nx+vRprFu3DgcPHsTQoUP90fwmb+3atdi5cycee+wx6HQ66PV66PV6WK1WZw0/f+uvPv3Lz9/a27BhAw4fPoyCggKcPn3aefuGG24AwH33StW1f7nv1o1Op0OHDh3c/gQFBSEsLMw5Di9Q9+EWfSkaAAwYMAAGgwEffPAB9Ho9OnbsiDlz5jhPrRUVFUEQBGd9165d8eijj+L999/He++9h7Zt22LmzJlNag7vpqSu/VtRUYF//etf0Ov1CAkJQVJSEhYtWsRrlj04fvy424KQ69evBwDcdNNNmDp1KkpLS50H4QDQunVrPPXUU3j77beRnZ2NmJgYPPzww1zDxou69q/dbsf69etRUlKCoKAgJCYm4umnn0Zqamqjtz0Q5OTkAACeeeYZt/szMjKcX3zw87f+6tO//PytvbKyMrz66qsoLS1FcHAwEhMTkZmZiV69egHgvnul6tq/3HcbXqDuw4IkSZK/G0FERERERHQlWvylaEREREREFPgYbIiIiIiIKOAx2BARERERUcBjsCEiIiIiooDHYENERERERAGPwYaIiIiIiAIegw0REREREQU8BhsiIiIiIgp4DDZERERERBTwGGyIiIiIiCjgMdgQEREREVHAY7AhIiIiIqKA9/+1RHc6z3w1bgAAAABJRU5ErkJggg==\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 0)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 266,
-   "id": "5862bfa2",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 99)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 268,
-   "id": "bbc7b78e",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 199)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "c71389ba",
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3 (ipykernel)",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.10.13"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 5
-}
diff --git a/code/3_deep_reinforcement_learning/5_DQN_monopoly2.ipynb b/code/3_deep_reinforcement_learning/5_DQN_monopoly2.ipynb
deleted file mode 100644
index c5d7d9e..0000000
--- a/code/3_deep_reinforcement_learning/5_DQN_monopoly2.ipynb
+++ /dev/null
@@ -1,732 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "markdown",
-   "id": "a688cb11",
-   "metadata": {},
-   "source": [
-    "# Trading Game"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 135,
-   "id": "0672c8ab",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "from gymnasium import spaces\n",
-    "import numpy as np\n",
-    "from functions import *\n",
-    "from itertools import count\n",
-    "buyer_strategies = ['Honest']\n",
-    "seller_strategies = ['Random','Random','Random','Random','Random','Random','Random','Random']\n",
-    "nbuyers, nsellers = len(buyer_strategies), len(seller_strategies)\n",
-    "nrounds, nperiods, ntokens, nsteps, gametype, nbuyers, nsellers = 1, 100, 3, 6, '1234', len(buyer_strategies), len(seller_strategies)\n",
-    "R1, R2, R3, R4 = gametype_to_ran(gametype)\n",
-    "game_metadata = [nrounds, nperiods, ntokens, nbuyers, nsellers, nsteps, R1, R2, R3, R4]\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "rnd = 0\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "period = 0\n",
-    "num_actions = 6\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.1\n",
-    "max_frac = 1.0\n",
-    "action_to_bid_frac = np.linspace(0,1,num_actions)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 136,
-   "id": "481823f6",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "class TradingEnv(gym.Env):\n",
-    "    def __init__(self, db, nsteps, render_mode = None):\n",
-    "        self.db = db\n",
-    "        self.action_space = spaces.Discrete(num_actions)\n",
-    "        self.observation_space = spaces.Discrete(num_states)\n",
-    "\n",
-    "    def reset(self, rnd):\n",
-    "        self.db.reset_period(rnd)\n",
-    "        observation = np.array([0])\n",
-    "        return observation, None\n",
-    "\n",
-    "    def step(self, action, timestep, period, rnd, seed = None, options = None):\n",
-    "        bid_frac = action_to_bid_frac[action]\n",
-    "        # convert action to bid\n",
-    "        self.db.buyers[0].next_token()\n",
-    "        min_bid = self.db.buyers[0].value*min_frac\n",
-    "        max_bid = self.db.buyers[0].value*max_frac\n",
-    "        bid = np.round(max_bid * bid_frac + (1-bid_frac)*min_bid,1)\n",
-    "        \n",
-    "        # simulate market\n",
-    "        bids = [buyer.ask(self.db) for buyer in self.db.buyers]\n",
-    "        bids[0] = bid\n",
-    "        asks = [seller.ask(self.db) for seller in self.db.sellers]\n",
-    "        current_ask, current_ask_idx, current_bid, current_bid_idx = current_bid_ask(bids, asks) \n",
-    "        sale, price, bprofit, sprofit, buy, sell = buy_sell(db, current_bid, current_bid_idx, current_ask, current_ask_idx)\n",
-    "        step_data = [rnd,period,timestep,bids,asks,current_bid,current_bid_idx,current_ask,current_ask_idx,buy,sell,price,sale,bprofit,sprofit]\n",
-    "        self.db.add_step(step_data)\n",
-    "        \n",
-    "        # compute reward, new state\n",
-    "        reward = np.array([0])\n",
-    "        if (sale == 1) and (current_bid_idx == 0):\n",
-    "            reward = np.array([bprofit])\n",
-    "        observation = np.array([timestep + 1])\n",
-    "        \n",
-    "        # check termination \n",
-    "        if timestep == nsteps-1:\n",
-    "            terminated = True\n",
-    "        else:\n",
-    "            terminated = False\n",
-    "        return observation, reward, terminated, False, None"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "d66956ac",
-   "metadata": {
-    "scrolled": false
-   },
-   "outputs": [],
-   "source": [
-    "env = TradingEnv(db, nsteps)\n",
-    "rnd = 0\n",
-    "observation, info = env.reset(rnd)\n",
-    "for period in count():\n",
-    "    for timestep in count(): \n",
-    "        action = env.action_space.sample()\n",
-    "        observation, reward, done, info, reset_info = env.step(action, timestep, period, rnd)\n",
-    "        print(f\"Rnd: {rnd}, Period: {period}, New State: {observation}, Action:{np.round(action,1)}, Reward: {np.round(reward,1)}, Period End: {done}\")\n",
-    "\n",
-    "        if done:\n",
-    "            # If the episode is done, reset the environment\n",
-    "            print('done')\n",
-    "            observation, info = env.reset(rnd)\n",
-    "            timestep += 1\n",
-    "            break\n",
-    "    if period == nperiods:\n",
-    "        break\n",
-    "\n",
-    "# Close the environment when done\n",
-    "env.close()"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "1e5a30cf",
-   "metadata": {},
-   "source": [
-    "# DQN"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 137,
-   "id": "4936cfb1",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "import math\n",
-    "import random\n",
-    "import matplotlib\n",
-    "import matplotlib.pyplot as plt\n",
-    "from collections import namedtuple, deque\n",
-    "from itertools import count\n",
-    "import torch\n",
-    "import torch.nn as nn\n",
-    "import torch.optim as optim\n",
-    "import torch.nn.functional as F\n",
-    "\n",
-    "# set up matplotlib\n",
-    "is_ipython = 'inline' in matplotlib.get_backend()\n",
-    "if is_ipython:\n",
-    "    from IPython import display\n",
-    "plt.ion()\n",
-    "\n",
-    "# if GPU is to be used\n",
-    "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 138,
-   "id": "9b6e371b",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "Transition = namedtuple('Transition',('state', 'action', 'next_state', 'reward'))\n",
-    "class ReplayMemory(object):\n",
-    "\n",
-    "    def __init__(self, capacity):\n",
-    "        self.memory = deque([], maxlen=capacity)\n",
-    "\n",
-    "    def push(self, *args):\n",
-    "        \"\"\"Save a transition\"\"\"\n",
-    "        self.memory.append(Transition(*args))\n",
-    "\n",
-    "    def sample(self, batch_size):\n",
-    "        return random.sample(self.memory, batch_size)\n",
-    "\n",
-    "    def __len__(self):\n",
-    "        return len(self.memory)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 139,
-   "id": "399e6b30",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "class DQN(nn.Module):\n",
-    "    def __init__(self, n_observations, n_actions):\n",
-    "        super(DQN, self).__init__()\n",
-    "        self.layer1 = nn.Linear(n_observations, 256)\n",
-    "        self.layer2 = nn.Linear(256, 256)\n",
-    "        self.layer3 = nn.Linear(256, n_actions)\n",
-    "\n",
-    "    # Called with either one element to determine next action, or a batch\n",
-    "    # during optimization. Returns tensor([[left0exp,right0exp]...]).\n",
-    "    def forward(self, x):\n",
-    "        x = F.relu(self.layer1(x))\n",
-    "        x = F.relu(self.layer2(x))\n",
-    "        return self.layer3(x)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 140,
-   "id": "5691ed46",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "def select_action(state):\n",
-    "    global steps_done\n",
-    "    sample = random.random()\n",
-    "    eps_threshold = EPS_END + (EPS_START - EPS_END) * \\\n",
-    "        math.exp(-1. * steps_done / EPS_DECAY)\n",
-    "    steps_done += 1\n",
-    "    if sample > eps_threshold:\n",
-    "        with torch.no_grad():\n",
-    "            return policy_net(state).max(1)[1].view(1, 1)\n",
-    "    else:\n",
-    "        return torch.tensor([[env.action_space.sample()]], device=device, dtype=torch.long)\n",
-    "\n",
-    "def plot_durations(show_result=False):\n",
-    "    plt.figure(1)\n",
-    "    durations_t = torch.tensor(episode_durations, dtype=torch.float)\n",
-    "    if show_result:\n",
-    "        plt.title('Result')\n",
-    "    else:\n",
-    "        plt.clf()\n",
-    "        plt.title('Training...')\n",
-    "    plt.xlabel('Episode')\n",
-    "    plt.ylabel('Duration')\n",
-    "    plt.plot(durations_t.numpy())\n",
-    "    if len(durations_t) >= 100:\n",
-    "        means = durations_t.unfold(0, 100, 1).mean(1).view(-1)\n",
-    "        means = torch.cat((torch.zeros(99), means))\n",
-    "        plt.plot(means.numpy())\n",
-    "    plt.pause(0.001)\n",
-    "    if is_ipython:\n",
-    "        if not show_result:\n",
-    "            display.display(plt.gcf())\n",
-    "            display.clear_output(wait=True)\n",
-    "        else:\n",
-    "            display.display(plt.gcf())"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 141,
-   "id": "345453a7",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "def optimize_model():\n",
-    "    if len(memory) < BATCH_SIZE:\n",
-    "        return\n",
-    "    transitions = memory.sample(BATCH_SIZE)\n",
-    "    batch = Transition(*zip(*transitions))\n",
-    "    non_final_mask = torch.tensor(tuple(map(lambda s: s is not None,\n",
-    "                                          batch.next_state)), device=device, dtype=torch.bool)\n",
-    "    non_final_next_states = torch.cat([s for s in batch.next_state\n",
-    "                                                if s is not None])\n",
-    "    state_batch = torch.cat(batch.state)\n",
-    "    action_batch = torch.cat(batch.action)\n",
-    "    reward_batch = torch.cat(batch.reward)\n",
-    "    state_action_values = policy_net(state_batch).gather(1, action_batch)\n",
-    "    next_state_values = torch.zeros(BATCH_SIZE, device=device)\n",
-    "    with torch.no_grad():\n",
-    "        next_state_values[non_final_mask] = target_net(non_final_next_states).max(1)[0]\n",
-    "    expected_state_action_values = (next_state_values * GAMMA) + reward_batch\n",
-    "    criterion = nn.SmoothL1Loss()\n",
-    "    loss = criterion(state_action_values, expected_state_action_values.unsqueeze(1))\n",
-    "    optimizer.zero_grad()\n",
-    "    loss.backward()\n",
-    "    torch.nn.utils.clip_grad_value_(policy_net.parameters(), 100)\n",
-    "    optimizer.step()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 142,
-   "id": "6d703d71",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "rnd = 0\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "period = 0\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.1\n",
-    "max_frac = 1.0\n",
-    "action_to_bid_frac = np.linspace(0,1,num_actions)\n",
-    "rnd = 0\n",
-    "env = TradingEnv(db, nsteps)\n",
-    "BATCH_SIZE = 256\n",
-    "GAMMA = 0.99\n",
-    "EPS_START = 0.9\n",
-    "EPS_END = 0.05\n",
-    "EPS_DECAY = 500\n",
-    "TAU = 0.005\n",
-    "LR = 1e-2\n",
-    "n_actions = env.action_space.n\n",
-    "state, info = env.reset(rnd)\n",
-    "n_observations = len(state)\n",
-    "policy_net = DQN(n_observations, n_actions).to(device)\n",
-    "target_net = DQN(n_observations, n_actions).to(device)\n",
-    "target_net.load_state_dict(policy_net.state_dict())\n",
-    "optimizer = optim.AdamW(policy_net.parameters(), lr=LR, amsgrad=True)\n",
-    "memory = ReplayMemory(30000)\n",
-    "steps_done = 0\n",
-    "episode_durations = []"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 143,
-   "id": "e724c2c4",
-   "metadata": {
-    "scrolled": true
-   },
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "0 68.45 [3, 3, 5, 0, 3, 3] 0.8898609559326409\n",
-      "1 82.20000000000002 [1, 3, 4, 3, 3, 5] 0.879842853294223\n",
-      "2 89.0 [1, 1, 3, 3, 1, 5] 0.8699442494606546\n",
-      "3 89.3875 [1, 4, 3, 3, 3, 4] 0.8601637190158791\n",
-      "4 84.18 [5, 4, 3, 1, 2, 3] 0.8504998535466114\n",
-      "5 85.63333333333334 [1, 3, 2, 1, 4, 4] 0.8409512614395249\n",
-      "6 87.10000000000001 [0, 0, 2, 1, 0, 5] 0.831516567680856\n",
-      "7 89.86250000000001 [0, 3, 3, 3, 3, 2] 0.8221944136584003\n",
-      "8 87.37222222222223 [5, 0, 4, 5, 1, 4] 0.8129834569658697\n",
-      "9 86.19500000000002 [4, 3, 1, 3, 5, 0] 0.8038823712095838\n",
-      "10 87.9818181818182 [1, 2, 3, 1, 1, 3] 0.7948898458174672\n",
-      "11 88.64583333333336 [2, 2, 0, 5, 5, 3] 0.7860045858503243\n",
-      "12 88.15384615384617 [2, 3, 3, 3, 3, 3] 0.7772253118153657\n",
-      "13 87.13214285714287 [4, 3, 0, 5, 4, 2] 0.7685507594819599\n",
-      "14 86.02000000000001 [4, 0, 5, 5, 0, 5] 0.7599796796995812\n",
-      "15 85.51250000000002 [3, 1, 5, 3, 1, 3] 0.75151083821793\n",
-      "16 85.54117647058825 [3, 2, 3, 3, 1, 4] 0.7431430155091988\n",
-      "17 85.2277777777778 [3, 3, 1, 4, 3, 3] 0.7348750065924577\n",
-      "18 85.40263157894738 [4, 0, 0, 4, 3, 3] 0.7267056208601357\n",
-      "19 86.37000000000002 [1, 2, 3, 0, 0, 3] 0.7186336819065705\n",
-      "20 86.805 [2, 5, 0, 5, 3, 5] 0.7106580273586042\n",
-      "21 85.855 [3, 4, 0, 2, 5, 3] 0.7027775087082002\n",
-      "22 85.36250000000001 [2, 2, 5, 4, 2, 3] 0.6949909911470552\n",
-      "23 85.69500000000002 [2, 3, 0, 4, 4, 3] 0.6872973534031851\n",
-      "24 86.47500000000001 [3, 3, 3, 5, 3, 2] 0.6796954875794602\n",
-      "25 85.74000000000002 [3, 0, 5, 1, 3, 0] 0.6721842989940657\n",
-      "26 85.32500000000002 [3, 3, 3, 3, 3, 3] 0.664762706022866\n",
-      "27 83.965 [4, 3, 3, 1, 3, 3] 0.6574296399436487\n",
-      "28 84.02250000000001 [4, 4, 4, 1, 4, 3] 0.6501840447822268\n",
-      "29 84.775 [3, 3, 3, 3, 3, 2] 0.6430248771603764\n",
-      "30 83.3575 [3, 5, 3, 3, 2, 3] 0.635951106145589\n",
-      "31 82.00750000000001 [3, 4, 5, 1, 3, 2] 0.6289617131026151\n",
-      "32 83.05000000000003 [1, 3, 3, 0, 1, 2] 0.6220556915467784\n",
-      "33 83.6975 [3, 3, 3, 3, 2, 3] 0.6152320469990417\n",
-      "34 83.37000000000002 [5, 2, 3, 4, 3, 0] 0.6084897968427982\n",
-      "35 82.40750000000001 [5, 3, 5, 1, 3, 2] 0.6018279701823753\n",
-      "36 82.43500000000002 [1, 3, 3, 3, 3, 3] 0.5952456077032219\n",
-      "37 82.76750000000001 [3, 2, 3, 3, 0, 2] 0.5887417615337667\n",
-      "38 83.03500000000001 [3, 1, 3, 3, 2, 3] 0.5823154951089226\n",
-      "39 81.69 [3, 5, 2, 4, 3, 3] 0.5759658830352198\n",
-      "40 81.06500000000001 [5, 4, 0, 3, 3, 3] 0.5696920109575474\n",
-      "41 81.1225 [5, 2, 3, 3, 3, 5] 0.563492975427485\n",
-      "42 80.9325 [2, 0, 3, 5, 3, 3] 0.5573678837732043\n",
-      "43 80.5325 [1, 2, 4, 3, 1, 3] 0.5513158539709229\n",
-      "44 80.22500000000001 [3, 5, 3, 2, 3, 3] 0.5453360145178912\n",
-      "45 80.32500000000002 [4, 1, 1, 3, 1, 2] 0.5394275043068948\n",
-      "46 80.83500000000001 [0, 0, 0, 3, 0, 2] 0.5335894725022535\n",
-      "47 81.6575 [0, 3, 0, 4, 1, 3] 0.5278210784172991\n",
-      "48 82.75250000000001 [3, 3, 0, 0, 0, 0] 0.5221214913933155\n",
-      "49 81.31500000000001 [4, 4, 0, 0, 2, 1] 0.5164898906799226\n",
-      "50 82.87000000000002 [0, 1, 1, 5, 1, 1] 0.5109254653168858\n",
-      "51 83.63250000000002 [2, 2, 3, 0, 3, 3] 0.5054274140173376\n",
-      "52 82.70250000000001 [1, 0, 0, 5, 0, 0] 0.49999494505239034\n",
-      "53 82.2225 [3, 5, 0, 2, 1, 1] 0.49462727613712565\n",
-      "54 83.76750000000001 [1, 2, 5, 3, 2, 2] 0.4893236343179443\n",
-      "55 84.05749999999999 [3, 4, 1, 3, 4, 3] 0.48408325586125966\n",
-      "56 83.2775 [3, 4, 0, 2, 1, 3] 0.47890538614351846\n",
-      "57 84.29500000000002 [1, 1, 3, 1, 1, 1] 0.473789279542534\n",
-      "58 83.36250000000001 [2, 5, 5, 5, 5, 3] 0.4687341993301151\n",
-      "59 83.405 [2, 3, 5, 3, 4, 4] 0.4637394175659759\n",
-      "60 84.3575 [2, 4, 0, 5, 5, 1] 0.4588042149929113\n",
-      "61 83.11500000000001 [5, 5, 4, 3, 1, 4] 0.4539278809332228\n",
-      "62 82.23750000000001 [4, 4, 3, 5, 5, 5] 0.4491097131863793\n",
-      "63 81.67500000000001 [5, 1, 3, 5, 5, 1] 0.4443490179278997\n",
-      "64 82.475 [0, 4, 2, 4, 4, 4] 0.43964510960944\n",
-      "65 82.51500000000001 [2, 4, 4, 1, 1, 3] 0.43499731086007404\n",
-      "66 82.58 [1, 1, 5, 4, 5, 1] 0.4304049523887505\n",
-      "67 81.39 [4, 3, 0, 5, 1, 3] 0.4258673728879139\n",
-      "68 81.66 [0, 3, 1, 0, 0, 0] 0.421383918938275\n",
-      "69 81.6525 [4, 4, 1, 5, 1, 1] 0.41695394491471777\n",
-      "70 79.79250000000002 [5, 2, 2, 0, 0, 0] 0.41257681289332765\n",
-      "71 80.36 [0, 0, 4, 0, 0, 0] 0.40825189255953\n",
-      "72 80.545 [1, 0, 0, 3, 4, 3] 0.40397856111732305\n",
-      "73 81.51000000000002 [1, 2, 5, 2, 5, 5] 0.399756203199595\n",
-      "74 80.52250000000001 [5, 2, 0, 2, 1, 0] 0.3955842107795092\n",
-      "75 81.595 [0, 4, 0, 0, 4, 5] 0.3914619830829481\n",
-      "76 81.365 [5, 1, 5, 5, 5, 5] 0.3873889265020001\n",
-      "77 80.715 [2, 2, 2, 3, 1, 1] 0.3833644545094792\n",
-      "78 80.465 [5, 0, 0, 4, 5, 0] 0.3793879875744643\n",
-      "79 80.84 [0, 5, 0, 0, 5, 3] 0.37545895307884525\n",
-      "80 81.5575 [0, 0, 4, 2, 2, 2] 0.37157678523486526\n",
-      "81 83.1525 [1, 5, 2, 5, 0, 0] 0.3677409250036465\n",
-      "82 83.28000000000002 [4, 0, 4, 4, 0, 2] 0.3639508200146872\n",
-      "83 84.7925 [0, 0, 0, 0, 4, 4] 0.36020592448631966\n",
-      "84 84.4775 [2, 4, 0, 2, 4, 5] 0.35650569914711655\n",
-      "85 84.39750000000001 [2, 4, 2, 3, 1, 4] 0.352849611158235\n",
-      "86 84.11500000000002 [2, 2, 0, 0, 0, 1] 0.3492371340366869\n",
-      "87 85.51750000000001 [0, 0, 3, 3, 4, 4] 0.3456677475795243\n",
-      "88 84.52250000000001 [4, 2, 1, 2, 2, 2] 0.3421409377889295\n",
-      "89 86.035 [0, 0, 0, 0, 1, 0] 0.33865619679819825\n",
-      "90 87.43500000000002 [0, 0, 0, 0, 4, 1] 0.33521302279860626\n",
-      "91 86.0575 [4, 4, 4, 4, 4, 1] 0.33181091996714773\n",
-      "92 86.83500000000001 [2, 0, 2, 2, 1, 2] 0.3284493983951361\n",
-      "93 86.49000000000001 [2, 0, 0, 1, 0, 3] 0.32512797401765625\n",
-      "94 86.1625 [4, 0, 0, 1, 3, 3] 0.32184616854385834\n",
-      "95 86.29499999999999 [1, 3, 2, 5, 3, 3] 0.3186035093880832\n",
-      "96 86.395 [5, 4, 2, 0, 2, 0] 0.31539952960180895\n",
-      "97 86.735 [0, 0, 0, 0, 0, 0] 0.31223376780641\n",
-      "98 88.3775 [0, 0, 0, 4, 1, 0] 0.3091057681267173\n",
-      "99 88.09 [0, 5, 0, 0, 0, 0] 0.3060150801253718\n",
-      "100 87.265 [0, 3, 0, 3, 3, 2] 0.3029612587379605\n",
-      "101 88.19000000000001 [0, 3, 3, 3, 3, 4] 0.2999438642089266\n",
-      "102 87.20750000000001 [5, 5, 1, 1, 1, 1] 0.2969624620282439\n",
-      "103 86.88000000000001 [1, 1, 1, 1, 1, 5] 0.2940166228688464\n",
-      "104 87.66 [1, 1, 1, 3, 3, 0] 0.2911059225248048\n",
-      "105 87.345 [3, 2, 0, 3, 3, 3] 0.2882299418502398\n",
-      "106 85.86999999999999 [5, 1, 3, 3, 3, 1] 0.28538826669896455\n",
-      "107 85.4725 [1, 1, 5, 1, 1, 1] 0.28258048786484685\n",
-      "108 86.3275 [1, 1, 1, 1, 1, 1] 0.2798062010228827\n",
-      "109 84.4475 [5, 5, 5, 5, 4, 4] 0.2770650066709728\n",
-      "110 83.755 [2, 5, 2, 4, 1, 1] 0.2743565100723938\n",
-      "111 85.075 [1, 1, 1, 1, 2, 1] 0.2716803211989551\n",
-      "112 83.48750000000001 [3, 3, 4, 3, 3, 3] 0.26903605467483444\n",
-      "113 84.1625 [2, 2, 2, 2, 5, 1] 0.2664233297210832\n",
-      "114 85.11 [2, 0, 5, 5, 5, 3] 0.263841770100793\n",
-      "115 83.165 [5, 5, 5, 5, 5, 3] 0.26129100406491773\n",
-      "116 83.9825 [3, 3, 3, 0, 3, 3] 0.2587706642987404\n",
-      "117 82.99500000000002 [3, 3, 3, 3, 3, 3] 0.25628038786897955\n",
-      "118 82.30000000000001 [3, 3, 0, 0, 0, 0] 0.253819816171526\n",
-      "119 82.75250000000003 [2, 2, 4, 2, 2, 4] 0.2513885948798035\n",
-      "120 83.1025 [3, 1, 4, 2, 4, 1] 0.24898637389374484\n",
-      "121 80.7475 [5, 4, 4, 4, 4, 1] 0.246612807289377\n",
-      "122 82.44000000000001 [1, 4, 5, 5, 2, 0] 0.2442675532690074\n",
-      "123 81.7625 [2, 3, 0, 0, 0, 0] 0.24195027411200448\n",
-      "124 80.4475 [3, 4, 4, 4, 4, 4] 0.23966063612616534\n",
-      "125 81.61250000000001 [2, 2, 2, 2, 2, 3] 0.23739830959966352\n",
-      "126 83.2125 [2, 2, 2, 2, 4, 2] 0.2351629687535699\n",
-      "127 82.4075 [2, 5, 2, 2, 1, 1] 0.23295429169493992\n",
-      "128 81.46250000000002 [4, 1, 5, 3, 4, 2] 0.2307719603704606\n",
-      "129 82.02500000000002 [4, 4, 4, 4, 1, 1] 0.22861566052065002\n",
-      "130 81.28000000000002 [4, 3, 1, 3, 3, 0] 0.2264850816346038\n",
-      "131 80.90250000000002 [3, 3, 3, 3, 3, 3] 0.22437991690528059\n",
-      "132 80.4625 [3, 3, 1, 1, 1, 1] 0.2222998631853217\n",
-      "133 80.12000000000002 [1, 3, 1, 1, 1, 1] 0.22024462094339708\n",
-      "134 80.7475 [1, 1, 1, 4, 1, 3] 0.21821389422107246\n",
-      "135 82.48750000000001 [3, 3, 3, 3, 3, 3] 0.21620739059019067\n",
-      "136 82.28999999999999 [3, 3, 4, 1, 1, 1] 0.21422482111076163\n",
-      "137 83.685 [1, 1, 1, 1, 1, 1] 0.21226590028935438\n",
-      "138 84.675 [0, 1, 1, 3, 3, 3] 0.21033034603798562\n",
-      "139 85.06 [2, 3, 3, 3, 3, 3] 0.20841787963349845\n",
-      "140 85.075 [3, 3, 3, 0, 3, 3] 0.20652822567742596\n",
-      "141 86.1975 [5, 1, 1, 2, 1, 1] 0.20466111205633308\n",
-      "142 86.6975 [1, 1, 1, 1, 2, 1] 0.20281626990263202\n",
-      "143 87.1525 [1, 4, 0, 0, 0, 0] 0.2009934335558647\n",
-      "144 88.48250000000002 [0, 0, 0, 0, 0, 1] 0.19919234052444734\n",
-      "145 88.38750000000002 [1, 1, 1, 1, 1, 1] 0.19741273144787108\n",
-      "146 88.62250000000002 [1, 1, 3, 1, 1, 1] 0.19565435005935378\n",
-      "147 87.27250000000002 [5, 5, 1, 1, 5, 0] 0.19391694314893693\n",
-      "148 88.29750000000001 [0, 0, 0, 4, 0, 0] 0.19220026052702316\n",
-      "149 90.30500000000002 [0, 0, 0, 0, 1, 4] 0.19050405498834855\n",
-      "150 90.28750000000001 [5, 1, 1, 1, 1, 1] 0.18882808227638442\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "151 90.7175 [1, 3, 3, 3, 3, 3] 0.18717210104816417\n",
-      "152 91.5425 [3, 4, 1, 1, 1, 1] 0.18553587283952938\n",
-      "153 91.275 [1, 1, 1, 1, 1, 1] 0.18391916203079062\n",
-      "154 90.99250000000002 [1, 1, 1, 2, 3, 3] 0.1823217358127977\n",
-      "155 90.87 [3, 3, 3, 3, 3, 3] 0.18074336415341485\n",
-      "156 90.64250000000001 [3, 3, 3, 3, 3, 3] 0.1791838197643958\n",
-      "157 88.97000000000001 [3, 3, 3, 3, 1, 1] 0.17764287806865348\n",
-      "158 88.91750000000002 [1, 2, 2, 2, 0, 0] 0.17612031716792098\n",
-      "159 89.22750000000002 [0, 0, 0, 2, 0, 0] 0.17461591781079763\n",
-      "160 90.24000000000002 [0, 0, 0, 0, 0, 1] 0.17312946336117638\n",
-      "161 91.17 [1, 1, 1, 1, 0, 2] 0.17166073976704785\n",
-      "162 91.20750000000001 [2, 2, 2, 2, 2, 2] 0.17020953552967655\n",
-      "163 90.765 [2, 2, 2, 2, 2, 2] 0.1687756416731446\n",
-      "164 89.67 [2, 5, 2, 2, 2, 2] 0.1673588517142589\n",
-      "165 89.0 [2, 1, 1, 1, 1, 1] 0.1659589616328171\n",
-      "166 88.9375 [1, 4, 1, 4, 4, 0] 0.16457576984222846\n",
-      "167 90.27000000000001 [4, 2, 2, 5, 2, 2] 0.163209077160485\n",
-      "168 90.16 [2, 2, 2, 5, 2, 2] 0.1618586867814789\n",
-      "169 89.77750000000002 [2, 2, 1, 1, 1, 1] 0.16052440424666203\n",
-      "170 90.4025 [3, 3, 3, 0, 0, 0] 0.15920603741704376\n",
-      "171 90.83500000000001 [0, 0, 0, 0, 0, 0] 0.15790339644552254\n",
-      "172 90.97999999999999 [0, 0, 0, 0, 5, 2] 0.1566162937495474\n",
-      "173 91.86500000000001 [0, 0, 1, 1, 1, 1] 0.15534454398410602\n",
-      "174 91.5325 [1, 5, 1, 1, 1, 1] 0.1540879640150346\n",
-      "175 92.035 [2, 2, 2, 2, 2, 2] 0.15284637289264624\n",
-      "176 92.42999999999999 [2, 3, 4, 4, 3, 4] 0.1516195918256738\n",
-      "177 93.8625 [1, 0, 1, 1, 3, 3] 0.15040744415552373\n",
-      "178 93.2325 [1, 1, 1, 1, 2, 2] 0.14920975533083697\n",
-      "179 92.04749999999999 [2, 1, 5, 5, 4, 1] 0.14802635288235313\n",
-      "180 89.2025 [5, 5, 5, 5, 5, 5] 0.1468570663980747\n",
-      "181 87.29750000000001 [4, 5, 5, 5, 5, 5] 0.1457017274987274\n",
-      "182 86.00750000000001 [5, 2, 1, 1, 1, 2] 0.1445601698135133\n",
-      "183 86.24750000000002 [2, 1, 1, 1, 1, 5] 0.1434322289561531\n",
-      "184 87.4 [1, 1, 1, 1, 5, 1] 0.14231774250121426\n",
-      "185 85.67000000000002 [5, 5, 5, 5, 5, 5] 0.14121654996072142\n",
-      "186 84.39750000000001 [2, 5, 5, 0, 3, 5] 0.1401284927610459\n",
-      "187 83.1725 [5, 5, 4, 1, 5, 5] 0.13905341422007075\n",
-      "188 81.28999999999999 [5, 4, 5, 1, 1, 1] 0.13799115952462832\n",
-      "189 81.3675 [1, 1, 1, 4, 4, 3] 0.13694157570820686\n",
-      "190 80.55499999999999 [3, 4, 4, 4, 4, 5] 0.13590451162892317\n",
-      "191 79.77000000000001 [0, 4, 4, 4, 4, 4] 0.13487981794775775\n",
-      "192 78.69500000000001 [4, 5, 1, 1, 1, 1] 0.13386734710704984\n",
-      "193 77.6525 [1, 1, 1, 1, 1, 1] 0.1328669533092488\n",
-      "194 78.405 [1, 1, 1, 1, 4, 4] 0.1318784924959191\n",
-      "195 77.22749999999999 [4, 4, 4, 3, 4, 4] 0.1309018223269955\n",
-      "196 77.28750000000001 [2, 4, 4, 4, 4, 4] 0.129936802160286\n",
-      "197 76.95500000000001 [0, 0, 0, 0, 0, 0] 0.12898329303121908\n",
-      "198 77.73750000000001 [0, 0, 0, 0, 0, 0] 0.12804115763283241\n",
-      "199 78.725 [0, 0, 4, 4, 4, 4] 0.12711026029600064\n",
-      "Complete\n"
-     ]
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/plain": [
-       "<Figure size 1000x800 with 0 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/plain": [
-       "<Figure size 1000x800 with 0 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "if torch.cuda.is_available():\n",
-    "    num_episodes = 600\n",
-    "else:\n",
-    "    num_episodes = 200\n",
-    "    \n",
-    "rnd = 0\n",
-    "period_reward_history = []\n",
-    "for period in range(num_episodes):\n",
-    "    state, info = env.reset(rnd)\n",
-    "    state = torch.tensor(state, dtype=torch.float32, device=device).unsqueeze(0)\n",
-    "    period_reward = np.array([0.0])\n",
-    "    actions_taken = []\n",
-    "    for timestep in count():\n",
-    "        action = select_action(state)\n",
-    "        actions_taken.append(action.item())\n",
-    "        observation, reward, terminated, truncated, _ = env.step(action.item(), timestep, period, rnd)\n",
-    "        period_reward += reward\n",
-    "        reward = torch.tensor([reward], device=device)\n",
-    "        done = terminated or truncated\n",
-    "        if terminated:\n",
-    "            next_state = None\n",
-    "        else:\n",
-    "            next_state = torch.tensor(observation, dtype=torch.float32, device=device).unsqueeze(0)\n",
-    "        memory.push(state, action, next_state, reward)\n",
-    "        state = next_state\n",
-    "        optimize_model()\n",
-    "        target_net_state_dict = target_net.state_dict()\n",
-    "        policy_net_state_dict = policy_net.state_dict()\n",
-    "        for key in policy_net_state_dict:\n",
-    "            target_net_state_dict[key] = policy_net_state_dict[key]*TAU + target_net_state_dict[key]*(1-TAU)\n",
-    "        target_net.load_state_dict(target_net_state_dict)\n",
-    "        if done:\n",
-    "            eps = EPS_END + (EPS_START - EPS_END) * math.exp(-1. * steps_done / EPS_DECAY)\n",
-    "            #episode_durations.append(t + 1)\n",
-    "            #plot_durations()\n",
-    "            break\n",
-    "    period_reward_history.append(period_reward.item())\n",
-    "    print(period, np.mean(period_reward_history[-20:]), actions_taken, eps)\n",
-    "print('Complete')\n",
-    "plot_durations(show_result=True)\n",
-    "plt.ioff()\n",
-    "plt.show()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "d373832f",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "env.db.step_data = env.db.step_data.drop_duplicates(subset=['rnd','period','step'], keep='last')"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "f05e5a90",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "env.db.step_data.tail(20)"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "d70b5274",
-   "metadata": {},
-   "source": [
-    "# Graph"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "3df4277c",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "def graph(demand_schedule, supply_schedule, P_grid, p_eqbm, q_eqbm, \n",
-    "                        period_bids, period_asks, period_prices, period_sales, \n",
-    "                        redemption_values, token_costs, ntokens, nbuyers, nsellers, nsteps):\n",
-    "    plt.plot(demand_schedule, P_grid, label = 'Demand Curve')\n",
-    "    plt.plot(supply_schedule, P_grid, label = 'Supply Curve')\n",
-    "    plt.plot(period_prices, color='green', linestyle='--', label='Mean Real Prices')\n",
-    "    plt.axhline(y=np.nanmean(p_eqbm), color='black', linestyle='--', label='Mean Eqbm Prices')\n",
-    "    prices = []\n",
-    "    for i in range(nsteps):\n",
-    "        if (period_prices[i] > 0):\n",
-    "            plt.scatter([period_sales[i]]*len(period_bids[i]), period_bids[i], s = 10, marker = 'x', c = 'red')\n",
-    "            plt.scatter([period_sales[i]]*len(period_asks[i]), period_asks[i], s = 10, marker = 'o', c = 'blue')\n",
-    "        else:\n",
-    "            pass  \n",
-    "    plt.legend()\n",
-    "    text_content = f'q*={q_eqbm}, mean(q)={np.round(np.nanmax(period_sales),1)},p*={np.round(p_eqbm,1)}, mean(p)={np.round(np.nanmean(period_prices),1)}'\n",
-    "    plt.title(text_content)\n",
-    "    #plt.xlim(0,5*1.2)\n",
-    "    #plt.ylim(0,5*3.0)\n",
-    "    plt.show()\n",
-    "    \n",
-    "    plt.plot(period_bids, c = 'r', linestyle='--')\n",
-    "    plt.plot(period_asks, c = 'b', linestyle='--')\n",
-    "    plt.scatter(range(nsteps), period_prices, c = 'g')\n",
-    "    plt.title('Bids (red), Asks (blue) and Prices (green) over trading steps')\n",
-    "    plt.show()\n",
-    "\n",
-    "def graph_period(db, rnd, period):\n",
-    "    period_bids = list(db.get_period(rnd, period).bids)\n",
-    "    period_asks = list(db.get_perioxd(rnd, period).asks)\n",
-    "    period_prices = list(db.get_period(rnd, period).price)\n",
-    "    period_sales = np.cumsum(np.where(db.get_period(rnd, period).price > 0,1,0))\n",
-    "    [_, demand_schedule, supply_schedule, P_grid, redemption_values, token_costs, p_eqbm, q_eqbm] = db.get_round(rnd).iloc[0].tolist()\n",
-    "    graph(demand_schedule, supply_schedule, P_grid, p_eqbm, q_eqbm, period_bids, period_asks, period_prices, period_sales, redemption_values, token_costs, db.ntokens, db.nbuyers, db.nsellers, db.nsteps)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "c42d8883",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "graph_period(env.db, 0, 1)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "d96239c9",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "graph_period(env.db,0,199)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "26e790fb",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "graph_period(env.db, 0, 199)"
-   ]
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3 (ipykernel)",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.10.13"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 5
-}
diff --git a/code/3_deep_reinforcement_learning/6_REINFORCE.ipynb b/code/3_deep_reinforcement_learning/6_REINFORCE.ipynb
deleted file mode 100644
index c79da3c..0000000
--- a/code/3_deep_reinforcement_learning/6_REINFORCE.ipynb
+++ /dev/null
@@ -1,2449 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "markdown",
-   "id": "69749800",
-   "metadata": {},
-   "source": [
-    "#### DISCRETE ACTIONS"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "5a7a6580",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import numpy as np\n",
-    "import torch\n",
-    "import torch.nn as nn\n",
-    "import torch.optim as optim\n",
-    "import gym\n",
-    "\n",
-    "# Define a simple policy network\n",
-    "class PolicyNetwork(nn.Module):\n",
-    "    def __init__(self, input_dim, output_dim):\n",
-    "        super(PolicyNetwork, self).__init__()\n",
-    "        self.fc = nn.Sequential(\n",
-    "            nn.Linear(input_dim, 128),\n",
-    "            nn.ReLU(),\n",
-    "            nn.Linear(128, output_dim),\n",
-    "            nn.Softmax(dim=-1)\n",
-    "        )\n",
-    "\n",
-    "    def forward(self, x):\n",
-    "        return self.fc(x)\n",
-    "\n",
-    "# Initialize the CartPole environment\n",
-    "env = gym.make('CartPole-v1')\n",
-    "state_dim = env.observation_space.shape[0]\n",
-    "action_dim = env.action_space.n\n",
-    "\n",
-    "# Initialize the policy network and optimizer\n",
-    "policy_net = PolicyNetwork(state_dim, action_dim)\n",
-    "optimizer = optim.Adam(policy_net.parameters(), lr=0.01)\n",
-    "\n",
-    "# Training parameters\n",
-    "num_episodes = 1000\n",
-    "gamma = 0.99  # Discount factor\n",
-    "\n",
-    "# Training loop\n",
-    "for episode in range(num_episodes):\n",
-    "    state = env.reset()\n",
-    "    log_probs = []\n",
-    "    rewards = []\n",
-    "\n",
-    "    while True:\n",
-    "        # Choose an action based on the policy network\n",
-    "        state = torch.FloatTensor(state)\n",
-    "        action_probs = policy_net(state)\n",
-    "        action = torch.multinomial(action_probs, 1).item()\n",
-    "\n",
-    "        # Take the chosen action and observe the next state and reward\n",
-    "        next_state, reward, done, _ = env.step(action)\n",
-    "\n",
-    "        # Store the log probability and reward\n",
-    "        log_probs.append(torch.log(action_probs[action]))\n",
-    "        rewards.append(reward)\n",
-    "\n",
-    "        state = next_state\n",
-    "\n",
-    "        if done:\n",
-    "            break\n",
-    "\n",
-    "    # Calculate the discounted returns\n",
-    "    discounted_returns = []\n",
-    "    R = 0\n",
-    "    for r in reversed(rewards):\n",
-    "        R = r + gamma * R\n",
-    "        discounted_returns.insert(0, R)\n",
-    "\n",
-    "    # Calculate the loss and update the policy network\n",
-    "    loss = torch.stack(log_probs) * torch.FloatTensor(discounted_returns)\n",
-    "    loss = -loss.sum()\n",
-    "    optimizer.zero_grad()\n",
-    "    loss.backward()\n",
-    "    optimizer.step()\n",
-    "\n",
-    "    if (period + 1) % 10 == 0:\n",
-    "        print(f\"Episode {period + 1}/{period}, Loss: {loss.item()}\")\n",
-    "\n",
-    "# Test the trained policy\n",
-    "state = env.reset()\n",
-    "total_reward = 0\n",
-    "while True:\n",
-    "    action_probs = policy_net(torch.FloatTensor(state))\n",
-    "    action = torch.multinomial(action_probs, 1).item()\n",
-    "    state, reward, done, _ = env.step(action)\n",
-    "    total_reward += reward\n",
-    "    env.render()\n",
-    "    if done:\n",
-    "        break\n",
-    "\n",
-    "print(f\"Total Reward: {total_reward}\")\n",
-    "env.close()\n"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "3b50acf8",
-   "metadata": {},
-   "source": [
-    "#### CONTINOUS ACTIONS"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "82b3fb62",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import numpy as np\n",
-    "import torch\n",
-    "import torch.nn as nn\n",
-    "import torch.optim as optim\n",
-    "import gym\n",
-    "\n",
-    "# Define a simple policy network\n",
-    "class PolicyNetwork(nn.Module):\n",
-    "    def __init__(self, input_dim, output_dim):\n",
-    "        super(PolicyNetwork, self).__init__()\n",
-    "        self.fc = nn.Sequential(\n",
-    "            nn.Linear(input_dim, 128),\n",
-    "            nn.ReLU(),\n",
-    "            nn.Linear(128, output_dim),\n",
-    "            nn.Tanh()  # Output is in the range [-1, 1] for continuous actions\n",
-    "        )\n",
-    "\n",
-    "    def forward(self, x):\n",
-    "        return self.fc(x)\n",
-    "\n",
-    "# Initialize the Pendulum environment\n",
-    "env = gym.make('Pendulum-v1')\n",
-    "state_dim = env.observation_space.shape[0]\n",
-    "action_dim = env.action_space.shape[0]  # Continuous action space\n",
-    "\n",
-    "# Initialize the policy network and optimizer\n",
-    "policy_net = PolicyNetwork(state_dim, action_dim)\n",
-    "optimizer = optim.Adam(policy_net.parameters(), lr=0.01)\n",
-    "\n",
-    "# Training parameters\n",
-    "num_episodes = 1000\n",
-    "gamma = 0.99  # Discount factor\n",
-    "\n",
-    "# Training loop\n",
-    "for episode in range(num_episodes):\n",
-    "    state = env.reset()\n",
-    "    log_probs = []\n",
-    "    rewards = []\n",
-    "\n",
-    "    while True:\n",
-    "        # Choose an action based on the policy network\n",
-    "        state = torch.FloatTensor(state)\n",
-    "        action_mean = policy_net(state)\n",
-    "        dist = torch.distributions.Normal(action_mean, torch.tensor(0.1))  # Adding some exploration noise\n",
-    "        action = dist.sample()\n",
-    "        action = torch.clamp(action, -1.0, 1.0)  # Clip the action to the valid range\n",
-    "\n",
-    "        # Take the chosen action and observe the next state and reward\n",
-    "        next_state, reward, done, _ = env.step(action.numpy())\n",
-    "\n",
-    "        # Calculate the log probability of the chosen action\n",
-    "        log_prob = dist.log_prob(action)\n",
-    "        log_probs.append(log_prob)\n",
-    "        rewards.append(reward)\n",
-    "\n",
-    "        state = next_state\n",
-    "\n",
-    "        if done:\n",
-    "            break\n",
-    "\n",
-    "    # Calculate the discounted returns\n",
-    "    discounted_returns = []\n",
-    "    R = 0\n",
-    "    for r in reversed(rewards):\n",
-    "        R = r + gamma * R\n",
-    "        discounted_returns.insert(0, R)\n",
-    "\n",
-    "    # Calculate the loss and update the policy network\n",
-    "    loss = torch.stack(log_probs) * torch.FloatTensor(discounted_returns)\n",
-    "    loss = -loss.sum()\n",
-    "    optimizer.zero_grad()\n",
-    "    loss.backward()\n",
-    "    optimizer.step()\n",
-    "\n",
-    "    if (episode + 1) % 10 == 0:\n",
-    "        print(f\"Episode {episode + 1}/{num_episodes}, Loss: {loss.item()}\")\n",
-    "\n",
-    "# Test the trained policy\n",
-    "state = env.reset()\n",
-    "total_reward = 0\n",
-    "while True:\n",
-    "    state = torch.FloatTensor(state)\n",
-    "    action_mean = policy_net(state)\n",
-    "    action = action_mean.detach().numpy()\n",
-    "    state, reward, done, _ = env.step(action)\n",
-    "    total_reward += reward\n",
-    "    env.render()\n",
-    "\n",
-    "    if done:\n",
-    "        break\n",
-    "\n",
-    "print(f\"Total Reward: {total_reward}\")\n",
-    "env.close()\n"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "e8d35685",
-   "metadata": {},
-   "source": [
-    "### TRADING GAME"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 185,
-   "id": "e9f13fa4",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "from gymnasium import spaces\n",
-    "import numpy as np\n",
-    "from functions import *\n",
-    "from itertools import count\n",
-    "buyer_strategies = ['Honest']\n",
-    "seller_strategies = ['Honest','Honest','Honest','Honest','Honest','Honest','Honest','Honest','Honest','Honest']\n",
-    "nbuyers, nsellers = len(buyer_strategies), len(seller_strategies)\n",
-    "nrounds, nperiods, ntokens, nsteps, gametype, nbuyers, nsellers = 1, 100, 15, 15, '1234', len(buyer_strategies), len(seller_strategies)\n",
-    "R1, R2, R3, R4 = gametype_to_ran(gametype)\n",
-    "game_metadata = [nrounds, nperiods, ntokens, nbuyers, nsellers, nsteps, R1, R2, R3, R4]\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "rnd = 0\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "period = 0\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.01\n",
-    "max_frac = 1.0\n",
-    "action_to_bid_frac = np.linspace(0,1,num_actions)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 186,
-   "id": "87033fc4",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "class TradingEnv(gym.Env):\n",
-    "    def __init__(self, db, nsteps, render_mode = None):\n",
-    "        self.db = db\n",
-    "        self.action_space = spaces.Box(0,1,(1,),dtype=np.float)\n",
-    "        self.observation_space = spaces.Box(0,nsteps,(1,),dtype=np.float)\n",
-    "\n",
-    "    def reset(self, rnd):\n",
-    "        self.db.reset_period(rnd)\n",
-    "        observation = np.array([0])\n",
-    "        return observation, None\n",
-    "\n",
-    "    def step(self, action, timestep, period, rnd, seed = None, options = None):\n",
-    "        [buyer.next_token() for buyer in self.db.buyers]\n",
-    "        [seller.next_token() for seller in self.db.sellers]\n",
-    "        bid_frac = action.item()\n",
-    "        # convert action to bid\n",
-    "        self.db.buyers[0].next_token()\n",
-    "        min_bid = self.db.buyers[0].value*min_frac\n",
-    "        max_bid = self.db.buyers[0].value*max_frac\n",
-    "        bid = np.round(max_bid * bid_frac + (1-bid_frac)*min_bid,2)\n",
-    "        \n",
-    "        # simulate market\n",
-    "        bids = [buyer.ask(self.db) for buyer in self.db.buyers]\n",
-    "        bids[0] = bid\n",
-    "        asks = [seller.ask(self.db) for seller in self.db.sellers]\n",
-    "        current_ask, current_ask_idx, current_bid, current_bid_idx = current_bid_ask(bids, asks) \n",
-    "        sale, price, bprofit, sprofit, buy, sell = buy_sell(db, current_bid, current_bid_idx, current_ask, current_ask_idx)\n",
-    "        step_data = [rnd,period,timestep,bids,asks,current_bid,current_bid_idx,current_ask,current_ask_idx,buy,sell,price,sale,bprofit,sprofit]\n",
-    "        self.db.add_step(step_data)\n",
-    "        \n",
-    "        # compute reward, new state\n",
-    "        reward = np.array([0])\n",
-    "        if (sale == 1) and (current_bid_idx == 0):\n",
-    "            reward = np.array([bprofit])\n",
-    "        observation = np.array([timestep + 1])\n",
-    "        \n",
-    "        # check termination \n",
-    "        if timestep == nsteps-1:\n",
-    "            terminated = True\n",
-    "        else:\n",
-    "            terminated = False\n",
-    "        return observation, reward, terminated, False, None"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 127,
-   "id": "2e3693c6",
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 0, New State: [1], Action:[0.7], Reward: [54.5], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [2], Action:[0.8], Reward: [47.], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [5], Action:[0.5], Reward: [27.1], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [6], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [7], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [8], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [9], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [10], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 1, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [2], Action:[1.], Reward: [42.3], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [4], Action:[0.], Reward: [72.2], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [5], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [6], Action:[0.9], Reward: [16.7], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [7], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [8], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [9], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [10], Action:[0.2], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 2, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [3], Action:[0.4], Reward: [66.3], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [4], Action:[0.6], Reward: [52.2], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [5], Action:[0.5], Reward: [27.8], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [6], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [7], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [8], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [9], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [10], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 3, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [3], Action:[1.], Reward: [40.4], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [4], Action:[0.4], Reward: [61.4], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [5], Action:[0.7], Reward: [22.9], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [6], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [7], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [8], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [9], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [10], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 4, New State: [1], Action:[0.9], Reward: [44.8], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [4], Action:[0.5], Reward: [56.4], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [5], Action:[0.7], Reward: [21.3], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [6], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [7], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [8], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [9], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [10], Action:[0.8], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 5, New State: [1], Action:[1.], Reward: [42.], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [2], Action:[0.8], Reward: [45.9], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [4], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [5], Action:[0.7], Reward: [20.9], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [6], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [7], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [8], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [9], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [10], Action:[0.2], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 6, New State: [1], Action:[0.7], Reward: [55.9], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [2], Action:[0.9], Reward: [44.7], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [4], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [5], Action:[0.8], Reward: [19.4], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [6], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [7], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [8], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [9], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [10], Action:[0.6], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 7, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [2], Action:[0.7], Reward: [53.9], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [3], Action:[0.8], Reward: [44.5], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [5], Action:[0.5], Reward: [27.], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [6], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [7], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [8], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [10], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 8, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [2], Action:[0.9], Reward: [46.3], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [3], Action:[0.7], Reward: [52.5], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [4], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [5], Action:[0.4], Reward: [29.9], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [6], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [7], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [8], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [9], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [10], Action:[0.8], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 9, New State: [1], Action:[0.8], Reward: [48.2], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [4], Action:[1.], Reward: [36.8], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [5], Action:[0.4], Reward: [28.5], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [6], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [7], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [8], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [9], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [10], Action:[1.], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 10, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [3], Action:[0.7], Reward: [51.7], Period End: False\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 10, New State: [4], Action:[0.3], Reward: [63.8], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [5], Action:[0.5], Reward: [26.8], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [6], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [7], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [8], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [9], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [10], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 11, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [2], Action:[0.7], Reward: [54.3], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [4], Action:[0.1], Reward: [72.2], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [5], Action:[1.], Reward: [15.7], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [6], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [7], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [8], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [9], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [10], Action:[0.7], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 12, New State: [1], Action:[0.9], Reward: [46.3], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [2], Action:[1.], Reward: [39.9], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [5], Action:[0.4], Reward: [29.], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [6], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [7], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [8], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [10], Action:[0.9], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 13, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [3], Action:[0.6], Reward: [55.4], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [4], Action:[0.3], Reward: [67.7], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [5], Action:[1.], Reward: [15.4], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [6], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [7], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [8], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [9], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [10], Action:[0.9], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 14, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [2], Action:[1.], Reward: [42.2], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [4], Action:[0.1], Reward: [72.2], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [5], Action:[0.8], Reward: [19.6], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [6], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [7], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [8], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [9], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [10], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 15, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [3], Action:[0.5], Reward: [60.1], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [4], Action:[0.8], Reward: [43.5], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [5], Action:[0.6], Reward: [24.8], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [6], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [7], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [8], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [9], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [10], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 16, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [2], Action:[0.7], Reward: [53.1], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [4], Action:[0.5], Reward: [57.], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [5], Action:[0.2], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [6], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [7], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [8], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [9], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [10], Action:[0.7], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 17, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [2], Action:[0.7], Reward: [53.9], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [4], Action:[1.], Reward: [36.1], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [5], Action:[0.5], Reward: [26.6], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [6], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [7], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [8], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [9], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [10], Action:[0.5], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 18, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [2], Action:[0.9], Reward: [42.9], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [3], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [5], Action:[0.6], Reward: [54.7], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [6], Action:[0.9], Reward: [17.], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [7], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [8], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [9], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [10], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 19, New State: [1], Action:[0.9], Reward: [43.7], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [4], Action:[1.], Reward: [38.2], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [5], Action:[0.9], Reward: [18.1], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [6], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [7], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [8], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [9], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [10], Action:[0.6], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 20, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [3], Action:[0.2], Reward: [75.5], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [4], Action:[0.6], Reward: [51.9], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [5], Action:[0.5], Reward: [26.], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [6], Action:[0.2], Reward: [0], Period End: False\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 20, New State: [7], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [8], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [9], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [10], Action:[0.8], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 21, New State: [1], Action:[1.], Reward: [43.], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [4], Action:[0.8], Reward: [46.5], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [5], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [6], Action:[0.2], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [7], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [8], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [9], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [10], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 22, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [2], Action:[0.8], Reward: [49.], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [4], Action:[0.4], Reward: [61.7], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [5], Action:[0.7], Reward: [21.1], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [6], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [7], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [8], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [9], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [10], Action:[0.9], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 23, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [2], Action:[0.7], Reward: [51.5], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [4], Action:[0.7], Reward: [50.9], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [5], Action:[0.6], Reward: [24.4], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [6], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [7], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [8], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [9], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [10], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 24, New State: [1], Action:[0.8], Reward: [52.4], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [3], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [4], Action:[0.6], Reward: [54.8], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [5], Action:[0.3], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [6], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [7], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [8], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [9], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [10], Action:[1.], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 25, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [3], Action:[0.1], Reward: [78.6], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [4], Action:[0.2], Reward: [70.6], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [5], Action:[0.7], Reward: [21.4], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [6], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [7], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [8], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [9], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [10], Action:[0.9], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 26, New State: [1], Action:[0.8], Reward: [49.5], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [3], Action:[0.8], Reward: [48.], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [4], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [5], Action:[0.5], Reward: [27.], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [6], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [7], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [8], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [10], Action:[0.9], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 27, New State: [1], Action:[0.8], Reward: [48.5], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [3], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [4], Action:[0.1], Reward: [72.2], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [5], Action:[0.6], Reward: [24.2], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [6], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [7], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [8], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [9], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [10], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 28, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [2], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [3], Action:[0.7], Reward: [51.5], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [4], Action:[0.6], Reward: [53.9], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [5], Action:[0.3], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [6], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [7], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [8], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [9], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [10], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 29, New State: [1], Action:[1.], Reward: [43.4], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [4], Action:[0.1], Reward: [72.2], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [5], Action:[0.8], Reward: [20.5], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [6], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [7], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [8], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [10], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 30, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [3], Action:[0.9], Reward: [46.], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [4], Action:[0.8], Reward: [45.9], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [5], Action:[0.6], Reward: [24.8], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [6], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [7], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [8], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [10], Action:[0.2], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 31, New State: [1], Action:[0.8], Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [3], Action:[0.9], Reward: [41.4], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [5], Action:[0.4], Reward: [29.3], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [6], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [7], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [8], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [10], Action:[0.6], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 32, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [2], Action:[0.7], Reward: [52.5], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [4], Action:[0.3], Reward: [64.6], Period End: False\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 32, New State: [5], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [6], Action:[0.5], Reward: [27.9], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [7], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [8], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [10], Action:[0.6], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 33, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [2], Action:[0.8], Reward: [48.4], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [4], Action:[0.4], Reward: [60.3], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [5], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [6], Action:[0.5], Reward: [27.6], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [7], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [8], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [9], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [10], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 34, New State: [1], Action:[0.9], Reward: [47.8], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [2], Action:[0.7], Reward: [49.5], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [5], Action:[0.7], Reward: [22.8], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [6], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [7], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [8], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [9], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [10], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 35, New State: [1], Action:[0.7], Reward: [54.7], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [4], Action:[0.7], Reward: [50.3], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [5], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [6], Action:[0.3], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [7], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [8], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [9], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [10], Action:[0.2], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 36, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [3], Action:[1.], Reward: [40.4], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [4], Action:[0.4], Reward: [61.5], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [5], Action:[0.5], Reward: [26.1], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [6], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [7], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [8], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [9], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [10], Action:[0.6], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 37, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [3], Action:[0.7], Reward: [53.4], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [4], Action:[0.7], Reward: [48.5], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [5], Action:[1.], Reward: [16.1], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [6], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [7], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [8], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [9], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [10], Action:[0.8], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 38, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [2], Action:[0.7], Reward: [52.6], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [3], Action:[0.6], Reward: [55.], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [4], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [5], Action:[0.9], Reward: [17.], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [6], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [7], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [8], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [9], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [10], Action:[0.9], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 39, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [3], Action:[0.8], Reward: [47.8], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [4], Action:[0.], Reward: [72.2], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [5], Action:[0.3], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [6], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [7], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [8], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [9], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [10], Action:[0.], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 40, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [2], Action:[0.6], Reward: [55.8], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [4], Action:[0.9], Reward: [40.1], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [5], Action:[0.5], Reward: [26.], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [6], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [7], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [8], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [9], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [10], Action:[0.8], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 41, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [3], Action:[0.6], Reward: [57.8], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [4], Action:[0.5], Reward: [58.8], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [5], Action:[0.8], Reward: [19.5], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [6], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [7], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [8], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [10], Action:[0.5], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 42, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [2], Action:[0.8], Reward: [49.], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [3], Action:[0.8], Reward: [44.4], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [4], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [5], Action:[0.7], Reward: [22.1], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [6], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [7], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [8], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [9], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [10], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 43, New State: [1], Action:[1.], Reward: [42.4], Period End: False\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 43, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [3], Action:[0.9], Reward: [40.6], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [5], Action:[0.6], Reward: [24.9], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [6], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [7], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [8], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [9], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [10], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 44, New State: [1], Action:[0.9], Reward: [44.2], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [2], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [3], Action:[0.8], Reward: [46.1], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [5], Action:[0.4], Reward: [29.3], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [6], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [7], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [8], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [9], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [10], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 45, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [2], Action:[0.7], Reward: [55.], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [3], Action:[0.9], Reward: [42.5], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [4], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [5], Action:[0.3], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [6], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [7], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [8], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [10], Action:[1.], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 46, New State: [1], Action:[0.8], Reward: [51.3], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [2], Action:[1.], Reward: [38.9], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [3], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [4], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [5], Action:[0.8], Reward: [20.7], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [6], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [7], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [8], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [10], Action:[0.2], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 47, New State: [1], Action:[0.7], Reward: [55.6], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [3], Action:[0.7], Reward: [49.6], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [5], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [6], Action:[0.5], Reward: [26.9], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [7], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [8], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [9], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [10], Action:[0.8], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 48, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [3], Action:[0.9], Reward: [43.5], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [4], Action:[0.7], Reward: [47.], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [5], Action:[0.9], Reward: [17.3], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [6], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [7], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [8], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [9], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [10], Action:[1.], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 49, New State: [1], Action:[0.9], Reward: [45.6], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [4], Action:[0.8], Reward: [43.1], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [5], Action:[0.4], Reward: [28.5], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [6], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [7], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [8], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [9], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [10], Action:[0.6], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 50, New State: [1], Action:[0.8], Reward: [50.1], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [4], Action:[0.4], Reward: [61.], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [5], Action:[0.2], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [6], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [7], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [8], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [10], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 51, New State: [1], Action:[0.8], Reward: [48.5], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [2], Action:[0.8], Reward: [48.7], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [4], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [5], Action:[1.], Reward: [15.1], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [6], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [7], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [8], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [9], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [10], Action:[0.], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 52, New State: [1], Action:[0.8], Reward: [49.6], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [4], Action:[0.7], Reward: [48.7], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [5], Action:[0.4], Reward: [28.7], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [6], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [7], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [8], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [9], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [10], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 53, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [3], Action:[0.1], Reward: [77.2], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [4], Action:[0.8], Reward: [43.2], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [5], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [6], Action:[0.3], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [7], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [8], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [9], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [10], Action:[0.9], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 54, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [2], Action:[0.8], Reward: [47.9], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [4], Action:[1.], Reward: [37.3], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [5], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [6], Action:[0.2], Reward: [30.], Period End: False\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 54, New State: [7], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [8], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [9], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [10], Action:[0.8], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 55, New State: [1], Action:[0.9], Reward: [46.7], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [3], Action:[0.9], Reward: [41.1], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [5], Action:[0.9], Reward: [17.9], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [6], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [7], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [8], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [9], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [10], Action:[1.], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 56, New State: [1], Action:[0.8], Reward: [48.7], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [4], Action:[0.3], Reward: [65.], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [5], Action:[0.7], Reward: [22.5], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [6], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [7], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [8], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [10], Action:[0.7], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 57, New State: [1], Action:[0.7], Reward: [55.8], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [3], Action:[0.6], Reward: [52.8], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [5], Action:[0.5], Reward: [27.9], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [6], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [7], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [8], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [10], Action:[0.5], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 58, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [3], Action:[0.4], Reward: [66.6], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [4], Action:[0.7], Reward: [47.2], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [5], Action:[1.], Reward: [16.2], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [6], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [7], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [8], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [9], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [10], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 59, New State: [1], Action:[0.8], Reward: [51.6], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [5], Action:[0.1], Reward: [72.2], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [6], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [7], Action:[0.3], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [8], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [9], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [10], Action:[0.7], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 60, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [3], Action:[0.4], Reward: [67.6], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [4], Action:[0.8], Reward: [44.2], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [5], Action:[0.8], Reward: [19.3], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [6], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [7], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [8], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [10], Action:[0.2], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 61, New State: [1], Action:[0.9], Reward: [44.4], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [2], Action:[0.9], Reward: [41.5], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [5], Action:[0.2], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [6], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [7], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [8], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [10], Action:[0.9], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 62, New State: [1], Action:[0.7], Reward: [56.2], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [3], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [4], Action:[0.5], Reward: [55.9], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [5], Action:[0.7], Reward: [22.5], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [6], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [7], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [8], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [9], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [10], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 63, New State: [1], Action:[0.8], Reward: [51.3], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [2], Action:[1.], Reward: [39.8], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [5], Action:[0.7], Reward: [22.6], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [6], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [7], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [8], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [9], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [10], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 64, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [2], Action:[0.9], Reward: [44.9], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [3], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [4], Action:[0.2], Reward: [69.1], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [5], Action:[0.8], Reward: [19.9], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [6], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [7], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [8], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [9], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [10], Action:[0.8], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 65, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [3], Action:[0.8], Reward: [48.2], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [4], Action:[0.1], Reward: [72.2], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [5], Action:[0.4], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [6], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [7], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [8], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [9], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [10], Action:[1.], Reward: [0], Period End: True\n",
-      "done\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 66, New State: [1], Action:[0.7], Reward: [54.5], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [2], Action:[0.9], Reward: [41.6], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [3], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [4], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [5], Action:[0.8], Reward: [20.6], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [6], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [7], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [8], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [9], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [10], Action:[0.2], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 67, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [2], Action:[0.6], Reward: [57.8], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [3], Action:[0.7], Reward: [51.2], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [4], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [5], Action:[0.9], Reward: [17.3], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [6], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [7], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [8], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [10], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 68, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [3], Action:[0.9], Reward: [42.], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [4], Action:[0.], Reward: [72.2], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [5], Action:[1.], Reward: [15.1], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [6], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [7], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [8], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [10], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 69, New State: [1], Action:[0.8], Reward: [48.6], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [3], Action:[1.], Reward: [39.5], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [5], Action:[0.9], Reward: [17.1], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [6], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [7], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [8], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [9], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [10], Action:[0.9], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 70, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [3], Action:[0.8], Reward: [50.6], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [4], Action:[0.5], Reward: [59.], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [5], Action:[0.8], Reward: [19.7], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [6], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [7], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [8], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [9], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [10], Action:[0.9], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 71, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [3], Action:[0.6], Reward: [58.8], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [5], Action:[1.], Reward: [37.4], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [6], Action:[0.7], Reward: [21.5], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [7], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [8], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [9], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [10], Action:[0.8], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 72, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [3], Action:[0.4], Reward: [65.9], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [4], Action:[0.6], Reward: [53.3], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [5], Action:[1.], Reward: [15.2], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [6], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [7], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [8], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [9], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [10], Action:[0.], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 73, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [2], Action:[0.8], Reward: [48.4], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [4], Action:[0.5], Reward: [55.2], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [5], Action:[0.3], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [6], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [7], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [8], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [9], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [10], Action:[0.7], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 74, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [2], Action:[0.8], Reward: [50.7], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [4], Action:[0.2], Reward: [69.8], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [5], Action:[0.3], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [6], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [7], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [8], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [9], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [10], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 75, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [2], Action:[0.7], Reward: [52.2], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [4], Action:[0.4], Reward: [59.7], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [5], Action:[0.6], Reward: [25.6], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [6], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [7], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [8], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [9], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [10], Action:[0.7], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 76, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [2], Action:[0.8], Reward: [48.5], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [5], Action:[0.5], Reward: [58.], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [6], Action:[0.5], Reward: [25.9], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [7], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [8], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [9], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [10], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 77, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [2], Action:[0.7], Reward: [52.3], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [4], Action:[0.3], Reward: [67.9], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [5], Action:[0.9], Reward: [17.], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [6], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [7], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [8], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [9], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [10], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 78, New State: [1], Action:[0.8], Reward: [49.6], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [4], Action:[0.6], Reward: [52.4], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [5], Action:[0.8], Reward: [19.5], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [6], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [7], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [8], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [9], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [10], Action:[0.7], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 79, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [2], Action:[0.7], Reward: [53.], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [3], Action:[0.7], Reward: [49.4], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [4], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [5], Action:[0.8], Reward: [20.3], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [6], Action:[0.9], Reward: [0], Period End: False\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 79, New State: [7], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [8], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [10], Action:[0.8], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 80, New State: [1], Action:[0.7], Reward: [55.4], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [3], Action:[0.8], Reward: [46.9], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [4], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [5], Action:[0.3], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [6], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [7], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [8], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [9], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [10], Action:[0.9], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 81, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [3], Action:[0.], Reward: [79.5], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [4], Action:[0.8], Reward: [43.3], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [5], Action:[0.6], Reward: [23.8], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [6], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [7], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [8], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [9], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [10], Action:[0.8], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 82, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [3], Action:[0.7], Reward: [52.7], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [4], Action:[0.6], Reward: [54.3], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [5], Action:[0.9], Reward: [18.2], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [6], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [7], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [8], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [9], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [10], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 83, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [2], Action:[0.7], Reward: [54.6], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [4], Action:[0.2], Reward: [70.9], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [5], Action:[0.6], Reward: [25.3], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [6], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [7], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [8], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [9], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [10], Action:[0.5], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 84, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [3], Action:[0.2], Reward: [74.], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [4], Action:[0.6], Reward: [53.3], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [5], Action:[0.7], Reward: [22.7], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [6], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [7], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [8], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [9], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [10], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 85, New State: [1], Action:[0.8], Reward: [51.5], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [3], Action:[0.7], Reward: [51.7], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [4], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [5], Action:[0.7], Reward: [22.4], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [6], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [7], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [8], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [9], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [10], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 86, New State: [1], Action:[1.], Reward: [42.2], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [3], Action:[0.9], Reward: [40.5], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [5], Action:[0.7], Reward: [22.3], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [6], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [7], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [8], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [9], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [10], Action:[0.7], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 87, New State: [1], Action:[0.8], Reward: [51.5], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [4], Action:[0.7], Reward: [50.3], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [5], Action:[0.6], Reward: [23.4], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [6], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [7], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [8], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [10], Action:[0.6], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 88, New State: [1], Action:[0.8], Reward: [48.7], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [2], Action:[0.9], Reward: [41.6], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [4], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [5], Action:[1.], Reward: [15.4], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [6], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [7], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [8], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [9], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [10], Action:[0.6], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 89, New State: [1], Action:[1.], Reward: [41.7], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [4], Action:[0.1], Reward: [72.2], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [5], Action:[0.2], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [6], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [7], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [8], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [9], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [10], Action:[0.6], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 90, New State: [1], Action:[0.7], Reward: [53.9], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [2], Action:[0.], Reward: [0], Period End: False\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 90, New State: [3], Action:[0.7], Reward: [49.], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [4], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [5], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [6], Action:[0.7], Reward: [21.6], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [7], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [8], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [9], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [10], Action:[0.8], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 91, New State: [1], Action:[0.8], Reward: [49.1], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [4], Action:[0.9], Reward: [39.8], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [5], Action:[0.3], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [6], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [7], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [8], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [9], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [10], Action:[0.9], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 92, New State: [1], Action:[0.8], Reward: [48.9], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [3], Action:[0.6], Reward: [53.5], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [4], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [5], Action:[0.9], Reward: [17.4], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [6], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [7], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [8], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [9], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [10], Action:[0.7], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 93, New State: [1], Action:[1.], Reward: [42.5], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [2], Action:[0.7], Reward: [51.2], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [4], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [5], Action:[0.3], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [6], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [7], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [8], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [9], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [10], Action:[0.8], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 94, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [3], Action:[0.2], Reward: [73.6], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [4], Action:[0.4], Reward: [63.], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [5], Action:[0.4], Reward: [29.8], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [6], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [7], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [8], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [9], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [10], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 95, New State: [1], Action:[0.7], Reward: [54.9], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [4], Action:[0.], Reward: [72.2], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [5], Action:[0.6], Reward: [25.2], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [6], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [7], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [8], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [9], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [10], Action:[1.], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 96, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [3], Action:[0.5], Reward: [61.3], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [4], Action:[0.2], Reward: [68.], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [5], Action:[0.7], Reward: [22.], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [6], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [7], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [8], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [9], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [10], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 97, New State: [1], Action:[0.8], Reward: [49.7], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [2], Action:[0.9], Reward: [44.8], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [3], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [5], Action:[0.6], Reward: [24.5], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [6], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [7], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [8], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [9], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [10], Action:[0.6], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 98, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [3], Action:[0.7], Reward: [54.9], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [4], Action:[0.], Reward: [72.2], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [5], Action:[1.], Reward: [15.3], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [6], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [7], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [8], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [9], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [10], Action:[0.], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 99, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [2], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [3], Action:[0.5], Reward: [60.2], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [4], Action:[0.3], Reward: [64.9], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [5], Action:[0.2], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [6], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [7], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [8], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [9], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [10], Action:[0.9], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 100, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [2], Action:[0.6], Reward: [59.], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [3], Action:[0.8], Reward: [46.7], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [5], Action:[0.3], Reward: [30.], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [6], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [7], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [8], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [9], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [10], Action:[0.8], Reward: [0], Period End: True\n",
-      "done\n"
-     ]
-    }
-   ],
-   "source": [
-    "env = TradingEnv(db, nsteps)\n",
-    "rnd = 0\n",
-    "observation, info = env.reset(rnd)\n",
-    "for period in count():\n",
-    "    for timestep in count(): \n",
-    "        action = env.action_space.sample()\n",
-    "        observation, reward, done, info, reset_info = env.step(action, timestep, period, rnd)\n",
-    "        print(f\"Rnd: {rnd}, Period: {period}, New State: {observation}, Action:{np.round(action,1)}, Reward: {np.round(reward,1)}, Period End: {done}\")\n",
-    "\n",
-    "        if done:\n",
-    "            # If the episode is done, reset the environment\n",
-    "            print('done')\n",
-    "            observation, info = env.reset(rnd)\n",
-    "            timestep += 1\n",
-    "            break\n",
-    "    if period == nperiods:\n",
-    "        break\n",
-    "\n",
-    "# Close the environment when done\n",
-    "env.close()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 187,
-   "id": "16da85d9",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "rnd = 0\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "period = 0\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.01\n",
-    "max_frac = 1.0\n",
-    "rnd = 0\n",
-    "env = TradingEnv(db, nsteps)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 192,
-   "id": "e6fb57c5",
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Total Reward: [759.74]\n"
-     ]
-    }
-   ],
-   "source": [
-    "# Test the trained policy\n",
-    "state, _ = env.reset(rnd)\n",
-    "total_reward = 0.0\n",
-    "\n",
-    "for timestep in count():\n",
-    "    state = torch.FloatTensor(state)\n",
-    "    action_mean = policy_net(state)\n",
-    "    action = action_mean.detach().numpy()\n",
-    "    state, reward, done, _, _ = env.step(action, timestep, period, rnd)\n",
-    "    total_reward += reward\n",
-    "\n",
-    "    if done:\n",
-    "        break\n",
-    "\n",
-    "print(f\"Total Reward: {total_reward}\")\n",
-    "env.close()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 193,
-   "id": "64d6b445",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[61.87]</td>\n",
-       "      <td>[23.2, 8.6, 9.8, 12.3, 20.3, 12.4, 29.8, 33.5,...</td>\n",
-       "      <td>61.87</td>\n",
-       "      <td>0</td>\n",
-       "      <td>8.6</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>35.235</td>\n",
-       "      <td>1</td>\n",
-       "      <td>63.165</td>\n",
-       "      <td>26.635</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[0.91]</td>\n",
-       "      <td>[23.2, 24.3, 9.8, 12.3, 20.3, 12.4, 29.8, 33.5...</td>\n",
-       "      <td>0.91</td>\n",
-       "      <td>0</td>\n",
-       "      <td>9.8</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>9.800</td>\n",
-       "      <td>1</td>\n",
-       "      <td>80.900</td>\n",
-       "      <td>0.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[0.81]</td>\n",
-       "      <td>[23.2, 24.3, 11.4, 12.3, 20.3, 12.4, 29.8, 33....</td>\n",
-       "      <td>0.81</td>\n",
-       "      <td>0</td>\n",
-       "      <td>11.1</td>\n",
-       "      <td>9</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>11.100</td>\n",
-       "      <td>1</td>\n",
-       "      <td>69.900</td>\n",
-       "      <td>0.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[0.8]</td>\n",
-       "      <td>[23.2, 24.3, 11.4, 12.3, 20.3, 12.4, 29.8, 33....</td>\n",
-       "      <td>0.80</td>\n",
-       "      <td>0</td>\n",
-       "      <td>11.4</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>11.400</td>\n",
-       "      <td>1</td>\n",
-       "      <td>68.900</td>\n",
-       "      <td>0.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[0.74]</td>\n",
-       "      <td>[23.2, 24.3, 15.0, 12.3, 20.3, 12.4, 29.8, 33....</td>\n",
-       "      <td>0.74</td>\n",
-       "      <td>0</td>\n",
-       "      <td>12.3</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>12.300</td>\n",
-       "      <td>1</td>\n",
-       "      <td>61.300</td>\n",
-       "      <td>0.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>5</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>5</td>\n",
-       "      <td>[0.72]</td>\n",
-       "      <td>[23.2, 24.3, 15.0, 24.1, 20.3, 12.4, 29.8, 33....</td>\n",
-       "      <td>0.72</td>\n",
-       "      <td>0</td>\n",
-       "      <td>12.4</td>\n",
-       "      <td>5</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>12.400</td>\n",
-       "      <td>1</td>\n",
-       "      <td>60.000</td>\n",
-       "      <td>0.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>6</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>6</td>\n",
-       "      <td>[44.49]</td>\n",
-       "      <td>[23.2, 24.3, 15.0, 24.1, 20.3, 15.7, 29.8, 33....</td>\n",
-       "      <td>44.49</td>\n",
-       "      <td>0</td>\n",
-       "      <td>13.5</td>\n",
-       "      <td>9</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>28.995</td>\n",
-       "      <td>1</td>\n",
-       "      <td>38.905</td>\n",
-       "      <td>15.495</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>7</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>7</td>\n",
-       "      <td>[0.67]</td>\n",
-       "      <td>[23.2, 24.3, 15.0, 24.1, 20.3, 15.7, 29.8, 33....</td>\n",
-       "      <td>0.67</td>\n",
-       "      <td>0</td>\n",
-       "      <td>15.0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>15.000</td>\n",
-       "      <td>1</td>\n",
-       "      <td>52.100</td>\n",
-       "      <td>0.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>8</td>\n",
-       "      <td>[58.69]</td>\n",
-       "      <td>[23.2, 24.3, 16.0, 24.1, 20.3, 15.7, 29.8, 33....</td>\n",
-       "      <td>58.69</td>\n",
-       "      <td>0</td>\n",
-       "      <td>15.1</td>\n",
-       "      <td>8</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>36.895</td>\n",
-       "      <td>1</td>\n",
-       "      <td>29.505</td>\n",
-       "      <td>21.795</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>9</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>9</td>\n",
-       "      <td>[0.63]</td>\n",
-       "      <td>[23.2, 24.3, 16.0, 24.1, 20.3, 15.7, 29.8, 33....</td>\n",
-       "      <td>0.63</td>\n",
-       "      <td>0</td>\n",
-       "      <td>15.7</td>\n",
-       "      <td>5</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>15.700</td>\n",
-       "      <td>1</td>\n",
-       "      <td>47.700</td>\n",
-       "      <td>0.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>10</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>10</td>\n",
-       "      <td>[22.82]</td>\n",
-       "      <td>[23.2, 24.3, 16.0, 24.1, 20.3, 18.5, 29.8, 33....</td>\n",
-       "      <td>22.82</td>\n",
-       "      <td>0</td>\n",
-       "      <td>16.0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>19.410</td>\n",
-       "      <td>1</td>\n",
-       "      <td>42.090</td>\n",
-       "      <td>3.410</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>11</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>11</td>\n",
-       "      <td>[59.5]</td>\n",
-       "      <td>[23.2, 24.3, 23.8, 24.1, 20.3, 18.5, 29.8, 33....</td>\n",
-       "      <td>59.50</td>\n",
-       "      <td>0</td>\n",
-       "      <td>18.5</td>\n",
-       "      <td>5</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>39.000</td>\n",
-       "      <td>1</td>\n",
-       "      <td>20.500</td>\n",
-       "      <td>20.500</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>12</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>12</td>\n",
-       "      <td>[0.39]</td>\n",
-       "      <td>[23.2, 24.3, 23.8, 24.1, 20.3, 21.2, 29.8, 33....</td>\n",
-       "      <td>0.39</td>\n",
-       "      <td>0</td>\n",
-       "      <td>20.3</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>20.300</td>\n",
-       "      <td>1</td>\n",
-       "      <td>19.100</td>\n",
-       "      <td>0.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>13</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>13</td>\n",
-       "      <td>[31.43]</td>\n",
-       "      <td>[23.2, 24.3, 23.8, 24.1, 24.9, 21.2, 29.8, 33....</td>\n",
-       "      <td>31.43</td>\n",
-       "      <td>0</td>\n",
-       "      <td>21.2</td>\n",
-       "      <td>5</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>26.315</td>\n",
-       "      <td>1</td>\n",
-       "      <td>9.185</td>\n",
-       "      <td>5.115</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>14</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>14</td>\n",
-       "      <td>[26.9]</td>\n",
-       "      <td>[23.2, 24.3, 23.8, 24.1, 24.9, 35.2, 29.8, 33....</td>\n",
-       "      <td>26.90</td>\n",
-       "      <td>0</td>\n",
-       "      <td>23.1</td>\n",
-       "      <td>9</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>25.000</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1.900</td>\n",
-       "      <td>1.900</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "    rnd  period  step     bids  \\\n",
-       "0     0       0     0  [61.87]   \n",
-       "1     0       0     1   [0.91]   \n",
-       "2     0       0     2   [0.81]   \n",
-       "3     0       0     3    [0.8]   \n",
-       "4     0       0     4   [0.74]   \n",
-       "5     0       0     5   [0.72]   \n",
-       "6     0       0     6  [44.49]   \n",
-       "7     0       0     7   [0.67]   \n",
-       "8     0       0     8  [58.69]   \n",
-       "9     0       0     9   [0.63]   \n",
-       "10    0       0    10  [22.82]   \n",
-       "11    0       0    11   [59.5]   \n",
-       "12    0       0    12   [0.39]   \n",
-       "13    0       0    13  [31.43]   \n",
-       "14    0       0    14   [26.9]   \n",
-       "\n",
-       "                                                 asks  current_bid  \\\n",
-       "0   [23.2, 8.6, 9.8, 12.3, 20.3, 12.4, 29.8, 33.5,...        61.87   \n",
-       "1   [23.2, 24.3, 9.8, 12.3, 20.3, 12.4, 29.8, 33.5...         0.91   \n",
-       "2   [23.2, 24.3, 11.4, 12.3, 20.3, 12.4, 29.8, 33....         0.81   \n",
-       "3   [23.2, 24.3, 11.4, 12.3, 20.3, 12.4, 29.8, 33....         0.80   \n",
-       "4   [23.2, 24.3, 15.0, 12.3, 20.3, 12.4, 29.8, 33....         0.74   \n",
-       "5   [23.2, 24.3, 15.0, 24.1, 20.3, 12.4, 29.8, 33....         0.72   \n",
-       "6   [23.2, 24.3, 15.0, 24.1, 20.3, 15.7, 29.8, 33....        44.49   \n",
-       "7   [23.2, 24.3, 15.0, 24.1, 20.3, 15.7, 29.8, 33....         0.67   \n",
-       "8   [23.2, 24.3, 16.0, 24.1, 20.3, 15.7, 29.8, 33....        58.69   \n",
-       "9   [23.2, 24.3, 16.0, 24.1, 20.3, 15.7, 29.8, 33....         0.63   \n",
-       "10  [23.2, 24.3, 16.0, 24.1, 20.3, 18.5, 29.8, 33....        22.82   \n",
-       "11  [23.2, 24.3, 23.8, 24.1, 20.3, 18.5, 29.8, 33....        59.50   \n",
-       "12  [23.2, 24.3, 23.8, 24.1, 20.3, 21.2, 29.8, 33....         0.39   \n",
-       "13  [23.2, 24.3, 23.8, 24.1, 24.9, 21.2, 29.8, 33....        31.43   \n",
-       "14  [23.2, 24.3, 23.8, 24.1, 24.9, 35.2, 29.8, 33....        26.90   \n",
-       "\n",
-       "    current_bid_idx  current_ask  current_ask_idx   buy   sell   price  sale  \\\n",
-       "0                 0          8.6                1  True   True  35.235     1   \n",
-       "1                 0          9.8                2  True  False   9.800     1   \n",
-       "2                 0         11.1                9  True  False  11.100     1   \n",
-       "3                 0         11.4                2  True  False  11.400     1   \n",
-       "4                 0         12.3                3  True  False  12.300     1   \n",
-       "5                 0         12.4                5  True  False  12.400     1   \n",
-       "6                 0         13.5                9  True   True  28.995     1   \n",
-       "7                 0         15.0                2  True  False  15.000     1   \n",
-       "8                 0         15.1                8  True   True  36.895     1   \n",
-       "9                 0         15.7                5  True  False  15.700     1   \n",
-       "10                0         16.0                2  True   True  19.410     1   \n",
-       "11                0         18.5                5  True   True  39.000     1   \n",
-       "12                0         20.3                4  True  False  20.300     1   \n",
-       "13                0         21.2                5  True   True  26.315     1   \n",
-       "14                0         23.1                9  True   True  25.000     1   \n",
-       "\n",
-       "    bprofit  sprofit  \n",
-       "0    63.165   26.635  \n",
-       "1    80.900    0.000  \n",
-       "2    69.900    0.000  \n",
-       "3    68.900    0.000  \n",
-       "4    61.300    0.000  \n",
-       "5    60.000    0.000  \n",
-       "6    38.905   15.495  \n",
-       "7    52.100    0.000  \n",
-       "8    29.505   21.795  \n",
-       "9    47.700    0.000  \n",
-       "10   42.090    3.410  \n",
-       "11   20.500   20.500  \n",
-       "12   19.100    0.000  \n",
-       "13    9.185    5.115  \n",
-       "14    1.900    1.900  "
-      ]
-     },
-     "execution_count": 193,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.head(15)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 194,
-   "id": "4cde3fe5",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>24943</th>\n",
-       "      <td>0</td>\n",
-       "      <td>389</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[9.12]</td>\n",
-       "      <td>[23.2, 8.6, 9.8, 12.3, 20.3, 12.4, 29.8, 33.5,...</td>\n",
-       "      <td>9.12</td>\n",
-       "      <td>0</td>\n",
-       "      <td>8.6</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>8.86</td>\n",
-       "      <td>1</td>\n",
-       "      <td>89.54</td>\n",
-       "      <td>0.26</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>24944</th>\n",
-       "      <td>0</td>\n",
-       "      <td>389</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[2.74]</td>\n",
-       "      <td>[23.2, 24.3, 9.8, 12.3, 20.3, 12.4, 29.8, 33.5...</td>\n",
-       "      <td>2.74</td>\n",
-       "      <td>0</td>\n",
-       "      <td>9.8</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>9.80</td>\n",
-       "      <td>1</td>\n",
-       "      <td>80.90</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>24945</th>\n",
-       "      <td>0</td>\n",
-       "      <td>389</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[0.98]</td>\n",
-       "      <td>[23.2, 24.3, 11.4, 12.3, 20.3, 12.4, 29.8, 33....</td>\n",
-       "      <td>0.98</td>\n",
-       "      <td>0</td>\n",
-       "      <td>11.1</td>\n",
-       "      <td>9</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>11.10</td>\n",
-       "      <td>1</td>\n",
-       "      <td>69.90</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>24946</th>\n",
-       "      <td>0</td>\n",
-       "      <td>389</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[0.81]</td>\n",
-       "      <td>[23.2, 24.3, 11.4, 12.3, 20.3, 12.4, 29.8, 33....</td>\n",
-       "      <td>0.81</td>\n",
-       "      <td>0</td>\n",
-       "      <td>11.4</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>11.40</td>\n",
-       "      <td>1</td>\n",
-       "      <td>68.90</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>24947</th>\n",
-       "      <td>0</td>\n",
-       "      <td>389</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[0.74]</td>\n",
-       "      <td>[23.2, 24.3, 15.0, 12.3, 20.3, 12.4, 29.8, 33....</td>\n",
-       "      <td>0.74</td>\n",
-       "      <td>0</td>\n",
-       "      <td>12.3</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>12.30</td>\n",
-       "      <td>1</td>\n",
-       "      <td>61.30</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>24948</th>\n",
-       "      <td>0</td>\n",
-       "      <td>389</td>\n",
-       "      <td>5</td>\n",
-       "      <td>[0.72]</td>\n",
-       "      <td>[23.2, 24.3, 15.0, 24.1, 20.3, 12.4, 29.8, 33....</td>\n",
-       "      <td>0.72</td>\n",
-       "      <td>0</td>\n",
-       "      <td>12.4</td>\n",
-       "      <td>5</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>12.40</td>\n",
-       "      <td>1</td>\n",
-       "      <td>60.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>24949</th>\n",
-       "      <td>0</td>\n",
-       "      <td>389</td>\n",
-       "      <td>6</td>\n",
-       "      <td>[0.68]</td>\n",
-       "      <td>[23.2, 24.3, 15.0, 24.1, 20.3, 15.7, 29.8, 33....</td>\n",
-       "      <td>0.68</td>\n",
-       "      <td>0</td>\n",
-       "      <td>13.5</td>\n",
-       "      <td>9</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>13.50</td>\n",
-       "      <td>1</td>\n",
-       "      <td>54.40</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>24950</th>\n",
-       "      <td>0</td>\n",
-       "      <td>389</td>\n",
-       "      <td>7</td>\n",
-       "      <td>[0.67]</td>\n",
-       "      <td>[23.2, 24.3, 15.0, 24.1, 20.3, 15.7, 29.8, 33....</td>\n",
-       "      <td>0.67</td>\n",
-       "      <td>0</td>\n",
-       "      <td>15.0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>15.00</td>\n",
-       "      <td>1</td>\n",
-       "      <td>52.10</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>24951</th>\n",
-       "      <td>0</td>\n",
-       "      <td>389</td>\n",
-       "      <td>8</td>\n",
-       "      <td>[0.66]</td>\n",
-       "      <td>[23.2, 24.3, 16.0, 24.1, 20.3, 15.7, 29.8, 33....</td>\n",
-       "      <td>0.66</td>\n",
-       "      <td>0</td>\n",
-       "      <td>15.1</td>\n",
-       "      <td>8</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>15.10</td>\n",
-       "      <td>1</td>\n",
-       "      <td>51.30</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>24952</th>\n",
-       "      <td>0</td>\n",
-       "      <td>389</td>\n",
-       "      <td>9</td>\n",
-       "      <td>[0.63]</td>\n",
-       "      <td>[23.2, 24.3, 16.0, 24.1, 20.3, 15.7, 29.8, 33....</td>\n",
-       "      <td>0.63</td>\n",
-       "      <td>0</td>\n",
-       "      <td>15.7</td>\n",
-       "      <td>5</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>15.70</td>\n",
-       "      <td>1</td>\n",
-       "      <td>47.70</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>24953</th>\n",
-       "      <td>0</td>\n",
-       "      <td>389</td>\n",
-       "      <td>10</td>\n",
-       "      <td>[0.62]</td>\n",
-       "      <td>[23.2, 24.3, 16.0, 24.1, 20.3, 18.5, 29.8, 33....</td>\n",
-       "      <td>0.62</td>\n",
-       "      <td>0</td>\n",
-       "      <td>16.0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>16.00</td>\n",
-       "      <td>1</td>\n",
-       "      <td>45.50</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>24954</th>\n",
-       "      <td>0</td>\n",
-       "      <td>389</td>\n",
-       "      <td>11</td>\n",
-       "      <td>[0.6]</td>\n",
-       "      <td>[23.2, 24.3, 23.8, 24.1, 20.3, 18.5, 29.8, 33....</td>\n",
-       "      <td>0.60</td>\n",
-       "      <td>0</td>\n",
-       "      <td>18.5</td>\n",
-       "      <td>5</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>18.50</td>\n",
-       "      <td>1</td>\n",
-       "      <td>41.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>24955</th>\n",
-       "      <td>0</td>\n",
-       "      <td>389</td>\n",
-       "      <td>12</td>\n",
-       "      <td>[0.39]</td>\n",
-       "      <td>[23.2, 24.3, 23.8, 24.1, 20.3, 21.2, 29.8, 33....</td>\n",
-       "      <td>0.39</td>\n",
-       "      <td>0</td>\n",
-       "      <td>20.3</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>20.30</td>\n",
-       "      <td>1</td>\n",
-       "      <td>19.10</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>24956</th>\n",
-       "      <td>0</td>\n",
-       "      <td>389</td>\n",
-       "      <td>13</td>\n",
-       "      <td>[0.36]</td>\n",
-       "      <td>[23.2, 24.3, 23.8, 24.1, 24.9, 21.2, 29.8, 33....</td>\n",
-       "      <td>0.36</td>\n",
-       "      <td>0</td>\n",
-       "      <td>21.2</td>\n",
-       "      <td>5</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>21.20</td>\n",
-       "      <td>1</td>\n",
-       "      <td>14.30</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>24957</th>\n",
-       "      <td>0</td>\n",
-       "      <td>389</td>\n",
-       "      <td>14</td>\n",
-       "      <td>[0.27]</td>\n",
-       "      <td>[23.2, 24.3, 23.8, 24.1, 24.9, 35.2, 29.8, 33....</td>\n",
-       "      <td>0.27</td>\n",
-       "      <td>0</td>\n",
-       "      <td>23.1</td>\n",
-       "      <td>9</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>23.10</td>\n",
-       "      <td>1</td>\n",
-       "      <td>3.80</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "       rnd  period  step    bids  \\\n",
-       "24943    0     389     0  [9.12]   \n",
-       "24944    0     389     1  [2.74]   \n",
-       "24945    0     389     2  [0.98]   \n",
-       "24946    0     389     3  [0.81]   \n",
-       "24947    0     389     4  [0.74]   \n",
-       "24948    0     389     5  [0.72]   \n",
-       "24949    0     389     6  [0.68]   \n",
-       "24950    0     389     7  [0.67]   \n",
-       "24951    0     389     8  [0.66]   \n",
-       "24952    0     389     9  [0.63]   \n",
-       "24953    0     389    10  [0.62]   \n",
-       "24954    0     389    11   [0.6]   \n",
-       "24955    0     389    12  [0.39]   \n",
-       "24956    0     389    13  [0.36]   \n",
-       "24957    0     389    14  [0.27]   \n",
-       "\n",
-       "                                                    asks  current_bid  \\\n",
-       "24943  [23.2, 8.6, 9.8, 12.3, 20.3, 12.4, 29.8, 33.5,...         9.12   \n",
-       "24944  [23.2, 24.3, 9.8, 12.3, 20.3, 12.4, 29.8, 33.5...         2.74   \n",
-       "24945  [23.2, 24.3, 11.4, 12.3, 20.3, 12.4, 29.8, 33....         0.98   \n",
-       "24946  [23.2, 24.3, 11.4, 12.3, 20.3, 12.4, 29.8, 33....         0.81   \n",
-       "24947  [23.2, 24.3, 15.0, 12.3, 20.3, 12.4, 29.8, 33....         0.74   \n",
-       "24948  [23.2, 24.3, 15.0, 24.1, 20.3, 12.4, 29.8, 33....         0.72   \n",
-       "24949  [23.2, 24.3, 15.0, 24.1, 20.3, 15.7, 29.8, 33....         0.68   \n",
-       "24950  [23.2, 24.3, 15.0, 24.1, 20.3, 15.7, 29.8, 33....         0.67   \n",
-       "24951  [23.2, 24.3, 16.0, 24.1, 20.3, 15.7, 29.8, 33....         0.66   \n",
-       "24952  [23.2, 24.3, 16.0, 24.1, 20.3, 15.7, 29.8, 33....         0.63   \n",
-       "24953  [23.2, 24.3, 16.0, 24.1, 20.3, 18.5, 29.8, 33....         0.62   \n",
-       "24954  [23.2, 24.3, 23.8, 24.1, 20.3, 18.5, 29.8, 33....         0.60   \n",
-       "24955  [23.2, 24.3, 23.8, 24.1, 20.3, 21.2, 29.8, 33....         0.39   \n",
-       "24956  [23.2, 24.3, 23.8, 24.1, 24.9, 21.2, 29.8, 33....         0.36   \n",
-       "24957  [23.2, 24.3, 23.8, 24.1, 24.9, 35.2, 29.8, 33....         0.27   \n",
-       "\n",
-       "       current_bid_idx  current_ask  current_ask_idx   buy   sell  price  \\\n",
-       "24943                0          8.6                1  True   True   8.86   \n",
-       "24944                0          9.8                2  True  False   9.80   \n",
-       "24945                0         11.1                9  True  False  11.10   \n",
-       "24946                0         11.4                2  True  False  11.40   \n",
-       "24947                0         12.3                3  True  False  12.30   \n",
-       "24948                0         12.4                5  True  False  12.40   \n",
-       "24949                0         13.5                9  True  False  13.50   \n",
-       "24950                0         15.0                2  True  False  15.00   \n",
-       "24951                0         15.1                8  True  False  15.10   \n",
-       "24952                0         15.7                5  True  False  15.70   \n",
-       "24953                0         16.0                2  True  False  16.00   \n",
-       "24954                0         18.5                5  True  False  18.50   \n",
-       "24955                0         20.3                4  True  False  20.30   \n",
-       "24956                0         21.2                5  True  False  21.20   \n",
-       "24957                0         23.1                9  True  False  23.10   \n",
-       "\n",
-       "       sale  bprofit  sprofit  \n",
-       "24943     1    89.54     0.26  \n",
-       "24944     1    80.90     0.00  \n",
-       "24945     1    69.90     0.00  \n",
-       "24946     1    68.90     0.00  \n",
-       "24947     1    61.30     0.00  \n",
-       "24948     1    60.00     0.00  \n",
-       "24949     1    54.40     0.00  \n",
-       "24950     1    52.10     0.00  \n",
-       "24951     1    51.30     0.00  \n",
-       "24952     1    47.70     0.00  \n",
-       "24953     1    45.50     0.00  \n",
-       "24954     1    41.00     0.00  \n",
-       "24955     1    19.10     0.00  \n",
-       "24956     1    14.30     0.00  \n",
-       "24957     1     3.80     0.00  "
-      ]
-     },
-     "execution_count": 194,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.tail(15)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 196,
-   "id": "c953c7bf",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "env.db.step_data = env.db.step_data.drop_duplicates(subset=['rnd','period','step'], keep='last')"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 197,
-   "id": "9d5cfe09",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAz8AAAKrCAYAAADf1TOiAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjYuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8o6BhiAAAACXBIWXMAAA9hAAAPYQGoP6dpAAC2YUlEQVR4nOzdd3yV5f3/8fd9zsk4WSebLAiE6UCGCwfKUFvHt2602oqKdlhb1Frbat3V1rqKtv3VtuBe4EJbq1VAwIGigDjYYSaB7L3OuH5/BA6EhJFwkjvJeT0fDx5wrnPd9/nkSu7Deee+7uu2jDFGAAAAANDHOewuAAAAAAC6A+EHAAAAQFgg/AAAAAAIC4QfAAAAAGGB8AMAAAAgLBB+AAAAAIQFwg8AAACAsED4AQAAABAWCD8AAAAAwgLhBwC60NSpU5Wenq66urpD2s8vfvELJSUlqbS0NESVAeGNYxMIT4QfwCYTJkzQU0891WX7r6ys1IMPPqjLL79chx9+uFwulyzL0vvvv7/Pbe666y5ZlrXPP++8806X1dsXLV26VM8++6x+85vfKDY29pD2deutt6qpqUl33XVXaIprx3vvvadf/vKXmjx5slJSUmRZlk4++eT9brO/n5dx48Z1Wa176+rjacWKFbrrrrt00kknKTMzU5GRkcrOztb3v/99LVu2rN1t3njjDV1yySUaMWKEkpKS5Ha7NXToUH3/+9/X559/3qHXX7Vqle68806de+65GjBgQHCMfT5fKL68sNObjs26ujo9//zzuuyyyzRixAjFxsYqPj5exxxzjB5++GE1Nzfvc9tvv/1WU6ZMUXp6uqKjozV8+HDdeeedamhoOOjXf+qpp/Z7nFuWJafTGYovFegWLrsLAMJFfX296uvrlZqa2u7zmzdvVm5ubsheb9OmTbrlllskSTk5OUpNTdWOHTsOatupU6dq4MCBbdqHDBkSsvrCwW233aaEhAT99Kc/PeR9ZWRk6Morr9QTTzyhW265RQMGDAhBha399a9/1dy5cxUdHa0hQ4aovLz8oLbLzc3VlVde2aY9JycnxBXu1t3H009+8hN9+umnOvroo3XBBRcoLi5OK1as0EsvvaRXXnlFL7/8si644IJW28ydO1dLly7Vscceq6ysLEVGRmr9+vV6/fXX9fLLL+sf//iHrrnmmoN6/XfffVf33HOPnE6nhg4dqujoaDU2Nobs6ws3venYXLx4sX7wgx8oOTlZEydO1HnnnaeKigq9+eabuvnmm/Xaa69p3rx5io6ObrXdp59+qkmTJsnr9eqiiy5S//79NX/+fN1zzz2aN2+e5s2bp6ioqAO+/ujRo3XnnXfus7b58+frzDPPDMnXCnQLA6BbvPDCCyY5Odn89a9/NX6/35x66qnmySefNIWFhebyyy83aWlpprq6OmSvV15ebt5//31TVlZmjDFm6tSpRpJ577339rnNnXfeaSSZBQsWhKyOcLVmzRpjWZa59tprQ7bPJUuWGEnmtttuC9k+9/Txxx+br7/+2vh8PrNx40YjyZx00kn73UaSOfXUU7uknv3p7uPpscceM+vWrWvT/txzzxlJJiUlxTQ1NbV6rqGhod19rVy50kRFRRmPx9Nmm31ZvXq1WbJkiamvrzfGGJObm2skGa/X28GvBL3t2Fy+fLl57rnn2vysVFdXm7FjxxpJ5qGHHmr1nM/nM4cddpiRZObOnRts9/v95sILLzSSzB/+8IdDrm3cuHFtXgPo6Qg/wCEIBALm8ccfN4cffriJiooyWVlZ5mc/+5mprKw0ubm5Jjc3t1X/JUuWmAkTJpjRo0ebwYMHmzPOOMOkp6ebm2++ORhSukpPCT8LFiwwksydd95pli5dar7zne+YhIQEk5iYaC644AKzZcsWY4wxGzZsMJdccolJTU010dHRZsKECWbFihXt7rOurs7cf//9ZtSoUSYmJsbExsaacePGmRdeeKFN36amJvP444+bM8880wwYMMBERkaapKQkM3nyZPP222+3u/9d38va2lpz8803m/79+5vIyEgzePBg88c//tEEAoE22/z61782ksz777/f7j6bmprMPffcY/Ly8kxkZKQZOHCgue2220xjY+N+A8XAgQNNZmZmu68ZSt0dfna93tSpU82qVavMueeea5KSkkxMTIw56aSTzLvvvttmGzuPpz0NHTrUSDKff/75QW8zevRoI8ls27atU6/ZFeGHY7P1GHz88cdm8uTJJiEhwcTFxZkzzjjDLF26dJ/j113H5p6ef/55I8mcc845rdrnzZtnJJlTTjmlzTYbNmwwkkxubu4h1bpy5UojyWRnZxufz9fp/QDdjWt+gENwww036Oc//7kqKir0ox/9SJdeeqneeecdnXbaae3Owz7++OO1YMECTZgwQRs2bNCHH36o119/XQ8++KCSk5Nt+Ara9+GHH+qhhx7SAw88oJdffrlLLuRdunSpxo8fL0m69tprddxxx+m1117TaaedptWrV+u4447Ttm3bdMUVV+jss8/WwoULdfrpp6u2trbVfiorK3XyySfr1ltvldPp1NVXX62pU6eqpKREl112mX73u9+16l9eXq7p06erpqZGp59+um666SZ973vf0/Lly3XWWWfpX//6V7v1er1efec739Grr76qM888U9dcc40aGhr0m9/8Rvfcc0+b/u+//76cTme7170YYzRlyhTdcccdsixL119/vc455xzNmjVLU6ZM2e+4nXTSSSoqKtI333yz337dqbKyUrNmzdL999+vv/71r1qyZEmn97Vx40adcMIJKi8v149//GNdfPHF+uKLL3TmmWfq5ZdfbtW3pxxPERERkiSX6+Bmkq9du1Zr1qxRamqqMjMzu7K0TgnnY3OXTz/9VBMmTFBUVJR+9rOf6cwzz9S8efM0fvx4LV68uN1t7Dg29/WzN3/+fEnSd7/73Tbb5OXladiwYdq8ebPy8/M7/dr/+Mc/JEnTpk3jmh/0KlzzA3TSxx9/rMcee0yDBw/WZ599Fvywdd9992nixIkqKipqc83BZ599pt/85jeqqKjQ4MGDlZeXp/PPP19Tp07Vb37zm1Yf2Dp68eyECRM0YcKEQ/2yJEm33357q8dRUVH61a9+pXvuuUeWZYXkNd5++20999xzuvzyy4Nt06ZN06xZs3TiiSfql7/8pW677bbgc/fee6/uuOMOzZw5U9OnTw+233DDDVq+fLkeeOCB4DVOktTY2KjzzjtP999/vy666CKNHj1akpSUlKTNmze3uR6lqqpKJ510km655RZdfvnlcrvdrZ4vLCzUqFGj9N577wWfu/POOzVs2DA9+uijuvXWW4MfROrq6rRixQoddthh7V5M/eKLL2ru3LkaN26cFixYEJyrf/fdd+vYY4/d77gde+yxev7557Vo0SIdeeSRwfYPPvhAH3zwwX633VuoLtD+8ssvNW3atFZto0aN0rPPPquRI0d2aF+LFi3SzTffrAcffDDYdv311+uEE07QT37yE5155plKSEiQ1DOOpyVLlujbb79VdnZ2q+/Hnt5//319+OGHam5u1saNG/XWW29Jkv71r3/J4eh5v4MM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Zat+M2fO1LvvvhuSuizL0imnnKLS0lKtX7++zfNXXXWVpJa7zO85/aa8vPyAH6iXLFkip9OpU045pVX7XXfd1eGfmUO1cuXKVlOd9mzfdS3LD37wgzbPW5a1z1UDq6qq2ixP/Pnnn+v555+Xx+Npc13awTrU46miokKnnXaalixZorvvvvuA36empiZ9+eWX7T63dOlS/f3vf5fT6WyzSteWLVu0evVq1dfXd+rr3BPHZlsHOjZ3Wbdunf72t7+1aps7d64WLlyoIUOGBJcC31NXHptPP/20rrjiCg0YMECLFi06YGg59dRTddhhh2nRokV68803g+2BQEC//vWvJbVMTd3zOPR6vVq9erU2bNiwz/3OmTNHFRUVOvPMM4PXVAG9Td/8lRPQDU466ST9/Oc/1+OPP64jjzxSF110kSIiIjR37lwlJSX1iPt33HzzzcGLbz/88ENJ0oMPPqjnnntOknTeeefpvPPOk9QyZeOwww7TMccco8MOO0yZmZkqKSnRggULtHHjRqWmpurFF19s85vQQCAgyb7fYP/lL3/RunXrdMcdd+jZZ5/VySefrH79+qmwsFCrVq3S0qVL9eKLL2rQoEGSWpbffffdd3XyySdrypQp8ng8+vzzz/Xhhx/qoosu0iuvvBKSui688EK9+uqrevfdd9tcjP39739fL7/8st58800deeSROvfcc+X1evXKK6/o2GOP3eeHj6qqKn322WeaPHnyPqd/HYoPP/wweC+VXddirFu3Lhj0Jempp54K/vuRRx7RW2+9pfHjx6t///6KiorS6tWr9c4778jv9+vaa6/V97///VavsevnZV/TZU455RT961//0qeffhq8b8rLL7+sQCCgJ554IrjMdXe74IIL9Pnnn2vw4MEKBALtBorzzjsv+Fv/hoYGjR49WkcddZSOPPJI5eTkqL6+XqtWrQreg+XBBx/UiBEjWu3jiiuu0MKFC9tM/SotLdXNN9/c6rHUMvVo1wfY3/zmN632x7HZvv0dm7t897vf1S9/+Uv997//1ahRo7R+/Xq99tprio6O1qxZs9q8D3blsblgwQJdffXVCgQCmjhxop588sk2fRITE3XDDTcEHzudTj355JOaNGmSLrroIl100UUaMGCA5s2bp88//1wnnXSSbrzxxlb7KCgo0GGHHabc3Fxt2rSp3Vp2TXn70Y9+FLKvD+h2oV4+DggngUDAPP7442bEiBEmMjLSZGZmmuuuu85UVlYG7zxup13LwO7rz57L+VZVVZmf//zn5vjjjzf9+vUzERERJjY21hx11FHm17/+tdmxY0e7r3HeeecZh8Nh1qxZc1A17XkH9b3tWu546tSp7W6rfSwBvevO8CeccIJJSEgwkZGRpn///mbSpEnm0UcfNaWlpa36v/XWW+b44483cXFxxuPxmNNPP90sXLgwuMz0k08+2ar//r6Xu5axXbBgQZua0tPTzXHHHdfudk1NTebuu+82gwYNMpGRkSY3N9fceuutprGxcZ9f5xNPPGEkmddff73dfR6qXV///v7s6fXXXzfnn3++GTx4sImPjzcREREmIyPDnHPOOWbu3LntvsauJY4vv/zyVu17fu+//fZb873vfc8kJiYat9ttTjzxxENeGvpQHehY2vvnprm52dx7773mtNNOM9nZ2SYqKspER0ebwYMHmx/+8IdmyZIl7b7OrqWU9/552jU++/uz9zYcmx0/Nvccg48//thMnjzZxMfHm7i4OHP66aebzz77rN3X6spj82COy32NwTfffGMuuugik5KSYiIjI83QoUPNHXfcYerr69v03fU93te+vv32WyPJ5OTktFnuHOhNLGNsWE8XCAMDBw6UpH3+Bq0vMMYoLS1NkyZN0uzZs+0up8f5wx/+oFtvvVXLli3r0LUqlmXp1FNPbXP9zzHHHKPa2lp98803vfZC48cee0w33HCDvvrqKx1xxBHB9k2bNmnQoEGaOnVqq7NL6ByOzf3b17H5wQcfaOLEibrzzjs7NF2wLxybQLjgmh8Anfb111+rrKwsJNc49UU33nijBgwYoDvuuOOQ9/XGG2/oiy++0EMPPdSrP1wtXLhQ3/ve91oFH4Qex+b+cWwC4YtrfgB02siRI225GWtvER0drWeffVYLFixQXV2dYmNjO72vhoYGPfroozrnnHNCWGH3e/XVV+0uISxwbO4fxyYQvgg/ANCFTjnllDarP3XG3gsHADg0HJtAeOKaHwAAAABhgWt+AAAAAIQFwg8AAACAsED4AQAAABAWCD8AAAAAwkKvXu2toqJCPp/P7jKUlpamkpISu8sIW4y/vRh/ezH+9mL87cX424extxfj35rL5VJSUtLB9e3iWrqUz+eT1+u1tQbLsoK1sHBe92P87cX424vxtxfjby/G3z6Mvb0Y/0PDtDcAAAAAYYHwAwAAACAsEH4AAAAAhAXCDwAAAICwQPgBAAAAEBYIPwAAAADCAuEHAAAAQFgg/AAAAAAIC4QfAAAAAGGB8AMAAAAgLBB+AAAAAIQFV0c3+Pbbb/Xmm29q48aNqqio0M0336zjjjsu+LwxRrNnz9a8efNUV1enESNG6JprrlFmZmawT21trWbNmqUvvvhClmXp+OOP11VXXaXo6OjQfFUAAAAAsJcOn/lpamrSwIEDNW3atHafnzt3rv773//q2muv1f3336+oqCjdd999am5uDvZ57LHHtHXrVv3ud7/Tb37zG61atUpPPPFE578KAAAAADiADoefMWPG6NJLL211tmcXY4zefvttXXDBBTr22GOVm5ur66+/XhUVFVq6dKkkadu2bVqxYoV+8pOfaOjQoRoxYoSuvvpqffzxxyovLz/0rwgAAAAA2hHSa36Ki4tVWVmpo446KtgWExOjIUOGaO3atZKktWvXKjY2VoMHDw72GTlypCzL0vr160NZDgAAAAAEdfian/2prKyUJHk8nlbtHo8n+FxlZaUSEhJaPe90OhUXFxfsszev1yuv1xt8bFmW3G538N922vX6dtcRrhh/ezH+9mL87cX424vxtw9jby/G/9CENPx0lddff12vvPJK8PGgQYP0wAMPKC0tzcaqWsvIyLC7hLDG+NuL8bcX428vxt9ejL99GHt7Mf6dE9Lwk5iYKEmqqqpSUlJSsL2qqkoDBw4M9qmurm61nd/vV21tbXD7vZ1//vk655xzgo93Jd2SkhL5fL7QfQGdYFmWMjIytH37dhljbK0lHDH+9mL87cX424vxtxfjbx/G3l6Mf1sul+ugT4qENPykp6crMTFRX331VTDs1NfXa/369TrjjDMkScOGDVNdXZ3y8/OVl5cnSfr6669ljNGQIUPa3W9ERIQiIiLafa6nfNONMT2mlnDE+NuL8bcX428vxt9ejL99GHt7Mf6d0+Hw09jYqO3btwcfFxcXa9OmTYqLi1NqaqrOOussvfbaa8rMzFR6erpeeuklJSUl6dhjj5Uk5eTkaPTo0XriiSd07bXXyufzadasWTrxxBOVnJwcuq8MAAAAAPbQ4fCzYcMG3X333cHHzzzzjCTp1FNP1c9+9jOde+65ampq0hNPPKH6+nqNGDFCt956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\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 1)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 198,
-   "id": "f91379de",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAz8AAAKrCAYAAADf1TOiAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjYuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8o6BhiAAAACXBIWXMAAA9hAAAPYQGoP6dpAACrO0lEQVR4nOzdd3yV5f3/8fd9RvZeJMyEEYZMFVERQZxV66rWWm2xoq0/6651DxRnrdpW26+24t51oXXVgiAOBAdDVkDCTiB7nKwzrt8fMQdCAiThhDvJeT0fjzz0XPd13+eTKzmH885939dlGWOMAAAAAKCHc9hdAAAAAAAcCIQfAAAAAGGB8AMAAAAgLBB+AAAAAIQFwg8AAACAsED4AQAAABAWCD8AAAAAwgLhBwAAAEBYIPwAAAAACAuEHwDoRNOmTVNGRoY8Hs9+HefKK69UcnKyiouLQ1QZEN54bQLhifAD2GTKlCl65plnOu345eXlevDBB3X++edrxIgRcrlcsixL//vf//a4z4wZM2RZ1h6/Pvzww06rtydavHixnn/+ed14442KjY3dr2PdfPPNqq+v14wZM0JTXCs+/vhj/eEPf9Cxxx6r1NRUWZalo446aq/77O335fDDD++0WnfX2a+nJUuWaMaMGZo4caKysrIUERGhPn366LzzztO3337b6j5vv/22zj33XA0bNkzJycmKjo7WkCFDdN555+nrr79u1/OvWrVKd9xxh04//XT1798/OMY+ny8U317Y4bXZ/tfmypUr9fOf/1wZGRmKiorS0KFDdccdd6i2traj3xZgC5fdBQDhoqamRjU1NUpLS2t1+8aNGzVgwICQPd+GDRt0/fXXS5L69u2rtLQ0bd++vU37Tps2TdnZ2S3aBw8eHLL6wsEtt9yihIQE/b//9//2+1iZmZm68MIL9cQTT+j6669X//79Q1Bhc3//+981e/ZsRUVFafDgwSotLW3TfgMGDNCFF17Yor1v374hrnCnA/16uvTSS/XVV1/pkEMO0VlnnaW4uDgtWbJEr7zyil5//XW9+uqrOuuss5rtM3v2bC1evFjjx49X7969FRERoXXr1umtt97Sq6++qn/+85+6+OKL2/T8H330ke666y45nU4NGTJEUVFRqqurC9n3F254bbbvtfnVV19p6tSp8nq9Ovvss9WvXz/NnTtXd911l+bMmaM5c+YoMjKyXccEbGMAHBAvvfSSSUlJMX//+9+N3+83kydPNk8//bTZtm2bOf/88016erqprKwM2fOVlpaa//3vf6akpMQYY8y0adOMJPPxxx/vcZ877rjDSDKffPJJyOoIV2vWrDGWZZlLLrkkZMdcuHChkWRuueWWkB1zV1988YX5/vvvjc/nM/n5+UaSmThx4l73kWQmT57cKfXszYF+Pf3tb38za9eubdH+wgsvGEkmNTXV1NfXN9tWW1vb6rGWLVtmIiMjTWJiYot99mT16tVm4cKFpqamxhhjzIABA4wk4/V62/mdgNdm+/h8PjN8+HAjycyePTvY7vf7zc9+9jMjydx33337/TzAgcJlb8B+MMboscce00EHHaSoqCj16dNHl19+uSoqKpSdnd3s7Ml5552n999/X//+9791yCGHaMuWLXr55Zc1duxYZWVlafXq1YqPjw9ZbcnJyTr22GOVkpISsmOGwrx582RZlmbMmKGvv/5aJ510khITE5WcnKyf/exn2rx5syRp/fr1+sUvfqH09HRFR0frmGOO0dKlS1s9Zk1Nje677z6NHTtWsbGxiouL0xFHHKGXX365Rd+GhgY99thjOvnkkzVgwABFRkYqJSVFxx13nD744INWj9/0s/R4PPrjH/+o/v37KzIyUoMHD9YDDzwgY0yLfZ566ikZY3Tuuee2esyGhgbNnDlTgwYNUmRkpHJycnTrrbeqvr5elmVpypQpLfaZMGGCsrOzg8cOtSOOOEIHHXSQnE5nyI+9Lxs2bJBlWbrwwgu1evVqnXHGGUpJSVFsbKyOOuoo/fe//23W/0C/nq644opWz3yef/75GjJkiEpKSrR8+fJm26Kiolo91qhRozR8+HBVVFSoqKioTc8/dOhQTZgwQdHR0e0vvo14bTYfgy+//FLHHXecEhMTFR8frxNPPHGPlyv25Nfm/PnztWrVKh199NE67bTTgu0Oh0N/+tOfJEmPP/54p3zfQKewL3cB3d+VV15pJJmsrCxzxRVXmGuvvdYMGjTIHHrooSYrK8sMGDCg1f2uvvpqI8nExMSYzz///IDU2p4zPzNnzjQPPviguf/++80rr7xiioqKQlbHJ598YiSZk08+2URFRZkTTzzR/OEPfzAnnHCCkWRyc3PNqlWrTGpqqpk4caK59tprzc9+9jNjWZZJT083VVVVzY5XVlZmxo0bZySZgw8+2Fx++eXmsssuM4MGDWr1L7EFBQXG4XCYo446ykyfPt3ceOONZtq0aSYlJcVIMv/6179a1DxgwADTu3dvM3HiRJOTk2N++9vfmssuu8z07t3bSDIzZsxosc8hhxxinE6nqa6ubrEtEAiY008/3UgygwYNMtdee625/PLLTVZWljnttNP2+hfb888/30gyy5cvb8eot197/ro8ZswYM2vWLHPPPfeYxx57zHz55Zcdfr6jjz7aJCUlmUmTJgV/NlFRUcbhcJhXXnml1X3teD3tasSIEUaSWbJkSZv6r1mzxkRHR5u0tDTj9/s79JydceaH1+bOMTjppJNMRESEOfnkk81NN91kzjnnHON0Ok1UVJT59NNPWx2/nvravOWWW4wkc++997a6PTc310gy69ata/exATtwzw/QQV988YX+9re/adCgQVq0aFHwDMs999yjY445RgUFBS3uOVi0aJFuvPFGlZWVadCgQRo4cKDOPPNMTZs2TTfeeGOzszTtvXl2ypQprZ4t6Ijbbrut2ePIyEj98Y9/1F133SXLskLyHO+//75eeOEFnX/++cG26dOn66mnntKRRx6pP/zhD7rllluC22bOnKnbb79ds2bN0lVXXRVsv/rqq/Xdd9/pgQceCN7jJEl1dXU644wzdO+99+rss8/W2LFjJTWeEdu4cWOLa94rKio0ceJEXX/99Tr//PNb/IV927ZtGjNmjD7++OPgtjvuuEO5ubl65JFHdPPNN8vtdkuSPB6PlixZouHDh7d6M/XLL7+s2bNn6/DDD9cnn3wSPENw5513avz48Xsdt/Hjx+vFF1/Up59+qpEjRwbb582bp3nz5u11392F6gbtpUuXavr06c3axowZo+eff16jRo1q17E+/fRTXXfddXrwwQeDbZdffrmOOOIIXXrppfrJT36ihIQESV3j9bRw4UKtXLlSffr0afbz2NX//vc/ffbZZ2poaFB+fr7effddSdKTTz4ph6PrXYARzq/NJh9++KEeffRRXX755cG22bNn64wzztBFF12kNWvWtPjZ9dTX5po1ayRJubm5rW4fMmSI8vLylJeXp0GDBu1fwcCBYHf6Arqriy++2EgyTz31VIttTX893PXMT9M9Co899pjx+XzN7lH45S9/2eIeBUnt+rrjjjv2Wm9bzvy8+eab5qmnnjLr1683tbW1ZuPGjeZf//qX6dWrl5FkbrrppnaP0+6axuaoo45qsW3+/PlGksnOzjY+n6/Ztg0bNhhJ5sILLwy2FRcXG6fTaQ499NBWn2vJkiVGkvnjH//YptoeeughI8nMnz+/WXvTX9lbu+fj17/+dYu/9q5Zs8ZIMscff3yrz3PccccZSWbu3Lkttj399NN7PfPzyiuvGEnmhhtuaNbedNauPV9709a/Ll977bXm888/N0VFRaaqqsosXrzYnH322UaSSUtLM1u2bNnr/rs/X2JiYqv36jT9/j7zzDPGGPtfT8YYU1JSYoYMGWIkmddee22P/W644YZmx87MzDQffvhhm8ZlTzrzzE84vzabxmDw4MGtnpWbPHmykWTmzZvXYltPfW0ef/zxe/2345e//KWRZF566aU2HQ+wG2d+gA5qmt528uTJLbYdddRRLa7NPv3003X88ce3mJ0qKytLL774ojZu3NjsHgVjw/XTZ555ZrPH/fv318UXX6yDDz5Yhx9+uP785z/r2muv3eMMW+1x6KGHtmjr3bu3JGns2LEtxq9Pnz6SpC1btgTbFi9eLL/fH7xGf3der1dS4zTBu1qxYoUefPBBffrppyooKGgxa9bWrVtbHCsxMbHVez769esnSSorKwu2lZSUSGr8S3Zrvv32Wzkcjlanqt3X2Yamsxm7rykyY8aMTp1qd08eeuihZo8PPfRQ/fvf/9bZZ5+tN954Q3/+85/1yCOPtPl4Bx98cKv36kyZMkXPPvusvvvuO02bNs3215PH49Hpp5+utWvX6vrrr9c555yzx77333+/7r//fnk8HuXl5enPf/6zfvKTn2jmzJnNzqB0FeH82mwyadKkVs/KTZkyRfPnz9d3333X4r2/p782gZ6C8AN0UEVFhSSpV69eLba5XK4WH8piYmIUExOzx+OFclreUDv44IN12GGH6fPPP9eXX36pn/70p/t9zMTExBZtLpdrn9uaPjRJOz/ILF68WIsXL97jc1VXVwf/f+HChZo6dap8Pp+OPfZYnXbaaUpISJDD4dCSJUs0e/Zs1dfXtzhGUlJSq8duqsvv9wfbmi692dNUxBUVFUpJSQleirOrzMzMPX4fkoJranTmje+hcOmll+qNN97Qp59+2q79Wns9STvHpel1Z+fryePx6JRTTtFnn32ma6+9Vg888ECb9ouNjdW4ceP04osvqrS0VLfddptOOOGEfV7qeKCF82uzSVt/D3fVU1+bTT/z1r7nXdv39HMAuhrCD9BBTf8gbN++XQMHDmy2zefzqbi4eK9rKezrGnA77/lpTXp6uiTt92roodT0M7jmmmv08MMPt2mfu+++W7W1tfrkk09ajNd9992n2bNn73ddGRkZknZ+ANxdYmKiSktL5fV6WwSgwsLCvR676ZhNz9HEzvsKWtPR35c9rUXVNC6tffiWDtzrqaqqSqeccooWLFig66+/vs3BZ3cnnXSSPvzwQ82fP7/LhZ9Q6K6vzSYd+T3sqa/NoUOHSpLy8vJa3b527VpJe74nCOhqCD9ABx188MH69ttvNX/+/Bbh57PPPmv218aOuPPOO9u9T2eFH6/XG7zMb/fv1U6HHXaYHA6HFixY0OZ91q1bp5SUlFbHav78+SGpKysrS+np6cEbhXd38MEHB2+CP+aYY5pt29eHpNWrV0tS8CbxXfdr7+9MZ37AWrhwoaT2/758++23qqqqanHpW9O4jBs3rkP1hOL1VFFRoZNOOkkLFy7ULbfcorvvvrtDtUg7L99qOjvR03TX12aTzz77TIFAoMWlb3v7Peypr82pU6fqnnvu0Ycffqibbrqp2bb169crLy9PAwYM6FL/NgB70/WmmQG6iaZVs++5555mq23X1dW1+AeiI4wx7fra338sq6qqWv1A0NDQoKuvvlqbNm3SsGHDWtwPMGPGjD1e19/ZMjIydP755+vrr7/WzJkzWw2cP/zwg/Lz84OPs7OzVVpaqmXLljXrN2vWLH300UchqcuyLB199NEqLi7WunXrWmz/zW9+I6lxlfldL78pLS3d5wfqhQsXyul06uijj27WPmPGjHb/zuyvZcuWNbvUadf2pntZLrjgghbbLcva46yBFRUVuuuuu5q1ff3113rxxReVmJjY4r60ttrf11NZWZmOO+44LVy4UHfeeec+f0719fV7XPtm8eLFevzxx+V0OnXSSSc127Zp0yatXr1aNTU1Hfo+d8Vrs6V9vTabrF27Vv/4xz+atc2ePVvz58/X4MGDNWnSpBb7dPfXZk1NjVavXq1NmzY1a588ebKGDx+uTz/9VO+8806wPRAI6IYbbpDUeCldqGYCBTpbz/yTE3AATJw4UVdccYUeffRRjRw5Umeffbbcbrdmz56t5ORkZWVl2V2irrvuuuDNt5999pkk6cEHH9QLL7wgSTrjjDN0xhlnSGq8ZGP48OE69NBDNXz4cGVlZamoqEiffPKJ8vPzlZaWppdffrnFX0IDgYAk+/6C/dhjj2nt2rW6/fbb9fzzz+uoo45Sr169tG3bNq1atUqLFy/Wyy+/rJycHEmN0+9+9NFHOuqoo/Tzn/9ciYmJ+vrrr/XZZ5/p7LPP1uuvvx6Sun72s5/pjTfe0EcffdTiZuzzzjtPr776qt555x2NHDlSp59+urxer15//XWNHz9eP/zwQ6vHrKio0KJFi3Tsscfu8fKv/fHZZ5/pySeflLTzXoy1a9cGg74kPfPMM8H/f/jhh/Xuu+9q0qRJ6tevnyIjI7V69Wp9+OGH8vv9uuSSS3Teeec1e46m35c9LdZ49NFH68knn9RXX32liRMnqqCgQK+++qoCgYCeeOKJ4DTXB9pZZ52lr7/+WoMGDVIgEGg1UJxxxhnBv/rX1tZq7NixGj16tEaOHKm+ffuqpqZGq1at0ty5cyU1vhaHDRvW7Bi//vWvNX/+/BaXfhUXF+u6665r9lhqnIK66UPnjTfe2Ox4vDZbt7fXZpOTTjpJf/jDH/TBBx9ozJgxWrdund58801FRUXpqaeeavE+2BNem4sWLdIxxxyjyZMnNzsD7XQ69fTTT2vq1Kk6++yzdfbZZ6t///6aM2eOvv76a02cOFHXXHNNyL9noNOEevo4IJwEAgHz6KOPmmHDhpmIiAiTlZVlLrvsMlNeXm4GDBiwx0VOD5SmaWD39LXrdL4VFRXmiiuuMBMmTDC9evUybrfbxMbGmtGjR5sbbrjBbN++vdXnOOOMM4zD4TBr1qxpU01NU8m2NpVw0xSu06ZNa3Vf7WEK6Pr6evPoo4+aI444wiQkJJiIiAjTr18/M3XqVPPII4+Y4uLiZv3fffddM2HCBBMXF2cSExPN8ccfb+bPnx+cZvrpp59u1n9vP8umaWw/+eSTFjVlZGSYww47rNX96uvrzZ133mlycnJMRESEGTBggLn55ptNXV3dHr/PJ554wkgyb731VqvH3F9N3//evnb11ltvmTPPPNMMGjTIxMfHG7fbbTIzM82pp55qZs+e3epzNE1xfP755zdr3/Vnv3LlSnPaaaeZpKQkEx0dbY488sj9nhp6f+3rtbT7701DQ4OZOXOmOe6440yfPn1MZGSkiYqKMoMGDTK/+tWvzMKFC1t9nqaplHf/fWoan7197b4Pr832vzZ3HYMvvvjCHHvssSY+Pt7ExcWZ448/3ixatKjV5+oJr82m731P0+yvWLHCnH322SY1NdVERESYIUOGmNtvv93U1NSE+tsFOpVljA3z6QJhIDs7W5K0YcMGW+voTMYYpaena+rUqXrttdfsLqfLue+++3TzzTfr22+/bde9KpZltfjrq9Q4VW11dbVWrFixxzMnXd3f/vY3XX311Vq+fLkOOuigYPuGDRuUk5OjadOmNfsLNjqG1+be7em1OW/ePB1zzDG644472nW5YE94bQLhgnt+AHTY999/r5KSkpDc49QTXXPNNerfv79uv/32/T7W22+/rW+++UZ//vOfu/WHq/nz5+u0005rFnwQerw2947XJhC+uOcHQIeNGjXKlsVYu4uoqCg9//zz+uSTT+TxeBQbG9vhY9XW1uqRRx7RqaeeGsIKD7w33njD7hLCAq/NveO1CYQvwg8AdKKjjz66xexPHbH7zckA9g+vTSA8cc8PAAAAgLDAPT8AAAAAwgLhBwAAAEBYIPwAAAAACAuEHwAAAABhoVvP9lZWViafz2d3GUpPT1dRUZHdZYQtxt9ejL+9GH97Mf72Yvztw9jbi/FvzuVyKTk5uW19O7mWTuXz+eT1em2twbKsYC1MnHfgMf72Yvztxfjbi/G3F+NvH8beXoz//uGyNwAAAABhgfADAAAAICwQfgAAAACEBcIPAAAAgLBA+AEAAAAQFgg/AAAAAMIC4QcAAABAWCD8AAAAAAgLhB8AAAAAYYHwAwAAACAsEH4AAAAAhAXCDwAAAICw4GrvDitXrtQ777yj/Px8lZWV6brrrtNhhx0W3G6M0WuvvaY5c+bI4/Fo2LBhuvjii5WVlRXsU11draeeekrffPONLMvShAkT9Jvf/EZRUVGh+a4AAAAAYDftPvNTX1+v7OxsTZ8+vdXts2fP1gcffKBLLrlE9957ryIjI3XPPfeooaEh2Odvf/ubNm/erFtvvVU33nijVq1apSeeeKLj3wUAAAAA7EO7w8+4ceP0i1/8otnZnibGGL3//vs666yzNH78eA0YMECXX365ysrKtHjxYknSli1btGTJEl166aUaMmSIhg0bposuukhffPGFSktL9/87AgAAAIBWtPuyt73ZsWOHysvL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7tJWJSnQol99vVRQ4JIU+2PtRsbUS2pMKFlZjcdq7NOoT5/G+2saZ3Grk+RXVpZPXq9UXLyzX1qaT1KMioubztTUS/L++D3v2kf659CLtX14pmb1OUuKNQr4GjQoya3zx6TpoIzYFmMcFRUlx4/XzDU0NMjXtJBQK6KiouR0OpWVlaWNGzfK6/XusW9kZKScTmebjrtrX6/Xu9fjRkREyPXjKb729PX5fGpoaNhjX7fbLbfb3e6+fr+/1ddEE5fLpYiIiHb3DQQCqqura9HHsixlZmaquLg4WMOe+jZxOp2KjGz8XTPGBF9H+9u3Pa/7A/kesae32FD0bRr/pvefJjExMW067u596+rqFGjtryEd6BsdHR2cjbG+vl7+3Wd16WDf9r5HtLVvR94jLMtSWlqaNm3atMcxDvf3iI70bevr3rIs9e3bV6WlpTLG8B7Rxr7S/r9HtOW9h/eIzvscYVmW0tPTtXHjxj3+7MLtPSIyMlL9+vXb4z7NmG5s3LhxRo2JotnX1KlTzdatW4Nf0dHRrfaTZI444ohmfVNSUvbYd8yYMc369u3bd499pRFGMiYjw2d69fL9+HhPfQcYhyNgGs/dGCMduse+lpW2Sz9j3O6j93LcmF36Box08l76yjgcAeN0NtVx9j76Vu1y7Gl77Tvm9jfMoX+aY0Ze/4U54czz9tp34cKFwfG99NJL99p37ty5Ztu2bcYYY6699tq99n3vvfeCx7311lv32vff//53sO8999yz177PPvtssO/DDz+8176PP/54sO/jjz++174PP/xwsO+zzz6717733HNPsO+///3vvfa99dZbg33fe++9vfa99tprg33nzp27176XXnppsO/ChQv32nfatGnBvsuWLdtr33POOSfYd+3atXvte8oppzR7fe6tb1d4j8jNzW3WNzc3d499+/bt26zvmDFj9tg3JSWlWd8jjjhij32jo6Ob9Z06depex23Xvqeccspe+65duzbY95xzztlr32XLlgX7Tpu29/eT9r5HNPXtjPeIbdu2mccee2yvfXmPaPzqrPeIadOmmW3btvEewXtE8KsrvUd01ueIbdu2mddee22vfcPtPWLcuHFtzg9tuHUd+yMuzrS4BKw1zj3fPtPM7vfRtHU/O8X4auX8KFKrHjlMveIi7C4HAAAAYYrL3kJ82dvatU5ddlmKamociouLDt6n85vfRKmmpvH+mX/8o7GtsZ+lmBjpjju8wXt+oqNr9I9/FO/WZ+d+l1/eL3gf0D/+sVWBQKBFv4svTtG2bTsve3M6jfz+nZe99e7deLq2sU+jvn0bTyE2zvbWeNlba/169/bJsmK0devOy94cDq8CkSXSqBelxZdp+LTVihpcogifTzNXPaMZ/7tZm6LH6dNPN4f0dDWXvXHZW5NwvKSFy9647K29fbvrJS2t4bK3jvWVuOytI3270ucILnvbv8veunX4KSoq2usvyYFgWZaysrJUUFDQ7BewtcU829LW0f12b9t94oWOzvbW/gkbpPSf5ClqRKGclqXpi97VSZ5Pdc2mx3T5owOVm7vnN4uO2NP448Bg/O3F+NuL8bcX428fxt5ejH9Lbrdb6enpberLbG+dZPdg0ta2ju63e1vT9Nq7BqITTtjRIjTt3qcjbV7VKtoVrRNO2KFnvy3Sm6tKZEn6w8QsHZ63UfJIf/1LmawQBx8AAACgPQg/PVxnhatd237z4W9V3VCtM7Jv0JurkiRJl03I1MQBCdrziWkAAADgwCL8YL+sLVuruZvnypKlsQmN17f+ZEiSThicZG9hAAAAwG6Y7Q375cnvn5QknTDgBCVH9pUkpce697YLAAAAYAvCDzqstK5Ur699XZL021G/tbkaAAAAYO8IP+iwF1a9oDp/nUaljdKEzAl2lwMAAADsFeEHHbJidUB//vQ5SVLhW3/Qxx9H6f0PGudcf/zxOOXlcTsZAAAAuhbCDzpk2m2r5I8pkKqyVDTvPF1zryX3wMaFWQs3RGn69BSbKwQAAACa48/zaDefTwr8MFV6/2+SL1oxmfXK+dVyOdwBla1IU+mSXnKnG/l8kmV3sQAAAMCPCD9oF2OMXC5LsbFGWnSFItNqNOSyb+SM8qvqhyStf/EgKeBQbKxPLpdY5wcAAABdRsjDz1tvvaVFixZp69atioiIUG5uri644AL17t072KehoUHPPfecvvjiC3m9Xo0ZM0YXX3yxkpKSQl2ObXy+louCtqWto/sdiON/uP6/+ueKx/XUCU9p1iyXLrkyRnGnL5Urzqt0V7RK541QRqoUG+vTrFmlAgAAALqSkIeflStX6sQTT9SgQYPk9/v18ssv6+6779bDDz+sqKgoSdKzzz6rb7/9Vtdee61iYmI0a9YsPfTQQ5o5c2aoyzng8vJcmj49RR5P49mRphCwr7bbbqvQzJmJ7d7vQB3/lzcvV8Gxl0quet0/b5bO7fsHxZ+6XM6EevnLo3XZlAE6eG5pq6EJAAAA6AosY4zpzCeorKzUxRdfrBkzZmjEiBGqqanR9OnTddVVV+nwww+XJG3dulXXXHON7r77buXm5rb52EVFRfJ6vZ1VeptYlqWsrCwVFBTIGKNJkzK0fv3OT/8DB/okaZ9tbreR12u1e78DcXxfzGZt+ukYKbJKWn26cpa8oMRTV8qVUa2G8kit/sch6pvi0oIFO1qMj3/GFdLWjXJcO1PW8DEttu+v3ccfBxbjby/G316Mv70Yf/sw9vZi/Ftyu91KT09vU99O/xt9TU2NJCkuLk6StH79evn9fo0aNSrYp0+fPkpLS1NeXl67wk9X4/NJHk/zW/yrqy1Zu93131qb37/vPvvTtj/Hrx77l8bgs+Uw6a0XFXvxGrkyquWtdivvX2PVUB4lT6Sfsz4AAADo0jr1o2ogENAzzzyjoUOHqn///pKk8vJyuVwuxcbGNuubmJio8vLyVo/j9XqbneGxLEvR0dHB/7dT0/NbliW3W40TAewiLq5lIm+tzemUAoH279fZx49OLVbR8CcbH8y7U4N+vl5RA8plGpxa+9QY1RU1/hxjY43c7r38LCyrU35Wu44/DjzG316Mv70Yf3sx/vZh7O3F+O+fTg0/s2bN0ubNm3XXXXft13Heeustvf7668HHOTk5euCBB9p8eutAyMzMlCS9+6505plSdbUUFye99VbjEO+r7cEHLf3xj+3fr7OPf/xdT+jvK2oUWTpOOUf2V9zIQrkdDv1h0mjd/FyCqnvv3DcrK6vFuBS6XPJKSk1NVVQr20OlafxhD8bfXoy/vRh/ezH+9mHs7cX4d0ynhZ9Zs2bp22+/1Z133qnU1NRge1JSknw+nzweT7OzPxUVFXuc7e3MM8/UqaeeGnzclHSLiork8/k65xtoI8uylJmZqcLCQhljlJwszZvXcra0trR1dL/OOr7TaXTK229Jks449Fz9UFgohyX9cVJvHd6vTvPmFTTbt6Cg5fg0/XxKSkrkaK3Dftp9/HFgMf72Yvztxfjbi/G3D2NvL8a/JZfLZd89P8YYPfXUU1q0aJFmzJihjIyMZtsHDhwop9Op5cuXByc82LZtm4qLi/d4v4/b7Zbb7d7j83UFxphmtTid0u6ltaWto/t1xvElafZps/XK6v/otW+HyLKkyydkakLfuOD32tq+rdptfEJt9/HHgcX424vxtxfjby/G3z6Mvb0Y/44JefiZNWuWPvvsM11//fWKjo4O3scTExOjiIgIxcTEaOrUqXruuecUFxenmJgYPfXUU8rNze3Wkx30VC6HSxN6nah/WxuVFuPSsYOS7C4JAAAA6JCQh5///ve/kqQZM2Y0a7/ssss0ZcoUSdK0adNkWZYeeugh+Xy+4CKn6Do2Vm5UVmyWIpwRwTZuqwMAAEB3FvLw89prr+2zT0REhC6++GICTxdljNFvPrpIld4K/eu4fynOOayx3ea6AAAAgP3hsLsAdC15eS4det43WlO+WoVl1TLFudq0qTEjFxY6NWlShvLyWMwHAAAA3Q/hB81Mn56iwsF/liSZxb/TVb/L0b1/b5z9wO+ztH69S9Onp9hZIgAAANAhhB8E+XxShWudNGCBFHBKC6+WN6VcsZPWSpLKljXO3OfxWLJ5hnEAAACg3Qg/CHK5pMCwHxeTXX+sYpPilXHm97JcRqXL0rXlg0GSpNhY02xdIAAAAKA7IPygmZRJr0iSkkp/qqGXLJHlDmhIQqy0cKh6ZQQ0cKBPs2aV2lwlAAAA0H78/R5B6yvW6wfPCrksl8aeOEDV9T4NSY3SzGP7KPqnxfL5xBkfAAAAdFuc+UFQTkKOPjjjA41Luk7V9bHqlxih24/pp2h3468JwQcAAADdGR9nEWRZlkanj5apb1zY9MZJfZQQ6bS5KgAAACA0OPODPYoj+AAAAKAH4cwPJEn/XP5PrSxZqWkjpkmKtrscAAAAIOQIP5AkvbLmFa0pW6OJvSdKGmV3OQAAAEDIcdkbtKZ0jdaUrVGEI0LH9D3O7nIAAACATkH4gf6T/x9J0tF9J+ufiz2SpIRIp2Ld3PMDAACAnoPwE+aMMXp3/buSpMjAJH21pVpuh6UbJvWR22nZXB0AAAAQOoSfMOPzNX+8pmyN1pavlcuK0LaSsXJY0h8n9daw1Bh7CgQAAAA6CRMe9CA+X8uFSJva8vJcmj49RdXVluLijGbNKpUknfPIQulgKc5xqJxWrM7J7qPrzhskj8dSbGxjv9xcXyvPBgAAAHQvhJ8eoCnY7BpYJDVrq66WduxwSZZfO+oKdcEFmXIm1Shq8ElyaKaSnceo8tOB+r/H+2r9+p2/FtOnp2jBgh12fWsAAABAyBB+eoDp01NaBBZJzdqkgDTmWem4W+RUvBIanlNsvypJUoz/dnnmnaONHw9Qenqg2bE9HqvVM0oAAABAd8NH2m7O52sMKLuqrrZk7dJkxRfLfe50NfR958eWOLmjN8j401SRl6LixdNV/n26nE4pJsY0O1ZsrCH4AAAAoEfgY20n2dv9N3tra61PXZ0UFdV6m8vVGFB2FRdnJMsoIaFCMRP/o5LsP6pBO2TJqd7uaYotmK669X1UvjZdm9bunNggK8unp54qbfUSOgAAAKC7I/yEWFvuv2mt7bbbKjRzZmKzPhs2OPXb36bI75ecTumf/2zcb/e2iy6q1q23Jkoyis6q1mGXbNIWR5nqfc9pq3eWJKMo9VXC8kdVuuB47SiL0T//Wars7GpNnx7RYnKDBQt2cKkbAAAAehw+3oZYW+6/aa3tt79NkddrNeuzebMz2BYINPaR1KLNuGoU8f9OUiD9O42IfVHrrMbFST0N+ZJl5Mo7X3Wv/0N1DQnB48+cmagFC3bsMegQfAAAANDT8BE3hNpy/82e2vz+5o+rqqwWbV6v5HC0bHNNfVANvf4rSar3lqlm1XCVLclUecQFUt3/k2/VzyQ1vzRu14kMCDoAAAAIB3zsDaE93n+zm9banM7GMzlN4uONysubt7ndjf/dtc2VVCjfoX+WJPXR1Vp57ylyen+8j8d74R5rZSIDAAAAhBvHvrugPWbNKtXAgT716uXXwIE+zZpV2qa2f/6zZZ9//rNUbreRw2Hkdhv9858t2ybeeoPk9ijWMUypgTPk9Ma02u/uuytaHB8AAAAIJ/ztP8T2NGFAW9pOOKH549xcnzZsKGgx21tTW37NKp3w5ouSpL7u/6e0xMZtu/dr2vc3v6lhIgMAAACELc78dJLWAkZb2lrrs/s0101tMxfOVMAEdEzfnyjeOVJWy24t9iX4AAAAIFwRfrqpqoYqVTZUyu1w67jeV0iSnI7W4g8AAAAAicveupy2Lo4a7YjXO6e/o5dXLNbryyIlSccPTDowRQIAAADdEOGni+jI4qiJuaVKPi1JAWNUtypTf34oV/8Xq+BipQAAAAB2Ivx0EW1dHNUXvVWbhl6rmNU3qfcJefIbo4Yf0vT9M8MlYwX7LViw48B+AwAAAEAXR/jpAtq6OGpVjU/lx/9SyvpCkYetkjPyJtVtTFLRuzuDj9R8AVMAAAAAjfh43AW0dXHUhsk3yZv1hRyKVZ/oafJsilf9/0YoNqp5SmIBUwAAAKAlPiJ3EbNmle75/p4ayXXs09o65C+SpJyI62VtH6qGOSM16/HKnf122xcAAADAToSfTtLWWdua2poWR911UVJjjP700g/6v0VLNK/0GklSTvS5umviOTosM0Ex15UFj9PaIqoAAAAAduKjcoh1ZNa22Fij226r0MyZicHHt/xls97bXKgN1RVaXXer/PKof/Q4/ePgB/X7X2c1O1bTzG4EHwAAAGDP+LgcYr/6VYq2bHE1eyxpn20XX5wiv9Mj18SnVD/2G/191XlyWBGqaShQXUOp1JAu70tv6fdPZLWYAY6Z3QAAAIB9I/yEkM8nFRQ4m7Vt2+ZsMWtba21+h0euy6bIl/SNyiXV+4+X55tDtfXjiQqYE6TETdq+rb/S0wPN9mNmNwAAAKBt+MjcFTjr5b7kFHmTvpFTcYorP0Pr3jlUvo1D5fdbkvpIVX1kOY1iYprPAsfMbgAAAEDb8LE5hFwuKTPTr61bdw5rVpZfkvbc5vDJdeHZ8mZ8KoeilLp6lna8co769PFLux0rM9Ovp55qfVY4AACAffF4PPL5fLJ2vwSlnWpra9XQ0BCiqtBe4Tj+MTExcoXgL/6EnxB74YXGcFJdbSkurvnkBru3XTQ9WTsm/0aefv+RJbcG7PibPHPP0sCB/j3u1zQrHJe6AQCA9qivr5dlWUpMTNzvY7ndbnm93hBUhY4It/EPBAKqqqpSbGzsfgcgPj6HWGtTVktq0ZaX51JgwLeqHfCGJIcOj7lb2/87TZIlyTQ7VmtBh+ADAADao76+XvHx8XaXAbSbw+FQfHy8qqurlZCQsF/H4iN0iO1tqutqj+Tu/7UeuztBV13bV8k/a1B05J9Uvr1ci++7Vr76xh/Hjh3NZ3Ej6AAAgFDY38vdALs4HI6QHIeP1SE2fXpKi6mojYzy0x6XTn5USsvTxU/crT6nTZE7zquGLYdrxxPjFKhvPkscs7gBAAAAocVH6xDy+RpDy66qqy3VDXlVOv6KxgZvtJzD1yki8QjVFcVo7awxCtS71HSpWxNmcQMAAABCi4/XIeRyNYaWXUWnFql40tWNDxZdqdxBZyqhX0D+qgjl/WusfJ4ISVJGhl9xcWIWNwAAgDBw9dVXq7KyUk899ZTdpYQVwk+IzZrVfCrqgVdcro07ihVRNlKDc36pmH4exbicuuyI/rr5RZc8kf5g2MnN9XGpGwAAwI+uvvpq/fvf/5YkuVwuJSUlafjw4TrjjDP085//PGT3gXRVxhi9+OKLeuWVV7RmzRq5XC5lZ2frnHPO0Xnnnafo6Gi7S+x2+JgdYrvO0DZv2/807aM35LAcOn3MH5Rf7FGUy6G7juurIamuVmdyI/gAAADsdMwxx+jhhx+W3+9XcXGxPvnkE91+++1677339PTTT4dk7Zeu6sorr9T777+vq666SnfffbdSU1O1cuVKzZo1S71799ZJJ53UoeM2NDQoIiIixNV2Dz07LtvI5ZLSotM0NHmoDkk5T/nF/eVyWLp5ch8NSY1u1g8AAACti4iIUEZGhrKysjRq1ChdeeWVeuqppzR37ly99tprwX4VFRW67rrrNGrUKA0dOlTnnHOOVqxYEdz+0EMP6fjjj9crr7yi8ePHa8iQIbrpppvk9/v1j3/8Q2PHjtXo0aP117/+tdnzP/HEEzr22GM1ePBgHXroobrpppvk8XiC21999VUNHz5c8+bN0+TJkzVkyBCdf/752r59e7CP3+/XjBkzNHz4cB100EG6++67ZUzzWyV298477+jNN9/UP/7xD1155ZUaO3as+vXrpxNPPFFvvvmmjjzySEnS2Wefrdtvv73ZvhdddJGuvvrq4OMJEybokUce0ZVXXqmhQ4fq+uuv12mnnaZ77rmn2X4lJSUaMGCAFi5cKKlxevS77rpLhxxyiAYPHqxTTz1VX3zxxV7r7uoIP53E55PGpI3RednPy19zvhyWdO0RvTUmM9bu0gAAQJgzxsjU19nztY8P/W1x1FFHacSIEfrggw+Cbb/73e9UXFysF154QR988IFGjRqlc889V2VlZcE+Gzdu1Ny5c/Xiiy/q73//u1555RX9+te/VkFBgV5//XXdcsst+tOf/qRvv/02uI/D4dBdd92lTz75RH/5y1/0+eef6+67725WT21trR5//HH97W9/05tvvqmtW7dq5syZwe1PPPGE/v3vf+uhhx7S22+/rfLycn344Yd7/R7feustDRo0SCeeeGKLbZZltXu9myeeeEIjRozQRx99pKuvvlpnnXWWZs+e3ezn8c4776hXr16aMGGCJOnWW2/VN998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9747crkcvr6+KCoqgre3d7nvqVevXti3bx+USiUCAwPRuXNnBAQEICsrS4zbysoKUVFROHbsGLp3747Y2NgKHUbwt7/9DZaWlrh+/XqJY7e7dOmCLVu24IcffsAHH3yA/v374+uvv4aDg4PW47/pZEJ1776qRWlpaaWugaxNMpkM9vb2uHfvXrVvZKPyMf/SYv6lxfxLi/mXFvNfcVlZWTA3N6+WsZRKpeTfwbQVHx8PHx8fXLp0qczjpGNiYrBgwQJcvny5wuPPnDkTjx49wubNm6sYqfbepPxXp7J+h5VKJerUqaPVGFz2RkRERERUQVlZWfjtt98QGxuLb775RupwSEssfoiIiIiIKqh4P87IkSPF+wfR64/FDxERERG9td5//32kpqa+8ho/Pz/4+flVaNxXHWtNry8eeEBERERERDqBxQ8REREREekEFj9ERERERKQTWPwQEREREZFOYPFDREREREQ6gcUPERERERHpBBY/RERERERvgJiYGDRp0qTax42Pj4dKpUJmZma1j/26YfFDRERERK+ladOmQaVSYfbs2SX6goODoVKpMG3atNoP7CUxMTFQqVRQqVRwcHCAh4cH/u///q/c+wvVhOI4VCoVGjdujIEDB+LEiROvfE6bNm2QmJgIc3PzWopSOix+aoE8PR3yP3/55ampkKenSxwRERER0Zuhbt262L9/P3Jzc8W2vLw8xMbGQqVSSRiZJjMzMyQmJuLcuXP45z//ievXr2PixImSxBIREYHExETExsbC2toao0ePxs2bN0u9tqCgAPr6+rCzs4NMJqvlSGsfi58aJk9Ph42vL2x9fKBMSICtjw9sfH1ZABERERFpwd3dHXXr1sXhw4fFtsOHD6Nu3bpo3ry5xrVqtRpRUVHw9PSEi4sLevTogYMHD4r9RUVFmDlzptjfsWNHbNiwQWOMadOmYcyYMVi3bh08PDzQrFkzBAcHo6Cg4JVxymQy2NnZ4Z133kHbtm0xfPhwJCYm4smTJ+I1//nPf9CrVy84OzujQ4cOiIiIQGFhodi/fv16dO/eHa6urmjTpg3mzJmD7OzsCufMwsICdnZ2aNy4McLCwpCXl4cff/wRwPOZoS1btsDf3x+urq6IjIwsddlbQkICvL294eLigqZNm2LEiBHIyMjQKs8ZGRkIDAyEu7s7XFxc4OXlhZiYmAq/j5qg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\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 389)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "d095bda0",
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3 (ipykernel)",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.10.13"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 5
-}
diff --git a/code/3_deep_reinforcement_learning/7_PPO_A2C.ipynb b/code/3_deep_reinforcement_learning/7_PPO_A2C.ipynb
deleted file mode 100644
index 7115d35..0000000
--- a/code/3_deep_reinforcement_learning/7_PPO_A2C.ipynb
+++ /dev/null
@@ -1,1210 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "code",
-   "execution_count": 5,
-   "id": "6ce0ea75",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "from gymnasium import spaces\n",
-    "import numpy as np\n",
-    "from functions import *\n",
-    "from itertools import count\n",
-    "buyer_strategies = ['Honest', 'Random']\n",
-    "seller_strategies = ['Random', 'Random', 'Random', 'Random', 'Random', 'Random']\n",
-    "nbuyers, nsellers = len(buyer_strategies), len(seller_strategies)\n",
-    "nrounds, nperiods, ntokens, nsteps, gametype, nbuyers, nsellers = 1, 100, 4, 6, '1234', len(buyer_strategies), len(seller_strategies)\n",
-    "R1, R2, R3, R4 = gametype_to_ran(gametype)\n",
-    "game_metadata = [nrounds, nperiods, ntokens, nbuyers, nsellers, nsteps, R1, R2, R3, R4]\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "rnd = 0\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "period = 0\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.01\n",
-    "max_frac = 1.0"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 9,
-   "id": "87aeeb4c",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "class TradingEnv(gym.Env):\n",
-    "    def __init__(self, db, nsteps, render_mode = None):\n",
-    "        self.rnd = 0\n",
-    "        self.period = -1\n",
-    "        self.db = db\n",
-    "        self.action_space = spaces.Box(0,1,(1,),dtype=np.float)\n",
-    "        self.observation_space = spaces.Box(0,nsteps,(1,),dtype=np.float)\n",
-    "\n",
-    "    def reset(self,seed=None):\n",
-    "        self.db.reset_period(self.rnd)\n",
-    "        self.timestep = 0\n",
-    "        self.period += 1\n",
-    "        observation = np.array([0])\n",
-    "        return observation, None\n",
-    "\n",
-    "    def step(self, action, seed=None, options=None):\n",
-    "        [buyer.next_token() for buyer in self.db.buyers]\n",
-    "        [seller.next_token() for seller in self.db.sellers]\n",
-    "        bid_frac = action.item()\n",
-    "        # convert action to bid\n",
-    "        self.db.buyers[0].next_token()\n",
-    "        min_bid = self.db.buyers[0].value * min_frac\n",
-    "        max_bid = self.db.buyers[0].value * max_frac\n",
-    "        bid = np.round(max_bid * bid_frac + (1 - bid_frac) * min_bid, 2)\n",
-    "\n",
-    "        # simulate market\n",
-    "        bids = [buyer.ask(self.db) for buyer in self.db.buyers]\n",
-    "        bids[0] = bid\n",
-    "        asks = [seller.ask(self.db) for seller in self.db.sellers]\n",
-    "        current_ask, current_ask_idx, current_bid, current_bid_idx = current_bid_ask(bids, asks)\n",
-    "        sale, price, bprofit, sprofit, buy, sell = buy_sell(self.db, current_bid, current_bid_idx, current_ask, current_ask_idx)\n",
-    "        step_data = [self.rnd, self.period, self.timestep, bids, asks, current_bid, current_bid_idx, current_ask, current_ask_idx, buy, sell, price, sale, bprofit, sprofit]\n",
-    "        self.db.add_step(step_data)\n",
-    "\n",
-    "        # compute reward, new state\n",
-    "        reward = np.array([0])\n",
-    "        if sale == 1 and current_bid_idx == 0:\n",
-    "            reward = np.array([bprofit])\n",
-    "        observation = np.array([self.timestep + 1])\n",
-    "\n",
-    "        # check termination\n",
-    "        self.timestep += 1\n",
-    "        if self.timestep == nsteps - 1:\n",
-    "            terminated = True\n",
-    "            self.timestep = 0\n",
-    "        else:\n",
-    "            terminated = False\n",
-    "        return observation, reward, terminated, {}, {}"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 10,
-   "id": "56d7618c",
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 0, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 0, New State: [5], Action:[0.8], Reward: [41.7], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 1, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [2], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [4], Action:[0.8], Reward: [39.1], Period End: False\n",
-      "Rnd: 0, Period: 1, New State: [5], Action:[0.4], Reward: [53.9], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 2, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 2, New State: [5], Action:[0.], Reward: [56.2], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 3, New State: [1], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 3, New State: [5], Action:[0.4], Reward: [62.2], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 4, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [4], Action:[0.8], Reward: [42.2], Period End: False\n",
-      "Rnd: 0, Period: 4, New State: [5], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 5, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 5, New State: [5], Action:[0.9], Reward: [31.9], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 6, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [2], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 6, New State: [5], Action:[0.6], Reward: [50.6], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 7, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [3], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [4], Action:[1.], Reward: [32.6], Period End: False\n",
-      "Rnd: 0, Period: 7, New State: [5], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 8, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [4], Action:[0.7], Reward: [44.9], Period End: False\n",
-      "Rnd: 0, Period: 8, New State: [5], Action:[0.5], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 9, New State: [1], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [4], Action:[0.4], Reward: [56.9], Period End: False\n",
-      "Rnd: 0, Period: 9, New State: [5], Action:[0.7], Reward: [42.4], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 10, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [4], Action:[0.6], Reward: [54.1], Period End: False\n",
-      "Rnd: 0, Period: 10, New State: [5], Action:[0.], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 11, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [4], Action:[0.7], Reward: [47.1], Period End: False\n",
-      "Rnd: 0, Period: 11, New State: [5], Action:[0.2], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 12, New State: [1], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [3], Action:[1.], Reward: [32.8], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [4], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 12, New State: [5], Action:[0.6], Reward: [47.3], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 13, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [2], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [4], Action:[0.7], Reward: [45.3], Period End: False\n",
-      "Rnd: 0, Period: 13, New State: [5], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 14, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [4], Action:[0.6], Reward: [49.7], Period End: False\n",
-      "Rnd: 0, Period: 14, New State: [5], Action:[0.5], Reward: [53.2], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 15, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [4], Action:[0.8], Reward: [36.9], Period End: False\n",
-      "Rnd: 0, Period: 15, New State: [5], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 16, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 16, New State: [5], Action:[0.2], Reward: [63.6], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 17, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [3], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 17, New State: [5], Action:[0.6], Reward: [49.1], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 18, New State: [1], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [4], Action:[0.7], Reward: [46.1], Period End: False\n",
-      "Rnd: 0, Period: 18, New State: [5], Action:[0.6], Reward: [46.7], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 19, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 19, New State: [5], Action:[0.4], Reward: [60.4], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 20, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 20, New State: [5], Action:[0.4], Reward: [61.1], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 21, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [3], Action:[0.9], Reward: [35.7], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [4], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 21, New State: [5], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 22, New State: [1], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [3], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [4], Action:[0.7], Reward: [47.5], Period End: False\n",
-      "Rnd: 0, Period: 22, New State: [5], Action:[0.], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 23, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [4], Action:[0.8], Reward: [40.1], Period End: False\n",
-      "Rnd: 0, Period: 23, New State: [5], Action:[0.4], Reward: [53.4], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 24, New State: [1], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [4], Action:[0.6], Reward: [51.7], Period End: False\n",
-      "Rnd: 0, Period: 24, New State: [5], Action:[1.], Reward: [31.1], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 25, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [4], Action:[0.8], Reward: [43.3], Period End: False\n",
-      "Rnd: 0, Period: 25, New State: [5], Action:[0.8], Reward: [37.4], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 26, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 26, New State: [5], Action:[0.6], Reward: [53.1], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 27, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 27, New State: [5], Action:[0.7], Reward: [44.9], Period End: True\n",
-      "done\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 28, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [4], Action:[0.6], Reward: [49.6], Period End: False\n",
-      "Rnd: 0, Period: 28, New State: [5], Action:[0.], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 29, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 29, New State: [5], Action:[0.8], Reward: [36.], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 30, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 30, New State: [5], Action:[0.], Reward: [51.8], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 31, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [4], Action:[0.6], Reward: [52.7], Period End: False\n",
-      "Rnd: 0, Period: 31, New State: [5], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 32, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 32, New State: [5], Action:[0.3], Reward: [63.3], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 33, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 33, New State: [5], Action:[1.], Reward: [30.3], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 34, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [4], Action:[0.7], Reward: [46.3], Period End: False\n",
-      "Rnd: 0, Period: 34, New State: [5], Action:[0.5], Reward: [53.1], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 35, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [3], Action:[1.], Reward: [32.3], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 35, New State: [5], Action:[0.9], Reward: [31.5], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 36, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [4], Action:[0.5], Reward: [54.6], Period End: False\n",
-      "Rnd: 0, Period: 36, New State: [5], Action:[0.8], Reward: [35.4], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 37, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 37, New State: [5], Action:[0.9], Reward: [38.8], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 38, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [2], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 38, New State: [5], Action:[0.2], Reward: [55.6], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 39, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [4], Action:[0.7], Reward: [45.3], Period End: False\n",
-      "Rnd: 0, Period: 39, New State: [5], Action:[0.6], Reward: [43.], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 40, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [4], Action:[0.5], Reward: [48.9], Period End: False\n",
-      "Rnd: 0, Period: 40, New State: [5], Action:[1.], Reward: [30.1], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 41, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [4], Action:[0.8], Reward: [40.5], Period End: False\n",
-      "Rnd: 0, Period: 41, New State: [5], Action:[0.6], Reward: [48.3], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 42, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [3], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 42, New State: [5], Action:[1.], Reward: [29.9], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 43, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [4], Action:[1.], Reward: [33.2], Period End: False\n",
-      "Rnd: 0, Period: 43, New State: [5], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 44, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 44, New State: [5], Action:[0.2], Reward: [63.1], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 45, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [3], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [4], Action:[0.7], Reward: [46.8], Period End: False\n",
-      "Rnd: 0, Period: 45, New State: [5], Action:[0.9], Reward: [28.3], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 46, New State: [1], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [4], Action:[0.5], Reward: [55.7], Period End: False\n",
-      "Rnd: 0, Period: 46, New State: [5], Action:[0.9], Reward: [31.], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 47, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 47, New State: [5], Action:[0.], Reward: [60.6], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 48, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [2], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [4], Action:[0.9], Reward: [35.2], Period End: False\n",
-      "Rnd: 0, Period: 48, New State: [5], Action:[0.9], Reward: [37.4], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 49, New State: [1], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [4], Action:[0.9], Reward: [38.1], Period End: False\n",
-      "Rnd: 0, Period: 49, New State: [5], Action:[0.7], Reward: [42.7], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 50, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [3], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 50, New State: [5], Action:[0.1], Reward: [58.2], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 51, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [3], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 51, New State: [5], Action:[0.9], Reward: [34.3], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 52, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 52, New State: [5], Action:[0.4], Reward: [58.5], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 53, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [4], Action:[0.5], Reward: [49.7], Period End: False\n",
-      "Rnd: 0, Period: 53, New State: [5], Action:[0.8], Reward: [32.1], Period End: True\n",
-      "done\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 54, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [2], Action:[1.], Reward: [32.1], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [4], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 54, New State: [5], Action:[0.5], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 55, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [3], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 55, New State: [5], Action:[0.4], Reward: [59.], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 56, New State: [1], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [3], Action:[1.], Reward: [29.8], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [4], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 56, New State: [5], Action:[0.5], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 57, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 57, New State: [5], Action:[0.9], Reward: [35.8], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 58, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [4], Action:[0.7], Reward: [49.7], Period End: False\n",
-      "Rnd: 0, Period: 58, New State: [5], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 59, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [3], Action:[1.], Reward: [30.2], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [4], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 59, New State: [5], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 60, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [4], Action:[0.9], Reward: [35.1], Period End: False\n",
-      "Rnd: 0, Period: 60, New State: [5], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 61, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [3], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [4], Action:[0.6], Reward: [45.4], Period End: False\n",
-      "Rnd: 0, Period: 61, New State: [5], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 62, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [4], Action:[0.5], Reward: [54.7], Period End: False\n",
-      "Rnd: 0, Period: 62, New State: [5], Action:[0.8], Reward: [35.8], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 63, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [4], Action:[0.9], Reward: [35.7], Period End: False\n",
-      "Rnd: 0, Period: 63, New State: [5], Action:[0.2], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 64, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [2], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [3], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 64, New State: [5], Action:[0.6], Reward: [54.3], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 65, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [2], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 65, New State: [5], Action:[0.1], Reward: [54.9], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 66, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [3], Action:[1.], Reward: [33.], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [4], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 66, New State: [5], Action:[0.2], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 67, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [2], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [3], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 67, New State: [5], Action:[0.2], Reward: [56.1], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 68, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [3], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [4], Action:[0.5], Reward: [54.4], Period End: False\n",
-      "Rnd: 0, Period: 68, New State: [5], Action:[0.1], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 69, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [4], Action:[0.6], Reward: [51.1], Period End: False\n",
-      "Rnd: 0, Period: 69, New State: [5], Action:[0.9], Reward: [33.3], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 70, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [4], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 70, New State: [5], Action:[0.1], Reward: [62.5], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 71, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [3], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [4], Action:[0.9], Reward: [37.7], Period End: False\n",
-      "Rnd: 0, Period: 71, New State: [5], Action:[0.], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 72, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [3], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [4], Action:[0.6], Reward: [46.6], Period End: False\n",
-      "Rnd: 0, Period: 72, New State: [5], Action:[0.2], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 73, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [4], Action:[0.9], Reward: [33.9], Period End: False\n",
-      "Rnd: 0, Period: 73, New State: [5], Action:[0.4], Reward: [54.1], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 74, New State: [1], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [4], Action:[0.7], Reward: [44.8], Period End: False\n",
-      "Rnd: 0, Period: 74, New State: [5], Action:[1.], Reward: [27.6], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 75, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [4], Action:[0.5], Reward: [58.8], Period End: False\n",
-      "Rnd: 0, Period: 75, New State: [5], Action:[0.6], Reward: [42.], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 76, New State: [1], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [2], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [4], Action:[0.7], Reward: [39.4], Period End: False\n",
-      "Rnd: 0, Period: 76, New State: [5], Action:[0.6], Reward: [46.3], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 77, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [4], Action:[0.9], Reward: [33.6], Period End: False\n",
-      "Rnd: 0, Period: 77, New State: [5], Action:[0.5], Reward: [47.], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 78, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [2], Action:[0.5], Reward: [0], Period End: False\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rnd: 0, Period: 78, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [4], Action:[0.6], Reward: [52.8], Period End: False\n",
-      "Rnd: 0, Period: 78, New State: [5], Action:[0.6], Reward: [46.2], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 79, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [2], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [4], Action:[0.5], Reward: [53.5], Period End: False\n",
-      "Rnd: 0, Period: 79, New State: [5], Action:[0.9], Reward: [32.4], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 80, New State: [1], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 80, New State: [5], Action:[0.2], Reward: [64.7], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 81, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [3], Action:[0.9], Reward: [35.5], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 81, New State: [5], Action:[0.9], Reward: [36.7], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 82, New State: [1], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 82, New State: [5], Action:[0.1], Reward: [56.9], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 83, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [4], Action:[0.5], Reward: [56.6], Period End: False\n",
-      "Rnd: 0, Period: 83, New State: [5], Action:[0.2], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 84, New State: [1], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [2], Action:[1.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 84, New State: [5], Action:[0.4], Reward: [57.9], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 85, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [4], Action:[0.6], Reward: [48.2], Period End: False\n",
-      "Rnd: 0, Period: 85, New State: [5], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 86, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [2], Action:[0.9], Reward: [38.3], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [3], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 86, New State: [5], Action:[0.4], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 87, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 87, New State: [5], Action:[0.3], Reward: [59.], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 88, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [2], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [3], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [4], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 88, New State: [5], Action:[0.7], Reward: [45.5], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 89, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 89, New State: [5], Action:[0.4], Reward: [56.2], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 90, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [2], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [4], Action:[0.6], Reward: [50.6], Period End: False\n",
-      "Rnd: 0, Period: 90, New State: [5], Action:[0.6], Reward: [50.1], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 91, New State: [1], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [2], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [4], Action:[0.], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 91, New State: [5], Action:[0.], Reward: [63.7], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 92, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [2], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 92, New State: [5], Action:[0.3], Reward: [59.3], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 93, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 93, New State: [5], Action:[0.1], Reward: [60.5], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 94, New State: [1], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [2], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [3], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [4], Action:[0.9], Reward: [36.7], Period End: False\n",
-      "Rnd: 0, Period: 94, New State: [5], Action:[0.3], Reward: [0], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 95, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [2], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [3], Action:[1.], Reward: [35.], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [4], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 95, New State: [5], Action:[0.7], Reward: [43.9], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 96, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [2], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [3], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [4], Action:[0.9], Reward: [37.], Period End: False\n",
-      "Rnd: 0, Period: 96, New State: [5], Action:[0.7], Reward: [44.9], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 97, New State: [1], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [3], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 97, New State: [5], Action:[0.7], Reward: [43.4], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 98, New State: [1], Action:[0.8], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [2], Action:[0.9], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [3], Action:[0.7], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 98, New State: [5], Action:[0.6], Reward: [50.8], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 99, New State: [1], Action:[0.4], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [2], Action:[0.3], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [3], Action:[0.5], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 99, New State: [5], Action:[0.1], Reward: [61.2], Period End: True\n",
-      "done\n",
-      "Rnd: 0, Period: 100, New State: [1], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [2], Action:[0.2], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [3], Action:[0.6], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [4], Action:[0.1], Reward: [0], Period End: False\n",
-      "Rnd: 0, Period: 100, New State: [5], Action:[0.2], Reward: [64.1], Period End: True\n",
-      "done\n"
-     ]
-    }
-   ],
-   "source": [
-    "env = TradingEnv(db, nsteps)\n",
-    "rnd = 0\n",
-    "observation, info = env.reset()\n",
-    "for period in count():\n",
-    "    for timestep in count(): \n",
-    "        action = env.action_space.sample()\n",
-    "        observation, reward, done, info, _ = env.step(action)\n",
-    "        print(f\"Rnd: {rnd}, Period: {period}, New State: {observation}, Action:{np.round(action,1)}, Reward: {np.round(reward,1)}, Period End: {done}\")\n",
-    "        if done:\n",
-    "            # If the episode is done, reset the environment\n",
-    "            print('done')\n",
-    "            observation, info = env.reset()\n",
-    "            timestep += 1\n",
-    "            break\n",
-    "    if period == nperiods:\n",
-    "        break\n",
-    "env.close()"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "55dfc29c",
-   "metadata": {},
-   "source": [
-    "### PPO + A2C"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 11,
-   "id": "ef7b34a2",
-   "metadata": {
-    "scrolled": true
-   },
-   "outputs": [
-    {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "b1a240dfeea34c1c99ea3798867ceeac",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "Output()"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n"
-      ],
-      "text/plain": []
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
-       "</pre>\n"
-      ],
-      "text/plain": [
-       "\n"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "PPO mean_reward: 59.91 +/- 2.45\n",
-      "A2C mean_reward: 57.35 +/- 2.68\n"
-     ]
-    }
-   ],
-   "source": [
-    "import gymnasium as gym\n",
-    "import numpy as np\n",
-    "from stable_baselines3 import PPO, A2C\n",
-    "from stable_baselines3.ppo.policies import MlpPolicy\n",
-    "from stable_baselines3.common.base_class import BaseAlgorithm\n",
-    "from stable_baselines3.common.evaluation import evaluate_policy\n",
-    "\n",
-    "# Define your environment and parameters (replace with your actual environment setup)\n",
-    "rnd = 0\n",
-    "period = 0\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.01\n",
-    "max_frac = 1.0\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "env = TradingEnv(db, nsteps)\n",
-    "eval_steps = 100\n",
-    "training_step = 10000\n",
-    "\n",
-    "# Create PPO model\n",
-    "from stable_baselines3.ppo.policies import MlpPolicy\n",
-    "random_model = A2C(MlpPolicy, env, verbose=0)\n",
-    "\n",
-    "# Evaluate the random policy agent\n",
-    "mean_reward_random, std_reward_random = evaluate_policy(random_model, env, n_eval_episodes=eval_steps)\n",
-    "print(f\"Random Policy mean_reward: {mean_reward_random:.2f} +/- {std_reward_random:.2f}\")\n",
-    "\n",
-    "# Create PPO model\n",
-    "from stable_baselines3.ppo.policies import MlpPolicy\n",
-    "ppo_model = PPO(MlpPolicy, env, verbose=0)\n",
-    "\n",
-    "# Train the PPO agent for 10000 steps\n",
-    "ppo_model.learn(total_timesteps=training_step, progress_bar = True)\n",
-    "\n",
-    "# Evaluate the trained PPO agent\n",
-    "mean_reward_ppo, std_reward_ppo = evaluate_policy(ppo_model, env, n_eval_episodes=eval_steps)\n",
-    "print(f\"PPO mean_reward: {mean_reward_ppo:.2f} +/- {std_reward_ppo:.2f}\")\n",
-    "\n",
-    "# Create A2C model\n",
-    "from stable_baselines3.ppo.policies import MlpPolicy\n",
-    "a2c_model = A2C(MlpPolicy, env, verbose=0)\n",
-    "\n",
-    "# Train the A2C agent for 10000 steps\n",
-    "a2c_model.learn(total_timesteps=training_step)\n",
-    "\n",
-    "# Evaluate the trained A2C agent\n",
-    "mean_reward_a2c, std_reward_a2c = evaluate_policy(a2c_model, env, n_eval_episodes=eval_steps)\n",
-    "print(f\"A2C mean_reward: {mean_reward_a2c:.2f} +/- {std_reward_a2c:.2f}\")"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 61,
-   "id": "bcf11b97",
-   "metadata": {
-    "scrolled": true
-   },
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[0.76, 121.2]</td>\n",
-       "      <td>[44.5, 14.6, 19.3, 34.0, 34.0, 61.2]</td>\n",
-       "      <td>121.20</td>\n",
-       "      <td>1</td>\n",
-       "      <td>14.6</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>67.90</td>\n",
-       "      <td>1</td>\n",
-       "      <td>23.30</td>\n",
-       "      <td>55.60</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[0.76, 68.8]</td>\n",
-       "      <td>[40.6, 27.9, 17.4, 37.0, 24.9, 80.1]</td>\n",
-       "      <td>68.80</td>\n",
-       "      <td>1</td>\n",
-       "      <td>17.4</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>43.10</td>\n",
-       "      <td>1</td>\n",
-       "      <td>5.40</td>\n",
-       "      <td>29.20</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[0.76, 50.3]</td>\n",
-       "      <td>[49.5, 32.4, 41.1, 33.8, 35.7, 67.4]</td>\n",
-       "      <td>50.30</td>\n",
-       "      <td>1</td>\n",
-       "      <td>32.4</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>41.35</td>\n",
-       "      <td>1</td>\n",
-       "      <td>1.95</td>\n",
-       "      <td>15.35</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[0.76, 48.9]</td>\n",
-       "      <td>[36.1, 52.4, 39.8, 29.4, 36.8, 56.3]</td>\n",
-       "      <td>48.90</td>\n",
-       "      <td>1</td>\n",
-       "      <td>29.4</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>39.15</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-0.35</td>\n",
-       "      <td>10.45</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[0.76, nan]</td>\n",
-       "      <td>[39.7, 40.3, 34.7, 52.3, 35.3, 57.6]</td>\n",
-       "      <td>0.76</td>\n",
-       "      <td>0</td>\n",
-       "      <td>34.7</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>34.70</td>\n",
-       "      <td>1</td>\n",
-       "      <td>41.80</td>\n",
-       "      <td>1.40</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>...</th>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "      <td>...</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8995</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1800</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[0.76, 110.4]</td>\n",
-       "      <td>[47.9, 17.5, 17.3, 30.1, 36.4, 78.3]</td>\n",
-       "      <td>110.40</td>\n",
-       "      <td>1</td>\n",
-       "      <td>17.3</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>63.85</td>\n",
-       "      <td>1</td>\n",
-       "      <td>27.35</td>\n",
-       "      <td>49.95</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8996</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1800</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[35.1, 58.9]</td>\n",
-       "      <td>[38.9, 13.5, 37.0, 33.6, 27.7, 62.7]</td>\n",
-       "      <td>58.90</td>\n",
-       "      <td>1</td>\n",
-       "      <td>13.5</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>36.20</td>\n",
-       "      <td>1</td>\n",
-       "      <td>12.30</td>\n",
-       "      <td>23.90</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8997</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1800</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[0.76, 64.5]</td>\n",
-       "      <td>[50.0, 34.5, 43.9, 42.9, 36.7, 68.3]</td>\n",
-       "      <td>64.50</td>\n",
-       "      <td>1</td>\n",
-       "      <td>34.5</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>49.50</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-6.20</td>\n",
-       "      <td>23.50</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8998</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1800</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[6.92, 56.7]</td>\n",
-       "      <td>[36.9, 53.4, 48.9, 32.6, 34.8, 74.4]</td>\n",
-       "      <td>56.70</td>\n",
-       "      <td>1</td>\n",
-       "      <td>32.6</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>44.65</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-5.85</td>\n",
-       "      <td>15.95</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8999</th>\n",
-       "      <td>0</td>\n",
-       "      <td>1800</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[0.76, nan]</td>\n",
-       "      <td>[47.1, 41.6, 39.5, 51.2, 33.4, 64.6]</td>\n",
-       "      <td>0.76</td>\n",
-       "      <td>0</td>\n",
-       "      <td>33.4</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>33.40</td>\n",
-       "      <td>1</td>\n",
-       "      <td>43.10</td>\n",
-       "      <td>8.70</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "<p>9000 rows × 15 columns</p>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "      rnd  period  step           bids                                  asks  \\\n",
-       "0       0       0     0  [0.76, 121.2]  [44.5, 14.6, 19.3, 34.0, 34.0, 61.2]   \n",
-       "1       0       0     1   [0.76, 68.8]  [40.6, 27.9, 17.4, 37.0, 24.9, 80.1]   \n",
-       "2       0       0     2   [0.76, 50.3]  [49.5, 32.4, 41.1, 33.8, 35.7, 67.4]   \n",
-       "3       0       0     3   [0.76, 48.9]  [36.1, 52.4, 39.8, 29.4, 36.8, 56.3]   \n",
-       "4       0       0     4    [0.76, nan]  [39.7, 40.3, 34.7, 52.3, 35.3, 57.6]   \n",
-       "...   ...     ...   ...            ...                                   ...   \n",
-       "8995    0    1800     0  [0.76, 110.4]  [47.9, 17.5, 17.3, 30.1, 36.4, 78.3]   \n",
-       "8996    0    1800     1   [35.1, 58.9]  [38.9, 13.5, 37.0, 33.6, 27.7, 62.7]   \n",
-       "8997    0    1800     2   [0.76, 64.5]  [50.0, 34.5, 43.9, 42.9, 36.7, 68.3]   \n",
-       "8998    0    1800     3   [6.92, 56.7]  [36.9, 53.4, 48.9, 32.6, 34.8, 74.4]   \n",
-       "8999    0    1800     4    [0.76, nan]  [47.1, 41.6, 39.5, 51.2, 33.4, 64.6]   \n",
-       "\n",
-       "      current_bid  current_bid_idx  current_ask  current_ask_idx   buy   sell  \\\n",
-       "0          121.20                1         14.6                1  True   True   \n",
-       "1           68.80                1         17.4                2  True   True   \n",
-       "2           50.30                1         32.4                1  True   True   \n",
-       "3           48.90                1         29.4                3  True   True   \n",
-       "4            0.76                0         34.7                2  True  False   \n",
-       "...           ...              ...          ...              ...   ...    ...   \n",
-       "8995       110.40                1         17.3                2  True   True   \n",
-       "8996        58.90                1         13.5                1  True   True   \n",
-       "8997        64.50                1         34.5                1  True   True   \n",
-       "8998        56.70                1         32.6                3  True   True   \n",
-       "8999         0.76                0         33.4                4  True  False   \n",
-       "\n",
-       "      price  sale  bprofit  sprofit  \n",
-       "0     67.90     1    23.30    55.60  \n",
-       "1     43.10     1     5.40    29.20  \n",
-       "2     41.35     1     1.95    15.35  \n",
-       "3     39.15     1    -0.35    10.45  \n",
-       "4     34.70     1    41.80     1.40  \n",
-       "...     ...   ...      ...      ...  \n",
-       "8995  63.85     1    27.35    49.95  \n",
-       "8996  36.20     1    12.30    23.90  \n",
-       "8997  49.50     1    -6.20    23.50  \n",
-       "8998  44.65     1    -5.85    15.95  \n",
-       "8999  33.40     1    43.10     8.70  \n",
-       "\n",
-       "[9000 rows x 15 columns]"
-      ]
-     },
-     "execution_count": 61,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.head(9000)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 55,
-   "id": "01db3c49",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "(21740, 15)"
-      ]
-     },
-     "execution_count": 55,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.shape"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "01b4514e",
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3 (ipykernel)",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.10.13"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 5
-}
diff --git a/code/3_deep_reinforcement_learning/8_PPO_tests.ipynb b/code/3_deep_reinforcement_learning/8_PPO_tests.ipynb
deleted file mode 100644
index 2932002..0000000
--- a/code/3_deep_reinforcement_learning/8_PPO_tests.ipynb
+++ /dev/null
@@ -1,1483 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "6ce0ea75",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "from gymnasium import spaces\n",
-    "import numpy as np\n",
-    "from functions import *\n",
-    "from itertools import count\n",
-    "buyer_strategies = ['Honest', 'Random', 'Random', 'Random']\n",
-    "seller_strategies = ['Honest', 'Honest', 'Honest', 'Honest', 'Honest','Honest', 'Honest', 'Honest', 'Honest', 'Honest']\n",
-    "nbuyers, nsellers = len(buyer_strategies), len(seller_strategies)\n",
-    "nrounds, nperiods, ntokens, nsteps, gametype, nbuyers, nsellers = 10, 100, 4, 16, '1234', len(buyer_strategies), len(seller_strategies)\n",
-    "R1, R2, R3, R4 = gametype_to_ran(gametype)\n",
-    "game_metadata = [nrounds, nperiods, ntokens, nbuyers, nsellers, nsteps, R1, R2, R3, R4]\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "rnd = 0\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "period = 0\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.01\n",
-    "max_frac = 1.0"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "87aeeb4c",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "class TradingEnv(gym.Env):\n",
-    "    def __init__(self, db, nsteps, render_mode = None):\n",
-    "        self.rnd = 0\n",
-    "        self.period = -1\n",
-    "        self.nperiods = nperiods\n",
-    "        self.db = db\n",
-    "        self.action_space = spaces.Box(0,1,(1,),dtype=np.float)\n",
-    "        self.observation_space = spaces.Box(0,nsteps,(1,),dtype=np.float)\n",
-    "\n",
-    "    def reset(self,seed=None):\n",
-    "        #self.db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "        self.db.reset_period(self.rnd)\n",
-    "        self.timestep = 0\n",
-    "        self.period += 1\n",
-    "        observation = np.array([0])\n",
-    "        return observation, None\n",
-    "\n",
-    "    def step(self, action, seed=None, options=None):\n",
-    "        [buyer.next_token() for buyer in self.db.buyers]\n",
-    "        [seller.next_token() for seller in self.db.sellers]\n",
-    "        bid_frac = action.item()\n",
-    "        # convert action to bid\n",
-    "        self.db.buyers[0].next_token()\n",
-    "        min_bid = self.db.buyers[0].value * min_frac\n",
-    "        max_bid = self.db.buyers[0].value * max_frac\n",
-    "        bid = np.round(max_bid * bid_frac + (1 - bid_frac) * min_bid, 2)\n",
-    "\n",
-    "        # simulate market\n",
-    "        bids = [buyer.bid(self.db) for buyer in self.db.buyers]\n",
-    "        bids[0] = bid\n",
-    "        asks = [seller.ask(self.db) for seller in self.db.sellers]\n",
-    "        current_ask, current_ask_idx, current_bid, current_bid_idx = current_bid_ask(bids, asks)\n",
-    "        sale, price, bprofit, sprofit, buy, sell = buy_sell(self.db, current_bid, current_bid_idx, current_ask, current_ask_idx)\n",
-    "        step_data = [self.rnd, self.period, self.timestep, bids, asks, current_bid, current_bid_idx, current_ask, current_ask_idx, buy, sell, price, sale, bprofit, sprofit]\n",
-    "        self.db.add_step(step_data)\n",
-    "\n",
-    "        # compute reward, new state\n",
-    "        reward = np.array([0])\n",
-    "        if sale == 1 and current_bid_idx == 0:\n",
-    "            reward = np.array([bprofit])\n",
-    "        observation = np.array([self.timestep + 1])\n",
-    "\n",
-    "        # check termination\n",
-    "        self.timestep += 1\n",
-    "        if self.timestep == nsteps:\n",
-    "            terminated = True\n",
-    "            self.timestep = 0\n",
-    "        else:\n",
-    "            terminated = False\n",
-    "        return observation, reward, terminated, {}, {}"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "56d7618c",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "rnd = 0\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "env = TradingEnv(db, nsteps)\n",
-    "observation, info = env.reset()\n",
-    "for period in count():\n",
-    "    for timestep in count(): \n",
-    "        action = env.action_space.sample()\n",
-    "        observation, reward, done, info, _ = env.step(action)\n",
-    "        #print(f\"Rnd: {rnd}, Period: {period}, New State: {observation}, Action:{np.round(action,1)}, Reward: {np.round(reward,1)}, Period End: {done}\")\n",
-    "        if done:\n",
-    "            # If the episode is done, reset the environment\n",
-    "            #print('done')\n",
-    "            observation, info = env.reset()\n",
-    "            break\n",
-    "    if period == nperiods:\n",
-    "        period = 0\n",
-    "        break\n",
-    "env.close()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "8540088f",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "db.step_data.head(10000).groupby('current_bid_idx').sum()"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "55dfc29c",
-   "metadata": {},
-   "source": [
-    "### PPO"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "ef7b34a2",
-   "metadata": {
-    "scrolled": true
-   },
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "import numpy as np\n",
-    "from stable_baselines3 import PPO, A2C\n",
-    "from stable_baselines3.ppo.policies import MlpPolicy\n",
-    "from stable_baselines3.common.base_class import BaseAlgorithm\n",
-    "from stable_baselines3.common.evaluation import evaluate_policy\n",
-    "\n",
-    "# Define your environment and parameters (replace with your actual environment setup)\n",
-    "rnd = 0\n",
-    "period = 0\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.01\n",
-    "max_frac = 1.5\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "env = TradingEnv(db, nsteps)\n",
-    "eval_steps = 1000\n",
-    "training_step = 50000"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "daa5db6d",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "eval_steps = 1000\n",
-    "training_step = 100000\n",
-    "# Create PPO model\n",
-    "from stable_baselines3.ppo.policies import MlpPolicy\n",
-    "ppo_model = PPO(MlpPolicy, env, verbose=0)\n",
-    "\n",
-    "# Train the PPO agent for 10000 steps\n",
-    "ppo_model.learn(total_timesteps=training_step, progress_bar = True)\n",
-    "\n",
-    "# Evaluate the trained PPO agent\n",
-    "mean_reward_ppo, std_reward_ppo = evaluate_policy(ppo_model, env, n_eval_episodes=eval_steps)\n",
-    "print(f\"PPO mean_reward: {mean_reward_ppo:.2f} +/- {std_reward_ppo:.2f}\")"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "d8ba5b65",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "env.db.step_data = env.db.step_data.drop_duplicates(subset=['rnd','period','step'], keep='last')"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 28,
-   "id": "bcf11b97",
-   "metadata": {
-    "scrolled": true
-   },
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[0.71, 44.9, 63.0, 81.8]</td>\n",
-       "      <td>[42.5, 47.5, 7.0, 41.3, 17.3, 33.5, 31.6, 44.1...</td>\n",
-       "      <td>81.8</td>\n",
-       "      <td>3</td>\n",
-       "      <td>7.0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>44.40</td>\n",
-       "      <td>1</td>\n",
-       "      <td>40.30</td>\n",
-       "      <td>37.40</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[106.2, 27.9, 70.2, 18.1]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 17.3, 33.5, 31.6, 44....</td>\n",
-       "      <td>106.2</td>\n",
-       "      <td>0</td>\n",
-       "      <td>17.3</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>61.75</td>\n",
-       "      <td>1</td>\n",
-       "      <td>9.05</td>\n",
-       "      <td>44.45</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[102.3, 47.2, 78.7, 24.2]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....</td>\n",
-       "      <td>102.3</td>\n",
-       "      <td>0</td>\n",
-       "      <td>17.7</td>\n",
-       "      <td>9</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>60.00</td>\n",
-       "      <td>1</td>\n",
-       "      <td>8.20</td>\n",
-       "      <td>42.30</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[19.95, 39.1, 70.4, 19.6]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....</td>\n",
-       "      <td>70.4</td>\n",
-       "      <td>2</td>\n",
-       "      <td>19.6</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>45.00</td>\n",
-       "      <td>1</td>\n",
-       "      <td>37.20</td>\n",
-       "      <td>25.40</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[0.48, 49.8, 45.2, 31.6]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 31.6, 44....</td>\n",
-       "      <td>49.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>31.6</td>\n",
-       "      <td>6</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>40.70</td>\n",
-       "      <td>1</td>\n",
-       "      <td>15.10</td>\n",
-       "      <td>9.10</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>5</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>5</td>\n",
-       "      <td>[0.48, 48.0, 49.0, 29.3]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 35.4, 44....</td>\n",
-       "      <td>49.0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>31.9</td>\n",
-       "      <td>8</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>40.45</td>\n",
-       "      <td>1</td>\n",
-       "      <td>23.85</td>\n",
-       "      <td>8.55</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>6</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>6</td>\n",
-       "      <td>[0.48, 27.1, 51.7, 29.3]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 35.4, 44....</td>\n",
-       "      <td>51.7</td>\n",
-       "      <td>2</td>\n",
-       "      <td>32.9</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>42.30</td>\n",
-       "      <td>1</td>\n",
-       "      <td>19.00</td>\n",
-       "      <td>9.40</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>7</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>7</td>\n",
-       "      <td>[0.48, 44.8, 16.5, 19.7]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 33.5, 35.4, 44....</td>\n",
-       "      <td>44.8</td>\n",
-       "      <td>1</td>\n",
-       "      <td>33.5</td>\n",
-       "      <td>5</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>39.15</td>\n",
-       "      <td>1</td>\n",
-       "      <td>13.05</td>\n",
-       "      <td>5.65</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>8</td>\n",
-       "      <td>[14.77, 29.2, 11.9, 17.3]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 35.4, 44....</td>\n",
-       "      <td>29.2</td>\n",
-       "      <td>1</td>\n",
-       "      <td>35.4</td>\n",
-       "      <td>6</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>35.40</td>\n",
-       "      <td>1</td>\n",
-       "      <td>5.70</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>9</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>9</td>\n",
-       "      <td>[15.3, 14.6, 18.5, 18.8]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>18.8</td>\n",
-       "      <td>3</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "   rnd  period  step                       bids  \\\n",
-       "0    0       0     0   [0.71, 44.9, 63.0, 81.8]   \n",
-       "1    0       0     1  [106.2, 27.9, 70.2, 18.1]   \n",
-       "2    0       0     2  [102.3, 47.2, 78.7, 24.2]   \n",
-       "3    0       0     3  [19.95, 39.1, 70.4, 19.6]   \n",
-       "4    0       0     4   [0.48, 49.8, 45.2, 31.6]   \n",
-       "5    0       0     5   [0.48, 48.0, 49.0, 29.3]   \n",
-       "6    0       0     6   [0.48, 27.1, 51.7, 29.3]   \n",
-       "7    0       0     7   [0.48, 44.8, 16.5, 19.7]   \n",
-       "8    0       0     8  [14.77, 29.2, 11.9, 17.3]   \n",
-       "9    0       0     9   [15.3, 14.6, 18.5, 18.8]   \n",
-       "\n",
-       "                                                asks  current_bid  \\\n",
-       "0  [42.5, 47.5, 7.0, 41.3, 17.3, 33.5, 31.6, 44.1...         81.8   \n",
-       "1  [42.5, 47.5, 40.9, 41.3, 17.3, 33.5, 31.6, 44....        106.2   \n",
-       "2  [42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....        102.3   \n",
-       "3  [42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....         70.4   \n",
-       "4  [42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 31.6, 44....         49.8   \n",
-       "5  [42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 35.4, 44....         49.0   \n",
-       "6  [42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 35.4, 44....         51.7   \n",
-       "7  [42.5, 47.5, 40.9, 41.3, 42.3, 33.5, 35.4, 44....         44.8   \n",
-       "8  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 35.4, 44....         29.2   \n",
-       "9  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....         18.8   \n",
-       "\n",
-       "   current_bid_idx  current_ask  current_ask_idx    buy   sell  price  sale  \\\n",
-       "0                3          7.0                2   True   True  44.40     1   \n",
-       "1                0         17.3                4   True   True  61.75     1   \n",
-       "2                0         17.7                9   True   True  60.00     1   \n",
-       "3                2         19.6                4   True   True  45.00     1   \n",
-       "4                1         31.6                6   True   True  40.70     1   \n",
-       "5                2         31.9                8   True   True  40.45     1   \n",
-       "6                2         32.9                4   True   True  42.30     1   \n",
-       "7                1         33.5                5   True   True  39.15     1   \n",
-       "8                1         35.4                6   True  False  35.40     1   \n",
-       "9                3         37.2                8  False  False    NaN     0   \n",
-       "\n",
-       "   bprofit  sprofit  \n",
-       "0    40.30    37.40  \n",
-       "1     9.05    44.45  \n",
-       "2     8.20    42.30  \n",
-       "3    37.20    25.40  \n",
-       "4    15.10     9.10  \n",
-       "5    23.85     8.55  \n",
-       "6    19.00     9.40  \n",
-       "7    13.05     5.65  \n",
-       "8     5.70     0.00  \n",
-       "9     0.00     0.00  "
-      ]
-     },
-     "execution_count": 28,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.head(10)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 29,
-   "id": "d0023c4b",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>7351</td>\n",
-       "      <td>1650</td>\n",
-       "      <td>16877.63</td>\n",
-       "      <td>7083.4</td>\n",
-       "      <td>1505</td>\n",
-       "      <td>184</td>\n",
-       "      <td>212</td>\n",
-       "      <td>11408.045</td>\n",
-       "      <td>220</td>\n",
-       "      <td>1065.755</td>\n",
-       "      <td>5046.745</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>9325</td>\n",
-       "      <td>2618</td>\n",
-       "      <td>10312.10</td>\n",
-       "      <td>10421.7</td>\n",
-       "      <td>1791</td>\n",
-       "      <td>189</td>\n",
-       "      <td>136</td>\n",
-       "      <td>7014.050</td>\n",
-       "      <td>189</td>\n",
-       "      <td>2379.250</td>\n",
-       "      <td>894.350</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6034</td>\n",
-       "      <td>683</td>\n",
-       "      <td>10821.00</td>\n",
-       "      <td>4597.4</td>\n",
-       "      <td>1040</td>\n",
-       "      <td>189</td>\n",
-       "      <td>189</td>\n",
-       "      <td>7597.900</td>\n",
-       "      <td>189</td>\n",
-       "      <td>5493.500</td>\n",
-       "      <td>3146.000</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>8042</td>\n",
-       "      <td>2517</td>\n",
-       "      <td>9951.30</td>\n",
-       "      <td>8721.5</td>\n",
-       "      <td>1514</td>\n",
-       "      <td>67</td>\n",
-       "      <td>63</td>\n",
-       "      <td>2803.000</td>\n",
-       "      <td>67</td>\n",
-       "      <td>2665.500</td>\n",
-       "      <td>1780.000</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "                 rnd  period  step  current_bid  current_ask  current_ask_idx  \\\n",
-       "current_bid_idx                                                                 \n",
-       "0                  0    7351  1650     16877.63       7083.4             1505   \n",
-       "1                  0    9325  2618     10312.10      10421.7             1791   \n",
-       "2                  0    6034   683     10821.00       4597.4             1040   \n",
-       "3                  0    8042  2517      9951.30       8721.5             1514   \n",
-       "\n",
-       "                 buy  sell      price  sale   bprofit   sprofit  \n",
-       "current_bid_idx                                                  \n",
-       "0                184   212  11408.045   220  1065.755  5046.745  \n",
-       "1                189   136   7014.050   189  2379.250   894.350  \n",
-       "2                189   189   7597.900   189  5493.500  3146.000  \n",
-       "3                 67    63   2803.000    67  2665.500  1780.000  "
-      ]
-     },
-     "execution_count": 29,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.head(1000).groupby('current_bid_idx').sum()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 31,
-   "id": "71ecb576",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>111759</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6985</td>\n",
-       "      <td>15</td>\n",
-       "      <td>[20.92, 16.1, 17.4, 19.4]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>20.92</td>\n",
-       "      <td>0</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>37.20</td>\n",
-       "      <td>1</td>\n",
-       "      <td>10.70</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111760</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[59.62, 54.7, 51.7, 43.1]</td>\n",
-       "      <td>[42.5, 47.5, 7.0, 41.3, 17.3, 33.5, 31.6, 44.1...</td>\n",
-       "      <td>59.62</td>\n",
-       "      <td>0</td>\n",
-       "      <td>7.0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>33.31</td>\n",
-       "      <td>1</td>\n",
-       "      <td>37.49</td>\n",
-       "      <td>26.31</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111761</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[49.62, 51.9, 48.0, 44.8]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 17.3, 33.5, 31.6, 44....</td>\n",
-       "      <td>51.90</td>\n",
-       "      <td>1</td>\n",
-       "      <td>17.3</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>34.60</td>\n",
-       "      <td>1</td>\n",
-       "      <td>21.20</td>\n",
-       "      <td>17.30</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111762</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[39.05, 42.4, 75.6, 49.0]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....</td>\n",
-       "      <td>75.60</td>\n",
-       "      <td>2</td>\n",
-       "      <td>17.7</td>\n",
-       "      <td>9</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>46.65</td>\n",
-       "      <td>1</td>\n",
-       "      <td>35.55</td>\n",
-       "      <td>28.95</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111763</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[29.78, 48.7, 39.3, 45.8]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....</td>\n",
-       "      <td>48.70</td>\n",
-       "      <td>1</td>\n",
-       "      <td>19.6</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>34.15</td>\n",
-       "      <td>1</td>\n",
-       "      <td>18.05</td>\n",
-       "      <td>14.55</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111764</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[23.53, 25.1, 59.8, 74.6]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 31.6, 44....</td>\n",
-       "      <td>74.60</td>\n",
-       "      <td>3</td>\n",
-       "      <td>31.6</td>\n",
-       "      <td>6</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>53.10</td>\n",
-       "      <td>1</td>\n",
-       "      <td>31.60</td>\n",
-       "      <td>21.50</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111765</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>5</td>\n",
-       "      <td>[20.33, 29.8, 39.2, 28.9]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 35.4, 44....</td>\n",
-       "      <td>39.20</td>\n",
-       "      <td>2</td>\n",
-       "      <td>31.9</td>\n",
-       "      <td>8</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>35.55</td>\n",
-       "      <td>1</td>\n",
-       "      <td>28.75</td>\n",
-       "      <td>3.65</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111766</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>6</td>\n",
-       "      <td>[19.36, 36.2, 47.4, 27.3]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 35.4, 44....</td>\n",
-       "      <td>47.40</td>\n",
-       "      <td>2</td>\n",
-       "      <td>32.9</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>40.15</td>\n",
-       "      <td>1</td>\n",
-       "      <td>21.15</td>\n",
-       "      <td>7.25</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111767</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>7</td>\n",
-       "      <td>[19.73, 35.1, 14.8, 31.7]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 33.5, 35.4, 44....</td>\n",
-       "      <td>35.10</td>\n",
-       "      <td>1</td>\n",
-       "      <td>33.5</td>\n",
-       "      <td>5</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>34.30</td>\n",
-       "      <td>1</td>\n",
-       "      <td>6.80</td>\n",
-       "      <td>0.80</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111768</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>8</td>\n",
-       "      <td>[20.83, 18.3, 17.2, 19.8]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 35.4, 44....</td>\n",
-       "      <td>20.83</td>\n",
-       "      <td>0</td>\n",
-       "      <td>35.4</td>\n",
-       "      <td>6</td>\n",
-       "      <td>True</td>\n",
-       "      <td>False</td>\n",
-       "      <td>35.40</td>\n",
-       "      <td>1</td>\n",
-       "      <td>32.80</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111769</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>9</td>\n",
-       "      <td>[15.62, 24.1, 20.1, 17.7]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>24.10</td>\n",
-       "      <td>1</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111770</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>10</td>\n",
-       "      <td>[16.67, 25.9, 12.4, 16.7]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>25.90</td>\n",
-       "      <td>1</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111771</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>11</td>\n",
-       "      <td>[17.69, 17.8, 11.8, 27.5]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>27.50</td>\n",
-       "      <td>3</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111772</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>12</td>\n",
-       "      <td>[18.63, 20.4, 20.2, 30.9]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>30.90</td>\n",
-       "      <td>3</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111773</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>13</td>\n",
-       "      <td>[19.48, 16.1, 13.8, 20.2]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>20.20</td>\n",
-       "      <td>3</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111774</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>14</td>\n",
-       "      <td>[20.24, 27.5, 13.3, 32.6]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>32.60</td>\n",
-       "      <td>3</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111775</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6986</td>\n",
-       "      <td>15</td>\n",
-       "      <td>[20.92, 15.6, 11.9, 21.6]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....</td>\n",
-       "      <td>21.60</td>\n",
-       "      <td>3</td>\n",
-       "      <td>37.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111776</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6987</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[59.62, 35.1, 77.0, 44.6]</td>\n",
-       "      <td>[42.5, 47.5, 7.0, 41.3, 17.3, 33.5, 31.6, 44.1...</td>\n",
-       "      <td>77.00</td>\n",
-       "      <td>2</td>\n",
-       "      <td>7.0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>42.00</td>\n",
-       "      <td>1</td>\n",
-       "      <td>40.20</td>\n",
-       "      <td>35.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111777</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6987</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[51.52, 40.2, 53.7, 46.1]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 17.3, 33.5, 31.6, 44....</td>\n",
-       "      <td>53.70</td>\n",
-       "      <td>2</td>\n",
-       "      <td>17.3</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>35.50</td>\n",
-       "      <td>1</td>\n",
-       "      <td>28.80</td>\n",
-       "      <td>18.20</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>111778</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6987</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[40.54, 30.2, 55.8, 54.8]</td>\n",
-       "      <td>[42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....</td>\n",
-       "      <td>55.80</td>\n",
-       "      <td>2</td>\n",
-       "      <td>17.7</td>\n",
-       "      <td>9</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>36.75</td>\n",
-       "      <td>1</td>\n",
-       "      <td>24.55</td>\n",
-       "      <td>19.05</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "        rnd  period  step                       bids  \\\n",
-       "111759    0    6985    15  [20.92, 16.1, 17.4, 19.4]   \n",
-       "111760    0    6986     0  [59.62, 54.7, 51.7, 43.1]   \n",
-       "111761    0    6986     1  [49.62, 51.9, 48.0, 44.8]   \n",
-       "111762    0    6986     2  [39.05, 42.4, 75.6, 49.0]   \n",
-       "111763    0    6986     3  [29.78, 48.7, 39.3, 45.8]   \n",
-       "111764    0    6986     4  [23.53, 25.1, 59.8, 74.6]   \n",
-       "111765    0    6986     5  [20.33, 29.8, 39.2, 28.9]   \n",
-       "111766    0    6986     6  [19.36, 36.2, 47.4, 27.3]   \n",
-       "111767    0    6986     7  [19.73, 35.1, 14.8, 31.7]   \n",
-       "111768    0    6986     8  [20.83, 18.3, 17.2, 19.8]   \n",
-       "111769    0    6986     9  [15.62, 24.1, 20.1, 17.7]   \n",
-       "111770    0    6986    10  [16.67, 25.9, 12.4, 16.7]   \n",
-       "111771    0    6986    11  [17.69, 17.8, 11.8, 27.5]   \n",
-       "111772    0    6986    12  [18.63, 20.4, 20.2, 30.9]   \n",
-       "111773    0    6986    13  [19.48, 16.1, 13.8, 20.2]   \n",
-       "111774    0    6986    14  [20.24, 27.5, 13.3, 32.6]   \n",
-       "111775    0    6986    15  [20.92, 15.6, 11.9, 21.6]   \n",
-       "111776    0    6987     0  [59.62, 35.1, 77.0, 44.6]   \n",
-       "111777    0    6987     1  [51.52, 40.2, 53.7, 46.1]   \n",
-       "111778    0    6987     2  [40.54, 30.2, 55.8, 54.8]   \n",
-       "\n",
-       "                                                     asks  current_bid  \\\n",
-       "111759  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....        20.92   \n",
-       "111760  [42.5, 47.5, 7.0, 41.3, 17.3, 33.5, 31.6, 44.1...        59.62   \n",
-       "111761  [42.5, 47.5, 40.9, 41.3, 17.3, 33.5, 31.6, 44....        51.90   \n",
-       "111762  [42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....        75.60   \n",
-       "111763  [42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....        48.70   \n",
-       "111764  [42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 31.6, 44....        74.60   \n",
-       "111765  [42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 35.4, 44....        39.20   \n",
-       "111766  [42.5, 47.5, 40.9, 41.3, 32.9, 33.5, 35.4, 44....        47.40   \n",
-       "111767  [42.5, 47.5, 40.9, 41.3, 42.3, 33.5, 35.4, 44....        35.10   \n",
-       "111768  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 35.4, 44....        20.83   \n",
-       "111769  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....        24.10   \n",
-       "111770  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....        25.90   \n",
-       "111771  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....        27.50   \n",
-       "111772  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....        30.90   \n",
-       "111773  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....        20.20   \n",
-       "111774  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....        32.60   \n",
-       "111775  [42.5, 47.5, 40.9, 41.3, 42.3, 71.4, 52.3, 44....        21.60   \n",
-       "111776  [42.5, 47.5, 7.0, 41.3, 17.3, 33.5, 31.6, 44.1...        77.00   \n",
-       "111777  [42.5, 47.5, 40.9, 41.3, 17.3, 33.5, 31.6, 44....        53.70   \n",
-       "111778  [42.5, 47.5, 40.9, 41.3, 19.6, 33.5, 31.6, 44....        55.80   \n",
-       "\n",
-       "        current_bid_idx  current_ask  current_ask_idx    buy   sell  price  \\\n",
-       "111759                0         37.2                8   True  False  37.20   \n",
-       "111760                0          7.0                2   True   True  33.31   \n",
-       "111761                1         17.3                4   True   True  34.60   \n",
-       "111762                2         17.7                9   True   True  46.65   \n",
-       "111763                1         19.6                4   True   True  34.15   \n",
-       "111764                3         31.6                6   True   True  53.10   \n",
-       "111765                2         31.9                8   True   True  35.55   \n",
-       "111766                2         32.9                4   True   True  40.15   \n",
-       "111767                1         33.5                5   True   True  34.30   \n",
-       "111768                0         35.4                6   True  False  35.40   \n",
-       "111769                1         37.2                8  False  False    NaN   \n",
-       "111770                1         37.2                8  False  False    NaN   \n",
-       "111771                3         37.2                8  False  False    NaN   \n",
-       "111772                3         37.2                8  False  False    NaN   \n",
-       "111773                3         37.2                8  False  False    NaN   \n",
-       "111774                3         37.2                8  False  False    NaN   \n",
-       "111775                3         37.2                8  False  False    NaN   \n",
-       "111776                2          7.0                2   True   True  42.00   \n",
-       "111777                2         17.3                4   True   True  35.50   \n",
-       "111778                2         17.7                9   True   True  36.75   \n",
-       "\n",
-       "        sale  bprofit  sprofit  \n",
-       "111759     1    10.70     0.00  \n",
-       "111760     1    37.49    26.31  \n",
-       "111761     1    21.20    17.30  \n",
-       "111762     1    35.55    28.95  \n",
-       "111763     1    18.05    14.55  \n",
-       "111764     1    31.60    21.50  \n",
-       "111765     1    28.75     3.65  \n",
-       "111766     1    21.15     7.25  \n",
-       "111767     1     6.80     0.80  \n",
-       "111768     1    32.80     0.00  \n",
-       "111769     0     0.00     0.00  \n",
-       "111770     0     0.00     0.00  \n",
-       "111771     0     0.00     0.00  \n",
-       "111772     0     0.00     0.00  \n",
-       "111773     0     0.00     0.00  \n",
-       "111774     0     0.00     0.00  \n",
-       "111775     0     0.00     0.00  \n",
-       "111776     1    40.20    35.00  \n",
-       "111777     1    28.80    18.20  \n",
-       "111778     1    24.55    19.05  "
-      ]
-     },
-     "execution_count": 31,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.tail(20)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 33,
-   "id": "c04ff6fd",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>4870227</td>\n",
-       "      <td>6683</td>\n",
-       "      <td>20826.3</td>\n",
-       "      <td>22494.2</td>\n",
-       "      <td>4203</td>\n",
-       "      <td>713</td>\n",
-       "      <td>120</td>\n",
-       "      <td>24999.16</td>\n",
-       "      <td>713</td>\n",
-       "      <td>22634.54</td>\n",
-       "      <td>2504.96</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>11044282</td>\n",
-       "      <td>12491</td>\n",
-       "      <td>54555.6</td>\n",
-       "      <td>52748.6</td>\n",
-       "      <td>10122</td>\n",
-       "      <td>936</td>\n",
-       "      <td>729</td>\n",
-       "      <td>33179.45</td>\n",
-       "      <td>936</td>\n",
-       "      <td>13339.75</td>\n",
-       "      <td>5191.35</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>6482692</td>\n",
-       "      <td>2565</td>\n",
-       "      <td>53463.9</td>\n",
-       "      <td>20205.0</td>\n",
-       "      <td>5201</td>\n",
-       "      <td>939</td>\n",
-       "      <td>937</td>\n",
-       "      <td>36548.95</td>\n",
-       "      <td>939</td>\n",
-       "      <td>28492.45</td>\n",
-       "      <td>16720.25</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>11754986</td>\n",
-       "      <td>15769</td>\n",
-       "      <td>61421.8</td>\n",
-       "      <td>54622.1</td>\n",
-       "      <td>10728</td>\n",
-       "      <td>375</td>\n",
-       "      <td>318</td>\n",
-       "      <td>15315.40</td>\n",
-       "      <td>375</td>\n",
-       "      <td>13196.30</td>\n",
-       "      <td>9128.90</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "                 rnd    period   step  current_bid  current_ask  \\\n",
-       "current_bid_idx                                                   \n",
-       "0                  0   4870227   6683      20826.3      22494.2   \n",
-       "1                  0  11044282  12491      54555.6      52748.6   \n",
-       "2                  0   6482692   2565      53463.9      20205.0   \n",
-       "3                  0  11754986  15769      61421.8      54622.1   \n",
-       "\n",
-       "                 current_ask_idx  buy  sell     price  sale   bprofit  \\\n",
-       "current_bid_idx                                                         \n",
-       "0                           4203  713   120  24999.16   713  22634.54   \n",
-       "1                          10122  936   729  33179.45   936  13339.75   \n",
-       "2                           5201  939   937  36548.95   939  28492.45   \n",
-       "3                          10728  375   318  15315.40   375  13196.30   \n",
-       "\n",
-       "                  sprofit  \n",
-       "current_bid_idx            \n",
-       "0                 2504.96  \n",
-       "1                 5191.35  \n",
-       "2                16720.25  \n",
-       "3                 9128.90  "
-      ]
-     },
-     "execution_count": 33,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.step_data.tail(5000).groupby('current_bid_idx').sum()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 34,
-   "id": "d70f785e",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "array([[70.8, 68.2, 47.9, 27.2],\n",
-       "       [55.8, 52.2, 41.1, 28.4],\n",
-       "       [82.2, 64.3, 61.3, 20.4],\n",
-       "       [84.7, 33.1, 27.2, 26.2]])"
-      ]
-     },
-     "execution_count": 34,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "env.db.round_data.redemption_values.item()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 35,
-   "id": "01b4514e",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "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jR07FikpKfjf//6Hb7/91mWZjRs3ori4GED99ktD1PW4v/HGGwE4WrHVmAHH+msPPfQQAOCmm26q8rqpU6dClmUsWrTIuR9drSkzY8YMGAwGzJ492+XNG4vF4tHEqFGjRi5vrtSG2nX03KTl9OnTuPPOO12+5l//+hcURcGDDz5Y6SblkSNHnBfj3jJ16lQoioKHH3640vfo+PHjVRZHr05ZWRl+++23Ko9brVbnearid7FRo0bIzMx0eSz/61//QmxsLObOnetcY6wiRVHcJoWvvPJKpan3FUXB/fffD0VRKv19+f33311uW205qst4V/IejvmhGlUcGFhUVIS9e/c6F1Z85plnauy/GxkZibfffhuTJk3CBRdcUGmdn927d+PCCy+scmdv/PjxiIyMxMCBA9G6dWsIIfDrr79i8+bN6NOnT63Wh5EkCePHj8fbb7+NPXv2oEuXLnV636+//joOHjyIf//731i8eDGGDBmCxo0b48SJE9i3bx82b96MTz/9FG3atAEAXHvttfj888+xcuVKdO3aFWPHjoXVasWSJUvQr18/l3ffAEfr159//omLL764ygBO9Q/WuXf6XDly5Ah++OEHJCQkuF1QEXD0G581axa++uorvPbaa0hPT0evXr3QrVs3dO/eHS1atEB+fj5WrVqFjIwM3HXXXS4HZKuuvPJKrFixAuPHj8ewYcPwww8/oEePHg2uV9W1a1d07NgR69atg91udzvwvnPnzujSpUuldX5SU1Nx+eWX4/rrr69xO2PHjkX79u3x6aef4p9//sGAAQNw7NgxrFixAmPHjsUXX3xR5TWffPIJhg8fjptuugmvvvoqBgwYgNjYWPzzzz/YuXMndu/ejY0bN1bq5qMoCn744Qd07Nix1ms6zZo1C2vWrMGQIUOc61xs2bIFGzZscCagDTV48GDMnDkTr732Grp27VppP8bFxaFJkyYN3oanPf744/jjjz/w9ddfo0OHDhgzZgyioqJw/PhxfP/993j++eedF72PPfYYduzYgbfeegtff/01hg8fjmbNmuH06dM4ePAgfvvtN8ybN8850NkX56D//Oc/+PHHH/Hcc8/hjz/+wKBBg3Dy5El88cUXGD16NJYvX+7sjlkbBoMBS5cuxahRo3D55Zdj0KBB6NmzJ8LDw3H8+HFs3rwZhw8fxsmTJ50XYXXdL/VVn+N+8uTJWLFiBb744gt06dIF48aNgyRJzptvkyZNwpQpU6q8rkWLFrjooouwbt066PV6dOvWzWXrb6dOnbBw4ULceOON6NKlCy699FJ06NABVqsVx44dw6+//orExMR69R5w5eKLL8Znn32GK664Ar1794bBYMCFF15Y5aaXK/369cPgwYOxdOlSDBo0CEOGDMGpU6ewevVqdOzY0eWkH/feey+WL1+Or776Cr1798aoUaOQm5uLL774AhdeeCFWrlzpkfflygMPPIDly5fjs88+w/79+zFy5Ejk5eU5t13bY7ukpARDhgxBu3bt0KdPH7Rq1QqlpaVYu3Yt9u3bhyuvvBKdO3d2llfXNbr00ktx4YUXwmQyoUePHrjiiivQqFEjLFmyBOPHj8fAgQNx8cUXo0uXLpAkCcePH8fGjRuRlZXlcoze4MGD0bNnT0yaNAkxMTFYs2YNduzYgT59+uCBBx5wlnvuuefw448/4oILLkCbNm0QGRmJPXv2YPXq1YiLi8Ott97qmR1MDeO5ieMo2MDFFNc6nU4kJyeLK6+8Unz//fdVXuNqqmvV999/LwYPHizMZrOIjY0VV155pdi3b5/LqTXffPNNMW7cONGmTRthNptFXFyc6Nmzp5g/f77LaWHdUacjPncdDSHOTvX5008/uX19WVmZeO2118T5558voqOjhdFoFC1atBDDhw8XL730UpW1asrKysTcuXNFmzZthNFoFK1atRJz5swRpaWlbqc5VafDXbZsWZXn1Kk533nnnRrf65w5cwQAMXv27BrL3nLLLQKAePHFF0VOTo6YO3euuOiii0TTpk2F0WgUycnJYujQoeKTTz6pMk21u/fx008/icjISBEXFyf+/PPPOtdbHXU/fPvtt1WeU6eeLS0tFY888oho3bq1MBqNok2bNuKJJ55wOT2qu/dw7NgxMXHiRBEXFyfCwsJE3759xVdffeV2nR8hhMjPzxfz5s0TvXv3FhERESIsLEy0bt1ajB49WixYsEAUFhZWKr9mzRoBQLz00ku1fv9COKYqHzBggIiMjBQxMTHikksuEb/88ovb71x1U766O/YVRRGvvfaa6NSpkzAajaJJkyZi+vTpIjc3t9r6XHG3zo8r1Z03VO4+M6vVKl577TXRr18/ERERIcLDw0W7du3ELbfcUmWab0VRxKJFi8Tw4cNFXFyc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DIy6+ivvuPv9fj777DPWrl3LoUOHcDgctG3blptvvpnU1FSDI6/ejvd6L+29997jhx9+YPDgwVx99dWVHGnNJzM/p2DZsmV89NFH9OvXjwkTJtCoUSPGjx9PTk6O0aHVWJs2beKKK65g/PjxjB07lkAgwFNPPYXb7TY6tKixfft2FixYQKNGjYwOpcbLz8/n0UcfxWKxMGbMGF5++WUGDRpEXFyc0aHVaHPmzGHBggUMGzaMl19+mQEDBvDll18yf/58o0OrUTweD40bN2bYsGHHvH/u3LnMnz+fW2+9laeffhq73c748ePxer2VHGnNUt5x93q97Nq1i759+zJhwgTuv/9+9u3bx3PPPWdApDXL8V7vxVauXMmff/5JSkpKJUUWfWTm5xR89dVXXHrppVxyySUA3HrrraxZs4ZFixbRp08fY4OroR555JGQ70eMGMHw4cPZuXMnrVq1Miiq6OF2u3n99df5z3/+w6xZs4wOp8abO3cuaWlp3HnnncHbateubWBE0WHbtm20b9+e8847D9CP+dKlS9m+fbvBkdUs7dq1o127dse8T9M0vvnmG6677jo6dOgAwF133cWtt97KqlWr6Ny5c2WGWqOUd9wdDgePPvpoyG1Dhw5lzJgxZGRkkJ6eXhkh1kjlHfdiWVlZTJ48mUceeYRnn322kiKLPjLzc5L8fj87d+6kbdu2wdtMJhNt27Zl27ZtBkYWXQoLCwGIj483OJLo8P7779OuXTvOPvtso0OJCr/99htNmjThpZdeYvjw4YwaNYoffvjB6LBqvObNm7Nhwwb27dsHwO7du9m6detxT1xE+Bw6dAin0xnyXuNwOGjWrJl8xlaywsJCFEXB4XAYHUqNpqoqr7/+Or169eK0004zOpwaTWZ+TlJubi6qqpKcnBxye3JycvADU0SWqqpMmTKFFi1acPrppxsdTo33yy+/sGvXLp555hmjQ4kahw4dYsGCBVx99dVce+217Nixgw8++ACLxUL37t2NDq/G6tOnDy6Xi3vvvReTyYSqqtx444107drV6NCihtPpBCApKSnk9qSkpOB9IvK8Xi+ffPIJnTt3luQnwubOnYvZbOaqq64yOpQaT5IfUW1NmjSJPXv28OSTTxodSo2XkZHBlClTGDt2LDabzehwooaqqjRt2pSbb74ZgDPOOIO///6bBQsWSPITQcuXL2fp0qWMHDmS0047jd27dzNlyhRSUlLkuIuo4ff7efnllwEYPny4wdHUbDt37uSbb75hwoQJUlSlEkjyc5ISExMxmUxHXYFyOp1HzQaJ8Js0aRJr1qzhiSeeIC0tzehwarydO3eSk5PD6NGjg7epqsrmzZv59ttvmTZtGiaTrKINt5SUFBo2bBhyW8OGDVmxYoVBEUWHqVOn0rt37+C+ktNPP53Dhw8zZ84cSX4qSfHnaE5OTsjG75ycHBo3bmxMUFGkOPHJyMjgsccek1mfCNu8eTO5ubkh+ztVVeWjjz7im2++4c033zQwuppHkp+TZLFYaNKkCRs2bAiWKlRVlQ0bNnDllVcaHF3NpWkakydPZuXKlYwbN042f1eStm3b8sILL4Tc9vbbb1O/fn169+4tiU+EtGjR4qhltPv27aNWrVoGRRQdPB7PUa9pk8mEpmkGRRR9ateuTXJyMuvXrw8mO4WFhWzfvp3LL7/c2OBquOLE58CBAzz++OMkJCQYHVKN161bt5A95ADjx4+nW7duwaJaInwk+TkF11xzDW+++SZNmjShWbNmfPPNN3g8HrkyGEGTJk1i6dKljBo1itjY2ODMm8PhkOVYERQbG3vUviq73U5CQoLst4qgq6++mkcffZRZs2bRqVMntm/fzo8//shtt91mdGg12vnnn8+sWbNIT0+nYcOG7N69m6+++kpOQsLM7XZz4MCB4PeHDh1i9+7dxMfHk56eTs+ePZk1axb16tWjdu3afPbZZ6SkpASrv4mTU95xT05O5qWXXmLXrl2MHj0aVVWDn7Px8fFYLHLaeLKO93o/Msm0WCwkJydLH8MIUDS5lHVKvv32W7788kucTieNGzdmyJAhnHnmmUaHVWP179//mLffeeedknRWsnHjxtG4cWNpchphq1evZtq0aRw4cIDatWtz9dVX869//cvosGo0l8vF9OnTWblyJTk5OaSmptK5c2f69esnJ39htHHjRp544omjbr/44osZMWJEsMnpDz/8QGFhIS1btmTYsGFyMniKyjvu119/PXfdddcxf+7xxx+ndevWkQ6vxjre6/1II0aMoGfPntLkNAIk+RFCCCGEEEJEBVmoL4QQQgghhIgKkvwIIYQQQgghooIkP0IIIYQQQoioIMmPEEIIIYQQIipI8iOEEEIIIYSICpL8CCGEEEIIIaKCJD9CCCGEEEKIqCDJjxBCCCGEECIqSPIjhBBCCCGEiAqS/AghhBBCCCGigiQ/QgghhBBCiKggyY8QQgghhBAiKvw/5eCh8lawy7gAAAAASUVORK5CYII=\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 1)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 36,
-   "id": "89b2c239",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 3800)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 37,
-   "id": "53da2e54",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "image/png": "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MHHixEqvS0pKwqBBg/DLL79ApVKhU6dOTntt27Zti88++wx33303OnTogOHDh6N169YwGo1IT0/Htm3bEBcXV61ef2eGDBmCb775BqNHj0a3bt2gVqvRv3//Sl9oOdOzZ0/07dsXK1euRJ8+fdCvXz9kZWXhxx9/RJs2bZxOoPHoo49i9erV+O6779CtWzcMGzYM+fn5WL58Ofr374+1a9f65Pdy5vHHH8fq1avxzTff4MiRI7j22mtRUFBg37enx3ZZWRn69euHlJQUdO/eHc2aNYNOp8OmTZtw+PBhjBkzBu3atbPH29btGT58OPr374+goCB07twZo0ePRoMGDbBixQqMGzcOV111FYYMGYIOHTpAkiScPn0af/zxBy5cuOD0nri+ffuiS5cumDBhAiIjI7Fhwwb8/fff6N69Ox5//HF73KuvvorNmzfj6quvRvPmzREWFoZDhw7hxx9/RHR0NO677z7fNDBdHt9NsEa1CZxM86xUKkVCQoIYM2aM2LhxY6XXOJvu2Wbjxo2ib9++QqvViqioKDFmzBhx+PBhp9NLfvDBB+L6668XzZs3F1qtVkRHR4suXbqIefPmOZ0a1RXblLyXrhMhRPl0l1u2bHH5er1eL959913Ru3dvERERITQajUhKShKDBw8Wb775ZqW1WPR6vZgzZ45o3ry50Gg0olmzZuKpp54SOp3O5VSftilhV61aVek52/SUH3/8cZW/61NPPSUAiIcffrjK2HvvvVcAEPPnzxd5eXlizpw5YtCgQaJRo0ZCo9GIhIQEMWDAALF06dJKUzW7+j22bNkiwsLCRHR0tPjzzz+93q47tnb44YcfKj1nm35Vp9OJp59+WiQnJwuNRiOaN28uZs+e7XSKUFe/Q3p6urj55ptFdHS0CA4OFj169BDfffedy3VshBCisLBQzJ07V3Tr1k2EhoaK4OBgkZycLEaMGCEWLlwoiouLHeI3bNggAIg333zT499fCOt03b169RJhYWEiMjJSXHPNNeLXX391+ZlzN+2pq2PfYrGId999V7Rt21ZoNBqRmJgopk2bJvLz891uzxlX69g44+68YePqPTMajeLdd98VPXv2FKGhoSIkJESkpKSIe++9t9JU1xaLRSxevFgMHjxYREdHC7VaLRo1aiT69u0r5s6dK9LT0+2xNXEOEkKIM2fOiDvvvFPExsaK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HqDX66FQOL5EoVDY36z4+HhERUXhwIED9udLS0uRlpaG1q1b+yBdIiIiIiKiyrzqsenevTtWrlyJ2NhYNGnSBCdPnsS6deswaNAgANYutxEjRmDlypVITExEfHw8vvnmG0RHR6Nnz55++QX8SbNtG8IWLgS6dwceeUTudIiIiIiIyAWvCpu7774by5YtwyeffIKCggLExMTgmmuuwY033miPGTt2LPR6PRYuXIjS0lK0bdsWTz31FDQajc+T9zdFURGCt2wBSktZ2BARERERBTCvChutVovJkydj8uTJLmMkScKECRMwYcKEy81NduakJOv/nDwpax5EREREROSeV/fY1DcmW2GTlQWUlcmbDBERERERucTCxg0RGQlLeDgAQHXmjMzZEBERERGRKyxs3JEk+3A05enTMidDRERERESusLCpgr2wSU+XORMiIiIiInKFhU0VzElJQHQ0JINB7lSIiIiIiMgFFjZVKHzuOSA3FyX33Sd3KkRERERE5AILm6qovJoRm4iIiIiIZMDChoiIiIiIaj0WNlUxGIARIxDXvz+k4mK5syEiIiIiIidY2FRFowF27IAqLQ1KrmVDRERERBSQWNh4onlzAFzLhoiIiIgoULGw8URyMgBAxcKGiIiIiCggsbDxxMXChj02RERERESBiYWNJzgUjYiIiIgooLGw8QR7bIiIiIiIAhoLG080bw5LZCREeLjcmRARERERkRMquROoFdq3R9bhwxBCyJ0JERERERE5wR4bT0iS3BkQEREREZEbLGyIiIiIiKjWY2HjodB330XcwIEIWbRI7lSIiIiIiOgSLGw8pCgogDo1Fapjx+ROhYiIiIiILsHCxkPmpCQAnPKZiIiIiCgQsbDxkLlpUwCAioUNEREREVHAYWHjIVOTJgAu9thw2mciIiIiooDCwsZD5ouFjaK4GFJ+vrzJEBERERGRAxY2ntJqYY6PB8DhaEREREREgUYldwK1ibF9e1ji4gC9Xu5UiIiIiIioAhY2Xsj96iu5UyAiIiIiIic4FI2IiIiIiGo9FjZERERERFTrsbDxgurgQcQNHIjYESPkToWIiIiIiCrgPTZeECEhUKemwqLVWteykSS5UyIiIiIiIrDHxivmxo0hJAmKsjIoLlyQOx0iIiIiIrqIhY03goJgadgQAKDkWjZERERERAGDhY2XTElJAFjY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9erVC3RoNcrSpUv55JNP6NmzJ7fffnugw6nWMjMzmTdvHr///jtOp5O6desyZswYzj777ECHVm35fD4WLVrEDz/8gM1mIy4uji5dunDjjTeiKEqgw6s2tm/fzhdffMG+ffvIyspi3LhxXHjhhf7HVVVl0aJFrF27lvz8fFq1asXw4cNJTEwMYNSh70Tt7vF4WLBgAVu2bCE1NRWLxUK7du0YMmQIcXFxAY48tJ1sfy9p+vTprFmzhttuu41evXpVcaTVn/TYlOGnn35i7ty53HTTTbz00ks0btyYyZMnk52dHejQqq3t27fTo0cPJk+ezBNPPIHX6+W5557D4XAEOrQaY/fu3XzzzTc0btw40KFUe3l5eUycOBGDwcBjjz3G66+/zq233kpERESgQ6vWli5dyjfffMOwYcN4/fXXufnmm/niiy/46quvAh1ateJ0OmnSpAnDhg077uPLli3jq6++YsSIETz//POEhYUxefJkXC5XFUdavZyo3V0uF/v27ePGG2/kpZde4qGHHuLgwYNMmTIlAJFWLyfb34ts2LCBXbt2ERsbW0WR1TzSY1OGFStW0K1bN6688koARowYwebNm/nf//7H9ddfH9jgqqnHH3+81O2xY8cyfPhw9u7dS+vWrQMUVc3hcDh48803GTVqFEuWLAl0ONXesmXLiI+PZ8yYMf77ateuHcCIaoadO3fSoUMHzj//fEBr8x9//JHdu3cHOLLqpX379rRv3/64j6mqysqVK+nXrx8dO3YE4O6772bEiBFs3LiRSy+9tCpDrVZO1O4Wi4WJEyeWuu/OO+/kscceIz09nYSEhKoIsVo6UbsXyczMZNasWTz++OO8+OKLVRRZzSM9Nsfh8XjYu3cv7dq189+n0+lo164dO3fuDGBkNUtBQQEAkZGRAY6kZvjggw9o374955xzTqBDqRE2bdpE06ZNee211xg+fDjjx49nzZo1gQ6r2mvRogXbtm3j4MGDAKSkpLBjx46TnpSIipOamorNZit1rLFYLDRr1ky+Y6tYQUEBiqJgsVgCHUq15vP5ePPNN7nuuuto2LBhoMOp1qTH5jhycnLw+XzExMSUuj8mJsb/ZSgql8/nY86cObRs2ZJGjRoFOpxqb/369ezbt48XXngh0KHUGKmpqXzzzTf06tWLG264gT179jB79mwMBgNXXHFFoMOrtq6//nrsdjsPPPAAOp0On8/HoEGDuPzyywMdWo1hs9kAsFqtpe63Wq3+x0Tlc7lcfPzxx1x66aWS2FSyZcuWodfrufbaawMdSrUniY0ISjNnzuS///7jmWeeCXQo1V56ejpz5szhiSeewGQyBTqcGsPn83H22WczZMgQAM466yz+/fdfvvnmG0lsKtHPP//Mjz/+yL333kvDhg1JSUlhzpw5xMbGSruLGsPj8fD6668DMHz48ABHU73t3buXlStX8tJLL0mBkiogic1xREdHo9PpjrlyZLPZjunFERVv5syZbN68maeffpr4+PhAh1Pt7d27l+zsbB555BH/fT6fj+TkZL7++ms++eQTdDoZtVrRYmNjadCgQan7GjRowK+//hqgiGqGefPm0bdvX/88jkaNGpGWlsbSpUslsakiRd+j2dnZpSZRZ2dn06RJk8AEVYMUJTXp6ek8+eST0ltTyZKTk8nJySk1n9Ln8zF37lxWrlzJ22+/HcDoqh9JbI7DYDDQtGlTtm3b5i/X5/P52LZtG9dcc02Ao6u+VFVl1qxZbNiwgaeeekomUleRdu3a8corr5S6791336VevXr07dtXkppK0rJly2OGth48eJBatWoFKKKawel0HrNP63Q6VFUNUEQ1T+3atYmJiWHr1q3+RKagoIDdu3dz9dVXBza4aq4oqTl8+DCTJk0iKioq0CFVe507dy41Zxtg8uTJdO7c2V+gSlQcSWzK0Lt3b95++22aNm1Ks2bNWLlyJU6nU67oVaKZM2fy448/Mn78eMxms7/HzGKxyBCpSmQ2m4+ZxxQWFkZUVJTMb6pEvXr1YuLEiSxZsoRLLrmE3bt3s3btWkaOHBno0Kq1Cy64gCVLlpCQkECDBg1ISUlhxYoVcoJRwRwOB4cPH/bfTk1NJSUlhcjISBISEujZsydLliwhMTGR2rVrs2DBAmJjY/1V0sTpOVG7x8TE8Nprr7Fv3z4eeeQRfD6f/3s2MjISg0FOCU/Xyfb3oxNIg8FATEyMrNNXCRRVLlOV6euvv+aLL77AZrPRpEkT7rjjDpo3bx7osKqtAQMGHPf+MWPGSEJZxZ566imaNGkiC3RWst9++41PPvmEw4cPU7t2bXr16kX37t0DHVa1ZrfbWbhwIRs2bCA7O5u4uDguvfRSbrrpJjmxq0B//fUXTz/99DH3d+nShbFjx/oX6FyzZg0FBQW0atWKYcOGyYneGTpRu/fv35+77777uM+bNGkSbdq0qezwqq2T7e9HGzt2LD179pQFOiuBJDZCCCGEEEKIkCeD54UQQgghhBAhTxIbIYQQQgghRMiTxEYIIYQQQggR8iSxEUIIIYQQQoQ8SWyEEEIIIYQQIU8SGyGEEEIIIUTIk8RGCCGEEEIIEfIksRFCCCGEEEKEPElshBBCCCGEECFPEhshhBBCCCFEyJPERgghhBBCCBHyJLERQgghhBBChLz/AzQCKKXN4YXAAAAAAElFTkSuQmCC\n",
-      "text/plain": [
-       "<Figure size 1000x800 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
-   "source": [
-    "graph_period(env.db, 0, 6980)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "5b3a981d",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "def graph(demand_schedule, supply_schedule, P_grid, p_eqbm, q_eqbm, \n",
-    "                        period_bids, period_asks, period_prices, period_sales, \n",
-    "                        redemption_values, token_costs, ntokens, nbuyers, nsellers, nsteps):\n",
-    "    plt.plot(demand_schedule, P_grid, label = 'Demand Curve')\n",
-    "    plt.plot(supply_schedule, P_grid, label = 'Supply Curve')\n",
-    "    plt.plot(period_prices, color='green', linestyle='--', label='Mean Real Prices')\n",
-    "    plt.axhline(y=np.nanmean(p_eqbm), color='black', linestyle='--', label='Mean Eqbm Prices')\n",
-    "    prices = []\n",
-    "    print(nsteps)\n",
-    "    for i in range(nsteps):\n",
-    "        if (period_prices[i] >0):\n",
-    "            plt.scatter([period_sales[i]]*len(period_bids[i]), period_bids[i], s = 10, marker = 'x', c = 'red')\n",
-    "            plt.scatter([period_sales[i]]*len(period_asks[i]), period_asks[i], s = 10, marker = 'o', c = 'blue')\n",
-    "        else:\n",
-    "            pass  \n",
-    "    plt.legend()\n",
-    "    text_content = f'q*={q_eqbm}, mean(q)={np.round(np.nanmax(period_sales),1)},p*={np.round(p_eqbm,1)}, mean(p)={np.round(np.nanmean(period_prices),1)}'\n",
-    "    plt.title(text_content)\n",
-    "    plt.xlim(0,q_eqbm*1.2)\n",
-    "    plt.ylim(0,p_eqbm*3.0)\n",
-    "    plt.show()\n",
-    "    \n",
-    "    plt.plot(period_bids, c = 'r', linestyle='--')\n",
-    "    plt.plot(period_asks, c = 'b', linestyle='--')\n",
-    "    plt.scatter(range(nsteps), period_prices, c = 'g')\n",
-    "    plt.title('Bids (red), Asks (blue) and Prices (green) over trading steps')\n",
-    "    plt.show()\n",
-    "\n",
-    "def graph_period(db, rnd, period):\n",
-    "    period_bids = list(db.get_period(rnd, period).bids)\n",
-    "    period_asks = list(db.get_period(rnd, period).asks)\n",
-    "    period_prices = list(db.get_period(rnd, period).price)\n",
-    "    period_sales = np.cumsum(np.where(db.get_period(rnd, period).price > 0,1,0))\n",
-    "    [_, demand_schedule, supply_schedule, P_grid, redemption_values, token_costs, p_eqbm, q_eqbm] = db.get_round(rnd).iloc[0].tolist()\n",
-    "    graph(demand_schedule, supply_schedule, P_grid, p_eqbm, q_eqbm, period_bids, period_asks, period_prices, period_sales, redemption_values, token_costs, db.ntokens, db.nbuyers, db.nsellers, db.nsteps)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "03e53392",
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3 (ipykernel)",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.10.13"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 5
-}
diff --git a/code/3_deep_reinforcement_learning/9_DRL_comparisions.ipynb b/code/3_deep_reinforcement_learning/9_DRL_comparisions.ipynb
deleted file mode 100644
index 95cabfa..0000000
--- a/code/3_deep_reinforcement_learning/9_DRL_comparisions.ipynb
+++ /dev/null
@@ -1,2895 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "code",
-   "execution_count": 1,
-   "id": "00b60ace",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>Action Space Type</th>\n",
-       "      <th>Key Innovation</th>\n",
-       "      <th>On - Off Policy</th>\n",
-       "      <th>Value / Policy Based</th>\n",
-       "      <th>Year of Publication</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>REINFORCE</th>\n",
-       "      <td>Both</td>\n",
-       "      <td>Direct policy optimization with policy gradien...</td>\n",
-       "      <td>On</td>\n",
-       "      <td>Policy</td>\n",
-       "      <td>None</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>TRPO</th>\n",
-       "      <td>Both</td>\n",
-       "      <td>Trust region optimization for stable learning....</td>\n",
-       "      <td>On</td>\n",
-       "      <td>Policy</td>\n",
-       "      <td>None</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>PPO</th>\n",
-       "      <td>Both</td>\n",
-       "      <td>Clipped surrogate objective for stable learnin...</td>\n",
-       "      <td>On</td>\n",
-       "      <td>Policy</td>\n",
-       "      <td>None</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>A2C</th>\n",
-       "      <td>Both</td>\n",
-       "      <td>Combines actor and critic for efficient traini...</td>\n",
-       "      <td>On</td>\n",
-       "      <td>Both</td>\n",
-       "      <td>None</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>DQN</th>\n",
-       "      <td>Discrete</td>\n",
-       "      <td>Deep Q-network approximation of the Q-function...</td>\n",
-       "      <td>Off</td>\n",
-       "      <td>Value</td>\n",
-       "      <td>2015</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>DDPG</th>\n",
-       "      <td>Continuous</td>\n",
-       "      <td>Continuous action space extension of DQN. Adap...</td>\n",
-       "      <td>Off</td>\n",
-       "      <td>Both</td>\n",
-       "      <td>2016</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>A3C</th>\n",
-       "      <td>Both</td>\n",
-       "      <td>Asynchronous training of multiple agents. Para...</td>\n",
-       "      <td>On</td>\n",
-       "      <td>Both</td>\n",
-       "      <td>2016</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>SAC</th>\n",
-       "      <td>Continuous</td>\n",
-       "      <td>Entropy regularization for improved exploratio...</td>\n",
-       "      <td>Off</td>\n",
-       "      <td>Both</td>\n",
-       "      <td>2018</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>TD3</th>\n",
-       "      <td>Both</td>\n",
-       "      <td>Twin critics and delayed policy updates. Intro...</td>\n",
-       "      <td>On</td>\n",
-       "      <td>Both</td>\n",
-       "      <td>2018</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>D4PG</th>\n",
-       "      <td>Continuous</td>\n",
-       "      <td>Distributional value estimation with determini...</td>\n",
-       "      <td>Off</td>\n",
-       "      <td>Both</td>\n",
-       "      <td>2018</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>Q-Learning</th>\n",
-       "      <td>Discrete</td>\n",
-       "      <td>Value iteration with Q-value updates. Introduc...</td>\n",
-       "      <td>Off</td>\n",
-       "      <td>Value</td>\n",
-       "      <td>1957</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "           Action Space Type  \\\n",
-       "REINFORCE               Both   \n",
-       "TRPO                    Both   \n",
-       "PPO                     Both   \n",
-       "A2C                     Both   \n",
-       "DQN                 Discrete   \n",
-       "DDPG              Continuous   \n",
-       "A3C                     Both   \n",
-       "SAC               Continuous   \n",
-       "TD3                     Both   \n",
-       "D4PG              Continuous   \n",
-       "Q-Learning          Discrete   \n",
-       "\n",
-       "                                               Key Innovation On - Off Policy  \\\n",
-       "REINFORCE   Direct policy optimization with policy gradien...              On   \n",
-       "TRPO        Trust region optimization for stable learning....              On   \n",
-       "PPO         Clipped surrogate objective for stable learnin...              On   \n",
-       "A2C         Combines actor and critic for efficient traini...              On   \n",
-       "DQN         Deep Q-network approximation of the Q-function...             Off   \n",
-       "DDPG        Continuous action space extension of DQN. Adap...             Off   \n",
-       "A3C         Asynchronous training of multiple agents. Para...              On   \n",
-       "SAC         Entropy regularization for improved exploratio...             Off   \n",
-       "TD3         Twin critics and delayed policy updates. Intro...              On   \n",
-       "D4PG        Distributional value estimation with determini...             Off   \n",
-       "Q-Learning  Value iteration with Q-value updates. Introduc...             Off   \n",
-       "\n",
-       "           Value / Policy Based Year of Publication  \n",
-       "REINFORCE                Policy                None  \n",
-       "TRPO                     Policy                None  \n",
-       "PPO                      Policy                None  \n",
-       "A2C                        Both                None  \n",
-       "DQN                       Value                2015  \n",
-       "DDPG                       Both                2016  \n",
-       "A3C                        Both                2016  \n",
-       "SAC                        Both                2018  \n",
-       "TD3                        Both                2018  \n",
-       "D4PG                       Both                2018  \n",
-       "Q-Learning                Value                1957  "
-      ]
-     },
-     "execution_count": 1,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "import pandas as pd\n",
-    "\n",
-    "data = {\n",
-    "    \"Action Space Type\": [\"Both\", \"Both\", \"Both\", \"Both\", \"Discrete\", \"Continuous\", \"Both\", \"Continuous\", \"Both\", \"Continuous\", \"Discrete\"],\n",
-    "    \"Key Innovation\": [\n",
-    "        \"Direct policy optimization with policy gradient. Introduced the idea of optimizing the policy directly using gradient ascent. Enabled learning in high-dimensional action spaces.\",\n",
-    "        \"Trust region optimization for stable learning. Introduced trust region methods to stabilize policy updates and prevent large policy changes that could lead to divergence.\",\n",
-    "        \"Clipped surrogate objective for stable learning. Addressed issues with trust region methods by using a clipped surrogate objective, ensuring monotonic improvement.\",\n",
-    "        \"Combines actor and critic for efficient training. Utilizes both value and policy networks to improve sample efficiency and convergence speed.\",\n",
-    "        \"Deep Q-network approximation of the Q-function. Introduced deep neural networks to approximate the Q-function, making it possible to handle high-dimensional state spaces.\",\n",
-    "        \"Continuous action space extension of DQN. Adapted DQN for continuous action spaces using actor-critic architecture and deterministic policy gradients.\",\n",
-    "        \"Asynchronous training of multiple agents. Parallelizes training by having multiple agents interact with their environments asynchronously, improving data efficiency.\",\n",
-    "        \"Entropy regularization for improved exploration. Encourages exploration by adding an entropy term to the objective function, balancing exploration and exploitation.\",\n",
-    "        \"Twin critics and delayed policy updates. Introduced twin Q-networks to improve stability and utilized delayed policy updates for better performance.\",\n",
-    "        \"Distributional value estimation with deterministic policy gradients. Estimated value distributions instead of single values and combined them with deterministic policy gradients for improved learning.\",\n",
-    "        \"Value iteration with Q-value updates. Introduced the concept of Q-values and iteratively updates Q-values using the Bellman equation for value estimation.\"\n",
-    "    ],\n",
-    "    \"On - Off Policy\": [\"On\", \"On\", \"On\", \"On\", \"Off\", \"Off\", \"On\", \"Off\", \"On\", \"Off\", \"Off\"],\n",
-    "    \"Value / Policy Based\": [\"Policy\", \"Policy\", \"Policy\", \"Both\", \"Value\", \"Both\", \"Both\", \"Both\", \"Both\", \"Both\", \"Value\"],\n",
-    "    \"Year of Publication\": [None, None, None, None, \"2015\", \"2016\", \"2016\", \"2018\", \"2018\", \"2018\", \"1957\"]\n",
-    "}\n",
-    "\n",
-    "df = pd.DataFrame(data, index=[\"REINFORCE\", \"TRPO\", \"PPO\", \"A2C\", \"DQN\", \"DDPG\", \"A3C\", \"SAC\", \"TD3\", \"D4PG\", \"Q-Learning\"])\n",
-    "\n",
-    "df.head(11)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 30,
-   "id": "6ce0ea75",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "from gymnasium import spaces\n",
-    "import numpy as np\n",
-    "from functions import *\n",
-    "from itertools import count\n",
-    "buyer_strategies = ['Honest', 'Random', 'Random', 'Random']\n",
-    "seller_strategies = ['Honest', 'Honest', 'Honest', 'Honest', 'Honest','Honest', 'Honest', 'Honest', 'Honest', 'Honest']\n",
-    "nbuyers, nsellers = len(buyer_strategies), len(seller_strategies)\n",
-    "nrounds, nperiods, ntokens, nsteps, gametype, nbuyers, nsellers = 10, 10, 8, 30, '1234', len(buyer_strategies), len(seller_strategies)\n",
-    "R1, R2, R3, R4 = gametype_to_ran(gametype)\n",
-    "game_metadata = [nrounds, nperiods, ntokens, nbuyers, nsellers, nsteps, R1, R2, R3, R4]\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "rnd = 0\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "period = 0\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.01\n",
-    "max_frac = 1.0"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 31,
-   "id": "87aeeb4c",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "class TradingEnv(gym.Env):\n",
-    "    def __init__(self, db, nsteps, render_mode = None):\n",
-    "        self.rnd = 0\n",
-    "        self.period = -1\n",
-    "        self.nperiods = nperiods\n",
-    "        self.db = db\n",
-    "        self.action_space = spaces.Box(0,1,(1,),dtype=np.float)\n",
-    "        self.observation_space = spaces.Box(0,nsteps,(1,),dtype=np.float)\n",
-    "\n",
-    "    def reset(self,seed=None):\n",
-    "        #self.db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "        self.db.reset_period(self.rnd)\n",
-    "        self.timestep = 0\n",
-    "        self.period += 1\n",
-    "        observation = np.array([0])\n",
-    "        return observation, {}\n",
-    "\n",
-    "    def step(self, action, seed=None, options=None):\n",
-    "        [buyer.next_token() for buyer in self.db.buyers]\n",
-    "        [seller.next_token() for seller in self.db.sellers]\n",
-    "        bid_frac = action.item()\n",
-    "        # convert action to bid\n",
-    "        self.db.buyers[0].next_token()\n",
-    "        min_bid = self.db.buyers[0].value * min_frac\n",
-    "        max_bid = self.db.buyers[0].value * max_frac\n",
-    "        bid = np.round(max_bid * bid_frac + (1 - bid_frac) * min_bid, 2)\n",
-    "\n",
-    "        # simulate market\n",
-    "        bids = [buyer.bid(self.db) for buyer in self.db.buyers]\n",
-    "        bids[0] = bid\n",
-    "        asks = [seller.ask(self.db) for seller in self.db.sellers]\n",
-    "        current_ask, current_ask_idx, current_bid, current_bid_idx = current_bid_ask(bids, asks)\n",
-    "        sale, price, bprofit, sprofit, buy, sell = buy_sell(self.db, current_bid, current_bid_idx, current_ask, current_ask_idx)\n",
-    "        step_data = [self.rnd, self.period, self.timestep, bids, asks, current_bid, current_bid_idx, current_ask, current_ask_idx, buy, sell, price, sale, bprofit, sprofit]\n",
-    "        self.db.add_step(step_data)\n",
-    "\n",
-    "        # compute reward, new state\n",
-    "        reward = 0.0\n",
-    "        if sale == 1 and current_bid_idx == 0:\n",
-    "            reward = bprofit\n",
-    "        observation = np.array([self.timestep + 1])\n",
-    "\n",
-    "        # check termination\n",
-    "        self.timestep += 1\n",
-    "        if self.timestep == nsteps:\n",
-    "            terminated = True\n",
-    "            self.timestep = 0\n",
-    "        else:\n",
-    "            terminated = False\n",
-    "        infos = {\"TimeLimit.truncated\":True}\n",
-    "        truncated = False\n",
-    "        return observation, reward, terminated, truncated, infos"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 32,
-   "id": "313e5041",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "from stable_baselines3.common.env_checker import check_env\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "env = TradingEnv(db, nsteps)\n",
-    "check_env(env)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 33,
-   "id": "56d7618c",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "rnd = 0\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "env = TradingEnv(db, nsteps)\n",
-    "observation, info = env.reset()\n",
-    "for period in count():\n",
-    "    for timestep in count(): \n",
-    "        action = env.action_space.sample()\n",
-    "        observation, reward, done, info, _ = env.step(action)\n",
-    "        #print(f\"Rnd: {rnd}, Period: {period}, New State: {observation}, Action:{np.round(action,1)}, Reward: {np.round(reward,1)}, Period End: {done}\")\n",
-    "        if done:\n",
-    "            # If the episode is done, reset the environment\n",
-    "            #print('done')\n",
-    "            observation, info = env.reset()\n",
-    "            break\n",
-    "    if period == nperiods:\n",
-    "        period = 0\n",
-    "        break\n",
-    "env.close()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 34,
-   "id": "8540088f",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>166</td>\n",
-       "      <td>435</td>\n",
-       "      <td>1814.99</td>\n",
-       "      <td>1157.7</td>\n",
-       "      <td>157</td>\n",
-       "      <td>33</td>\n",
-       "      <td>29</td>\n",
-       "      <td>1430.115</td>\n",
-       "      <td>33</td>\n",
-       "      <td>695.085</td>\n",
-       "      <td>354.215</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>549</td>\n",
-       "      <td>1857</td>\n",
-       "      <td>4670.10</td>\n",
-       "      <td>3891.7</td>\n",
-       "      <td>565</td>\n",
-       "      <td>66</td>\n",
-       "      <td>51</td>\n",
-       "      <td>2799.550</td>\n",
-       "      <td>66</td>\n",
-       "      <td>1016.350</td>\n",
-       "      <td>594.350</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>496</td>\n",
-       "      <td>1480</td>\n",
-       "      <td>5376.20</td>\n",
-       "      <td>3386.1</td>\n",
-       "      <td>573</td>\n",
-       "      <td>56</td>\n",
-       "      <td>55</td>\n",
-       "      <td>2648.800</td>\n",
-       "      <td>56</td>\n",
-       "      <td>1758.400</td>\n",
-       "      <td>1149.500</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>439</td>\n",
-       "      <td>1013</td>\n",
-       "      <td>4896.80</td>\n",
-       "      <td>2661.7</td>\n",
-       "      <td>368</td>\n",
-       "      <td>66</td>\n",
-       "      <td>66</td>\n",
-       "      <td>3065.600</td>\n",
-       "      <td>66</td>\n",
-       "      <td>1977.900</td>\n",
-       "      <td>1223.800</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "                 rnd  period  step  current_bid  current_ask  current_ask_idx  \\\n",
-       "current_bid_idx                                                                 \n",
-       "0                  0     166   435      1814.99       1157.7              157   \n",
-       "1                  0     549  1857      4670.10       3891.7              565   \n",
-       "2                  0     496  1480      5376.20       3386.1              573   \n",
-       "3                  0     439  1013      4896.80       2661.7              368   \n",
-       "\n",
-       "                 buy  sell     price  sale   bprofit   sprofit  \n",
-       "current_bid_idx                                                 \n",
-       "0                 33    29  1430.115    33   695.085   354.215  \n",
-       "1                 66    51  2799.550    66  1016.350   594.350  \n",
-       "2                 56    55  2648.800    56  1758.400  1149.500  \n",
-       "3                 66    66  3065.600    66  1977.900  1223.800  "
-      ]
-     },
-     "execution_count": 34,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "db.step_data.head(1000).groupby('current_bid_idx').sum()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 35,
-   "id": "ef7b34a2",
-   "metadata": {
-    "scrolled": true
-   },
-   "outputs": [],
-   "source": [
-    "# Define your environment and parameters (replace with your actual environment setup)\n",
-    "rnd = 0\n",
-    "period = 0\n",
-    "num_states = nsteps\n",
-    "min_frac = 0.01\n",
-    "max_frac = 1.5\n",
-    "eval_steps = 1000\n",
-    "training_step = 50000"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 36,
-   "id": "29040eda",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "import gymnasium as gym\n",
-    "import numpy as np\n",
-    "from stable_baselines3 import PPO, A2C, DQN, SAC\n",
-    "from stable_baselines3.ppo.policies import MlpPolicy\n",
-    "from stable_baselines3.common.base_class import BaseAlgorithm\n",
-    "from stable_baselines3.common.evaluation import evaluate_policy"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "e8ad71ec",
-   "metadata": {},
-   "source": [
-    "### Continous Action Space"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 37,
-   "id": "e856dcad",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Using cpu device\n",
-       "</pre>\n"
-      ],
-      "text/plain": [
-       "Using cpu device\n"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Wrapping the env with a `Monitor` wrapper\n",
-       "</pre>\n"
-      ],
-      "text/plain": [
-       "Wrapping the env with a `Monitor` wrapper\n"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Wrapping the env in a DummyVecEnv.\n",
-       "</pre>\n"
-      ],
-      "text/plain": [
-       "Wrapping the env in a DummyVecEnv.\n"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n"
-      ],
-      "text/plain": []
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
-       "</pre>\n"
-      ],
-      "text/plain": [
-       "\n"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "ename": "LiveError",
-     "evalue": "Only one live display may be active at once",
-     "output_type": "error",
-     "traceback": [
-      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
-      "\u001b[0;31mLiveError\u001b[0m                                 Traceback (most recent call last)",
-      "Cell \u001b[0;32mIn [37], line 7\u001b[0m\n\u001b[1;32m      5\u001b[0m policy_kwargs \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mdict\u001b[39m(net_arch\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mdict\u001b[39m(pi\u001b[38;5;241m=\u001b[39m[\u001b[38;5;241m128\u001b[39m, \u001b[38;5;241m128\u001b[39m], qf\u001b[38;5;241m=\u001b[39m[\u001b[38;5;241m128\u001b[39m, \u001b[38;5;241m128\u001b[39m]))\n\u001b[1;32m      6\u001b[0m model \u001b[38;5;241m=\u001b[39m SAC(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mMlpPolicy\u001b[39m\u001b[38;5;124m\"\u001b[39m, env, policy_kwargs\u001b[38;5;241m=\u001b[39mpolicy_kwargs, verbose\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1\u001b[39m,)\n\u001b[0;32m----> 7\u001b[0m \u001b[43mmodel\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlearn\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m50000\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mprogress_bar\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/sac/sac.py:307\u001b[0m, in \u001b[0;36mSAC.learn\u001b[0;34m(self, total_timesteps, callback, log_interval, tb_log_name, reset_num_timesteps, progress_bar)\u001b[0m\n\u001b[1;32m    298\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mlearn\u001b[39m(\n\u001b[1;32m    299\u001b[0m     \u001b[38;5;28mself\u001b[39m: SelfSAC,\n\u001b[1;32m    300\u001b[0m     total_timesteps: \u001b[38;5;28mint\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    305\u001b[0m     progress_bar: \u001b[38;5;28mbool\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mFalse\u001b[39;00m,\n\u001b[1;32m    306\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m SelfSAC:\n\u001b[0;32m--> 307\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlearn\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    308\u001b[0m \u001b[43m        \u001b[49m\u001b[43mtotal_timesteps\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtotal_timesteps\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    309\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcallback\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcallback\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    310\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlog_interval\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlog_interval\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    311\u001b[0m \u001b[43m        \u001b[49m\u001b[43mtb_log_name\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtb_log_name\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    312\u001b[0m \u001b[43m        \u001b[49m\u001b[43mreset_num_timesteps\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mreset_num_timesteps\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    313\u001b[0m \u001b[43m        \u001b[49m\u001b[43mprogress_bar\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mprogress_bar\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    314\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/common/off_policy_algorithm.py:309\u001b[0m, in \u001b[0;36mOffPolicyAlgorithm.learn\u001b[0;34m(self, total_timesteps, callback, log_interval, tb_log_name, reset_num_timesteps, progress_bar)\u001b[0m\n\u001b[1;32m    292\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mlearn\u001b[39m(\n\u001b[1;32m    293\u001b[0m     \u001b[38;5;28mself\u001b[39m: SelfOffPolicyAlgorithm,\n\u001b[1;32m    294\u001b[0m     total_timesteps: \u001b[38;5;28mint\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    299\u001b[0m     progress_bar: \u001b[38;5;28mbool\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mFalse\u001b[39;00m,\n\u001b[1;32m    300\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m SelfOffPolicyAlgorithm:\n\u001b[1;32m    301\u001b[0m     total_timesteps, callback \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_setup_learn(\n\u001b[1;32m    302\u001b[0m         total_timesteps,\n\u001b[1;32m    303\u001b[0m         callback,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    306\u001b[0m         progress_bar,\n\u001b[1;32m    307\u001b[0m     )\n\u001b[0;32m--> 309\u001b[0m     \u001b[43mcallback\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mon_training_start\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mlocals\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mglobals\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    311\u001b[0m     \u001b[38;5;28;01mwhile\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnum_timesteps \u001b[38;5;241m<\u001b[39m total_timesteps:\n\u001b[1;32m    312\u001b[0m         rollout \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcollect_rollouts(\n\u001b[1;32m    313\u001b[0m             \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39menv,\n\u001b[1;32m    314\u001b[0m             train_freq\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mtrain_freq,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    319\u001b[0m             log_interval\u001b[38;5;241m=\u001b[39mlog_interval,\n\u001b[1;32m    320\u001b[0m         )\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/common/callbacks.py:74\u001b[0m, in \u001b[0;36mBaseCallback.on_training_start\u001b[0;34m(self, locals_, globals_)\u001b[0m\n\u001b[1;32m     72\u001b[0m \u001b[38;5;66;03m# Update num_timesteps in case training was done before\u001b[39;00m\n\u001b[1;32m     73\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnum_timesteps \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mmodel\u001b[38;5;241m.\u001b[39mnum_timesteps\n\u001b[0;32m---> 74\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_on_training_start\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/common/callbacks.py:198\u001b[0m, in \u001b[0;36mCallbackList._on_training_start\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    196\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_on_training_start\u001b[39m(\u001b[38;5;28mself\u001b[39m) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m    197\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m callback \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcallbacks:\n\u001b[0;32m--> 198\u001b[0m         \u001b[43mcallback\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mon_training_start\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlocals\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mglobals\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/common/callbacks.py:74\u001b[0m, in \u001b[0;36mBaseCallback.on_training_start\u001b[0;34m(self, locals_, globals_)\u001b[0m\n\u001b[1;32m     72\u001b[0m \u001b[38;5;66;03m# Update num_timesteps in case training was done before\u001b[39;00m\n\u001b[1;32m     73\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnum_timesteps \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mmodel\u001b[38;5;241m.\u001b[39mnum_timesteps\n\u001b[0;32m---> 74\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_on_training_start\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/common/callbacks.py:682\u001b[0m, in \u001b[0;36mProgressBarCallback._on_training_start\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    679\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_on_training_start\u001b[39m(\u001b[38;5;28mself\u001b[39m) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m    680\u001b[0m     \u001b[38;5;66;03m# Initialize progress bar\u001b[39;00m\n\u001b[1;32m    681\u001b[0m     \u001b[38;5;66;03m# Remove timesteps that were done in previous training sessions\u001b[39;00m\n\u001b[0;32m--> 682\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mpbar \u001b[38;5;241m=\u001b[39m \u001b[43mtqdm\u001b[49m\u001b[43m(\u001b[49m\u001b[43mtotal\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlocals\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mtotal_timesteps\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m-\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mmodel\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mnum_timesteps\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/tqdm/rich.py:116\u001b[0m, in \u001b[0;36mtqdm_rich.__init__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    114\u001b[0m options\u001b[38;5;241m.\u001b[39msetdefault(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtransient\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mleave)\n\u001b[1;32m    115\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_prog \u001b[38;5;241m=\u001b[39m Progress(\u001b[38;5;241m*\u001b[39mprogress, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39moptions)\n\u001b[0;32m--> 116\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_prog\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[38;5;21;43m__enter__\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    117\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_task_id \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_prog\u001b[38;5;241m.\u001b[39madd_task(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdesc \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39md)\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/rich/progress.py:1161\u001b[0m, in \u001b[0;36mProgress.__enter__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1160\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m__enter__\u001b[39m(\u001b[38;5;28mself\u001b[39m) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mProgress\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[0;32m-> 1161\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mstart\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1162\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/rich/progress.py:1152\u001b[0m, in \u001b[0;36mProgress.start\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1150\u001b[0m \u001b[38;5;124;03m\"\"\"Start the progress display.\"\"\"\u001b[39;00m\n\u001b[1;32m   1151\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdisable:\n\u001b[0;32m-> 1152\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlive\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mstart\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrefresh\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/rich/live.py:113\u001b[0m, in \u001b[0;36mLive.start\u001b[0;34m(self, refresh)\u001b[0m\n\u001b[1;32m    111\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_started:\n\u001b[1;32m    112\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m\n\u001b[0;32m--> 113\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mconsole\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mset_live\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m    114\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_started \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[1;32m    115\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_screen:\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/rich/console.py:809\u001b[0m, in \u001b[0;36mConsole.set_live\u001b[0;34m(self, live)\u001b[0m\n\u001b[1;32m    807\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_lock:\n\u001b[1;32m    808\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_live \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m--> 809\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m errors\u001b[38;5;241m.\u001b[39mLiveError(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mOnly one live display may be active at once\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m    810\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_live \u001b[38;5;241m=\u001b[39m live\n",
-      "\u001b[0;31mLiveError\u001b[0m: Only one live display may be active at once"
-     ]
-    }
-   ],
-   "source": [
-    "from stable_baselines3 import SAC, DDPG, TD3, A2C, PPO\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "env = TradingEnv(db, nsteps)\n",
-    "policy_kwargs = dict(net_arch=dict(pi=[128, 128], qf=[128, 128]))\n",
-    "model = SAC(\"MlpPolicy\", env, policy_kwargs=policy_kwargs, verbose=1,)\n",
-    "model.learn(50000, progress_bar = True)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "63de39e3",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "db.step_data.head(16).groupby('current_bid_idx').sum()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 38,
-   "id": "52b6bcdb",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>current_bid_idx</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "Empty DataFrame\n",
-       "Columns: []\n",
-       "Index: []"
-      ]
-     },
-     "execution_count": 38,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "db.step_data.tail(16).groupby('current_bid_idx').sum()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 25,
-   "id": "6d8e20f0",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "array([[ 59.6,  48.9,  35.3,  18.7],\n",
-       "       [ 79. ,  66.7,  46.6,  34. ],\n",
-       "       [ 92.3,  60.3,  36.8,  24.1],\n",
-       "       [106.1,  79.4,  63.3,  35.9]])"
-      ]
-     },
-     "execution_count": 25,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "db.round_data.redemption_values.item()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 27,
-   "id": "1bf995d2",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>bids</th>\n",
-       "      <th>asks</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>[77.1, 66.7, 68.8, 60.4]</td>\n",
-       "      <td>[85.7, 47.5, 34.1, 49.4, 40.3, 36.4, 59.8, 50....</td>\n",
-       "      <td>77.10</td>\n",
-       "      <td>0</td>\n",
-       "      <td>27.5</td>\n",
-       "      <td>9</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>52.30</td>\n",
-       "      <td>1</td>\n",
-       "      <td>7.30</td>\n",
-       "      <td>24.80</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>1</td>\n",
-       "      <td>[41.28, 63.9, 76.3, 56.4]</td>\n",
-       "      <td>[85.7, 47.5, 34.1, 49.4, 40.3, 36.4, 59.8, 50....</td>\n",
-       "      <td>76.30</td>\n",
-       "      <td>2</td>\n",
-       "      <td>34.1</td>\n",
-       "      <td>2</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>55.20</td>\n",
-       "      <td>1</td>\n",
-       "      <td>37.10</td>\n",
-       "      <td>21.10</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>2</td>\n",
-       "      <td>[60.79, 70.7, 57.7, 55.4]</td>\n",
-       "      <td>[85.7, 47.5, 69.5, 49.4, 40.3, 36.4, 59.8, 50....</td>\n",
-       "      <td>70.70</td>\n",
-       "      <td>1</td>\n",
-       "      <td>36.4</td>\n",
-       "      <td>5</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>53.55</td>\n",
-       "      <td>1</td>\n",
-       "      <td>25.45</td>\n",
-       "      <td>17.15</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>3</td>\n",
-       "      <td>[37.68, 59.5, 59.0, 65.7]</td>\n",
-       "      <td>[85.7, 47.5, 69.5, 49.4, 40.3, 83.3, 59.8, 50....</td>\n",
-       "      <td>65.70</td>\n",
-       "      <td>3</td>\n",
-       "      <td>40.3</td>\n",
-       "      <td>4</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>53.00</td>\n",
-       "      <td>1</td>\n",
-       "      <td>53.10</td>\n",
-       "      <td>12.70</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>4</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>4</td>\n",
-       "      <td>[45.1, 35.3, 43.1, 64.3]</td>\n",
-       "      <td>[85.7, 47.5, 69.5, 49.4, 80.9, 83.3, 59.8, 50....</td>\n",
-       "      <td>64.30</td>\n",
-       "      <td>3</td>\n",
-       "      <td>45.8</td>\n",
-       "      <td>9</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>55.05</td>\n",
-       "      <td>1</td>\n",
-       "      <td>24.35</td>\n",
-       "      <td>9.25</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>5</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>5</td>\n",
-       "      <td>[69.72, 64.2, 44.1, 33.8]</td>\n",
-       "      <td>[85.7, 47.5, 69.5, 49.4, 80.9, 83.3, 59.8, 50....</td>\n",
-       "      <td>69.72</td>\n",
-       "      <td>0</td>\n",
-       "      <td>47.5</td>\n",
-       "      <td>1</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>58.61</td>\n",
-       "      <td>1</td>\n",
-       "      <td>-9.71</td>\n",
-       "      <td>11.11</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>6</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>6</td>\n",
-       "      <td>[12.93, 36.2, 38.5, 57.9]</td>\n",
-       "      <td>[85.7, 79.5, 69.5, 49.4, 80.9, 83.3, 59.8, 50....</td>\n",
-       "      <td>57.90</td>\n",
-       "      <td>3</td>\n",
-       "      <td>49.4</td>\n",
-       "      <td>3</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>53.65</td>\n",
-       "      <td>1</td>\n",
-       "      <td>9.65</td>\n",
-       "      <td>4.25</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>7</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>7</td>\n",
-       "      <td>[28.59, 57.1, 57.8, 31.2]</td>\n",
-       "      <td>[85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 50....</td>\n",
-       "      <td>57.80</td>\n",
-       "      <td>2</td>\n",
-       "      <td>50.0</td>\n",
-       "      <td>7</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>53.90</td>\n",
-       "      <td>1</td>\n",
-       "      <td>6.40</td>\n",
-       "      <td>3.90</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>8</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>8</td>\n",
-       "      <td>[19.5, 66.5, 32.0, 30.0]</td>\n",
-       "      <td>[85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 62....</td>\n",
-       "      <td>66.50</td>\n",
-       "      <td>1</td>\n",
-       "      <td>59.2</td>\n",
-       "      <td>8</td>\n",
-       "      <td>True</td>\n",
-       "      <td>True</td>\n",
-       "      <td>62.85</td>\n",
-       "      <td>1</td>\n",
-       "      <td>3.85</td>\n",
-       "      <td>3.65</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>9</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>9</td>\n",
-       "      <td>[35.85, 39.7, 25.0, 25.3]</td>\n",
-       "      <td>[85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 62....</td>\n",
-       "      <td>39.70</td>\n",
-       "      <td>1</td>\n",
-       "      <td>59.8</td>\n",
-       "      <td>6</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>10</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>10</td>\n",
-       "      <td>[4.83, 41.5, 28.6, 27.1]</td>\n",
-       "      <td>[85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 62....</td>\n",
-       "      <td>41.50</td>\n",
-       "      <td>1</td>\n",
-       "      <td>59.8</td>\n",
-       "      <td>6</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>11</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>11</td>\n",
-       "      <td>[46.83, 46.4, 36.7, 27.7]</td>\n",
-       "      <td>[85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 62....</td>\n",
-       "      <td>46.83</td>\n",
-       "      <td>0</td>\n",
-       "      <td>59.8</td>\n",
-       "      <td>6</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>12</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>12</td>\n",
-       "      <td>[36.35, 35.5, 23.5, 33.2]</td>\n",
-       "      <td>[85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 62....</td>\n",
-       "      <td>36.35</td>\n",
-       "      <td>0</td>\n",
-       "      <td>59.8</td>\n",
-       "      <td>6</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>13</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>13</td>\n",
-       "      <td>[15.6, 46.3, 18.5, 32.0]</td>\n",
-       "      <td>[85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 62....</td>\n",
-       "      <td>46.30</td>\n",
-       "      <td>1</td>\n",
-       "      <td>59.8</td>\n",
-       "      <td>6</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>14</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>14</td>\n",
-       "      <td>[18.63, 43.4, 18.5, 28.5]</td>\n",
-       "      <td>[85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 62....</td>\n",
-       "      <td>43.40</td>\n",
-       "      <td>1</td>\n",
-       "      <td>59.8</td>\n",
-       "      <td>6</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>15</th>\n",
-       "      <td>0</td>\n",
-       "      <td>0</td>\n",
-       "      <td>15</td>\n",
-       "      <td>[21.51, 40.3, 28.5, 25.4]</td>\n",
-       "      <td>[85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 62....</td>\n",
-       "      <td>40.30</td>\n",
-       "      <td>1</td>\n",
-       "      <td>59.8</td>\n",
-       "      <td>6</td>\n",
-       "      <td>False</td>\n",
-       "      <td>False</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0</td>\n",
-       "      <td>0.00</td>\n",
-       "      <td>0.00</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "    rnd  period  step                       bids  \\\n",
-       "0     0       0     0   [77.1, 66.7, 68.8, 60.4]   \n",
-       "1     0       0     1  [41.28, 63.9, 76.3, 56.4]   \n",
-       "2     0       0     2  [60.79, 70.7, 57.7, 55.4]   \n",
-       "3     0       0     3  [37.68, 59.5, 59.0, 65.7]   \n",
-       "4     0       0     4   [45.1, 35.3, 43.1, 64.3]   \n",
-       "5     0       0     5  [69.72, 64.2, 44.1, 33.8]   \n",
-       "6     0       0     6  [12.93, 36.2, 38.5, 57.9]   \n",
-       "7     0       0     7  [28.59, 57.1, 57.8, 31.2]   \n",
-       "8     0       0     8   [19.5, 66.5, 32.0, 30.0]   \n",
-       "9     0       0     9  [35.85, 39.7, 25.0, 25.3]   \n",
-       "10    0       0    10   [4.83, 41.5, 28.6, 27.1]   \n",
-       "11    0       0    11  [46.83, 46.4, 36.7, 27.7]   \n",
-       "12    0       0    12  [36.35, 35.5, 23.5, 33.2]   \n",
-       "13    0       0    13   [15.6, 46.3, 18.5, 32.0]   \n",
-       "14    0       0    14  [18.63, 43.4, 18.5, 28.5]   \n",
-       "15    0       0    15  [21.51, 40.3, 28.5, 25.4]   \n",
-       "\n",
-       "                                                 asks  current_bid  \\\n",
-       "0   [85.7, 47.5, 34.1, 49.4, 40.3, 36.4, 59.8, 50....        77.10   \n",
-       "1   [85.7, 47.5, 34.1, 49.4, 40.3, 36.4, 59.8, 50....        76.30   \n",
-       "2   [85.7, 47.5, 69.5, 49.4, 40.3, 36.4, 59.8, 50....        70.70   \n",
-       "3   [85.7, 47.5, 69.5, 49.4, 40.3, 83.3, 59.8, 50....        65.70   \n",
-       "4   [85.7, 47.5, 69.5, 49.4, 80.9, 83.3, 59.8, 50....        64.30   \n",
-       "5   [85.7, 47.5, 69.5, 49.4, 80.9, 83.3, 59.8, 50....        69.72   \n",
-       "6   [85.7, 79.5, 69.5, 49.4, 80.9, 83.3, 59.8, 50....        57.90   \n",
-       "7   [85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 50....        57.80   \n",
-       "8   [85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 62....        66.50   \n",
-       "9   [85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 62....        39.70   \n",
-       "10  [85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 62....        41.50   \n",
-       "11  [85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 62....        46.83   \n",
-       "12  [85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 62....        36.35   \n",
-       "13  [85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 62....        46.30   \n",
-       "14  [85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 62....        43.40   \n",
-       "15  [85.7, 79.5, 69.5, 61.1, 80.9, 83.3, 59.8, 62....        40.30   \n",
-       "\n",
-       "    current_bid_idx  current_ask  current_ask_idx    buy   sell  price  sale  \\\n",
-       "0                 0         27.5                9   True   True  52.30     1   \n",
-       "1                 2         34.1                2   True   True  55.20     1   \n",
-       "2                 1         36.4                5   True   True  53.55     1   \n",
-       "3                 3         40.3                4   True   True  53.00     1   \n",
-       "4                 3         45.8                9   True   True  55.05     1   \n",
-       "5                 0         47.5                1   True   True  58.61     1   \n",
-       "6                 3         49.4                3   True   True  53.65     1   \n",
-       "7                 2         50.0                7   True   True  53.90     1   \n",
-       "8                 1         59.2                8   True   True  62.85     1   \n",
-       "9                 1         59.8                6  False  False    NaN     0   \n",
-       "10                1         59.8                6  False  False    NaN     0   \n",
-       "11                0         59.8                6  False  False    NaN     0   \n",
-       "12                0         59.8                6  False  False    NaN     0   \n",
-       "13                1         59.8                6  False  False    NaN     0   \n",
-       "14                1         59.8                6  False  False    NaN     0   \n",
-       "15                1         59.8                6  False  False    NaN     0   \n",
-       "\n",
-       "    bprofit  sprofit  \n",
-       "0      7.30    24.80  \n",
-       "1     37.10    21.10  \n",
-       "2     25.45    17.15  \n",
-       "3     53.10    12.70  \n",
-       "4     24.35     9.25  \n",
-       "5     -9.71    11.11  \n",
-       "6      9.65     4.25  \n",
-       "7      6.40     3.90  \n",
-       "8      3.85     3.65  \n",
-       "9      0.00     0.00  \n",
-       "10     0.00     0.00  \n",
-       "11     0.00     0.00  \n",
-       "12     0.00     0.00  \n",
-       "13     0.00     0.00  \n",
-       "14     0.00     0.00  \n",
-       "15     0.00     0.00  "
-      ]
-     },
-     "execution_count": 27,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "db.step_data.head(16)"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "21eaf961",
-   "metadata": {},
-   "source": [
-    "### Discrete Action Spaces"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 75,
-   "id": "368e8ed7",
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Using cpu device\n",
-      "Wrapping the env with a `Monitor` wrapper\n",
-      "Wrapping the env in a DummyVecEnv.\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.13e+03 |\n",
-      "|    exploration_rate | 0.988     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 4         |\n",
-      "|    fps              | 169       |\n",
-      "|    time_elapsed     | 0         |\n",
-      "|    total_timesteps  | 64        |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.58e+03 |\n",
-      "|    exploration_rate | 0.976     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 8         |\n",
-      "|    fps              | 182       |\n",
-      "|    time_elapsed     | 0         |\n",
-      "|    total_timesteps  | 128       |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.43e+03 |\n",
-      "|    exploration_rate | 0.964     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 12        |\n",
-      "|    fps              | 183       |\n",
-      "|    time_elapsed     | 1         |\n",
-      "|    total_timesteps  | 192       |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.47e+03 |\n",
-      "|    exploration_rate | 0.951     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 16        |\n",
-      "|    fps              | 185       |\n",
-      "|    time_elapsed     | 1         |\n",
-      "|    total_timesteps  | 256       |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.42e+03 |\n",
-      "|    exploration_rate | 0.939     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 20        |\n",
-      "|    fps              | 186       |\n",
-      "|    time_elapsed     | 1         |\n",
-      "|    total_timesteps  | 320       |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.56e+03 |\n",
-      "|    exploration_rate | 0.927     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 24        |\n",
-      "|    fps              | 185       |\n",
-      "|    time_elapsed     | 2         |\n",
-      "|    total_timesteps  | 384       |\n",
-      "-----------------------------------\n",
-      "----------------------------------\n",
-      "| rollout/            |          |\n",
-      "|    ep_len_mean      | 16       |\n",
-      "|    ep_rew_mean      | -2.6e+03 |\n",
-      "|    exploration_rate | 0.915    |\n",
-      "| time/               |          |\n",
-      "|    episodes         | 28       |\n",
-      "|    fps              | 186      |\n",
-      "|    time_elapsed     | 2        |\n",
-      "|    total_timesteps  | 448      |\n",
-      "----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.63e+03 |\n",
-      "|    exploration_rate | 0.903     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 32        |\n",
-      "|    fps              | 181       |\n",
-      "|    time_elapsed     | 2         |\n",
-      "|    total_timesteps  | 512       |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.63e+03 |\n",
-      "|    exploration_rate | 0.891     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 36        |\n",
-      "|    fps              | 178       |\n",
-      "|    time_elapsed     | 3         |\n",
-      "|    total_timesteps  | 576       |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.67e+03 |\n",
-      "|    exploration_rate | 0.878     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 40        |\n",
-      "|    fps              | 173       |\n",
-      "|    time_elapsed     | 3         |\n",
-      "|    total_timesteps  | 640       |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.65e+03 |\n",
-      "|    exploration_rate | 0.866     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 44        |\n",
-      "|    fps              | 172       |\n",
-      "|    time_elapsed     | 4         |\n",
-      "|    total_timesteps  | 704       |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.62e+03 |\n",
-      "|    exploration_rate | 0.854     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 48        |\n",
-      "|    fps              | 172       |\n",
-      "|    time_elapsed     | 4         |\n",
-      "|    total_timesteps  | 768       |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.63e+03 |\n",
-      "|    exploration_rate | 0.842     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 52        |\n",
-      "|    fps              | 173       |\n",
-      "|    time_elapsed     | 4         |\n",
-      "|    total_timesteps  | 832       |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.61e+03 |\n",
-      "|    exploration_rate | 0.83      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 56        |\n",
-      "|    fps              | 169       |\n",
-      "|    time_elapsed     | 5         |\n",
-      "|    total_timesteps  | 896       |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.61e+03 |\n",
-      "|    exploration_rate | 0.818     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 60        |\n",
-      "|    fps              | 171       |\n",
-      "|    time_elapsed     | 5         |\n",
-      "|    total_timesteps  | 960       |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.62e+03 |\n",
-      "|    exploration_rate | 0.805     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 64        |\n",
-      "|    fps              | 172       |\n",
-      "|    time_elapsed     | 5         |\n",
-      "|    total_timesteps  | 1024      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.63e+03 |\n",
-      "|    exploration_rate | 0.793     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 68        |\n",
-      "|    fps              | 172       |\n",
-      "|    time_elapsed     | 6         |\n",
-      "|    total_timesteps  | 1088      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.64e+03 |\n",
-      "|    exploration_rate | 0.781     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 72        |\n",
-      "|    fps              | 172       |\n",
-      "|    time_elapsed     | 6         |\n",
-      "|    total_timesteps  | 1152      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.63e+03 |\n",
-      "|    exploration_rate | 0.769     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 76        |\n",
-      "|    fps              | 173       |\n",
-      "|    time_elapsed     | 7         |\n",
-      "|    total_timesteps  | 1216      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.62e+03 |\n",
-      "|    exploration_rate | 0.757     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 80        |\n",
-      "|    fps              | 171       |\n",
-      "|    time_elapsed     | 7         |\n",
-      "|    total_timesteps  | 1280      |\n",
-      "-----------------------------------\n",
-      "----------------------------------\n",
-      "| rollout/            |          |\n",
-      "|    ep_len_mean      | 16       |\n",
-      "|    ep_rew_mean      | -2.6e+03 |\n",
-      "|    exploration_rate | 0.745    |\n",
-      "| time/               |          |\n",
-      "|    episodes         | 84       |\n",
-      "|    fps              | 171      |\n",
-      "|    time_elapsed     | 7        |\n",
-      "|    total_timesteps  | 1344     |\n",
-      "----------------------------------\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.63e+03 |\n",
-      "|    exploration_rate | 0.732     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 88        |\n",
-      "|    fps              | 171       |\n",
-      "|    time_elapsed     | 8         |\n",
-      "|    total_timesteps  | 1408      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.66e+03 |\n",
-      "|    exploration_rate | 0.72      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 92        |\n",
-      "|    fps              | 171       |\n",
-      "|    time_elapsed     | 8         |\n",
-      "|    total_timesteps  | 1472      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.68e+03 |\n",
-      "|    exploration_rate | 0.708     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 96        |\n",
-      "|    fps              | 169       |\n",
-      "|    time_elapsed     | 9         |\n",
-      "|    total_timesteps  | 1536      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.69e+03 |\n",
-      "|    exploration_rate | 0.696     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 100       |\n",
-      "|    fps              | 169       |\n",
-      "|    time_elapsed     | 9         |\n",
-      "|    total_timesteps  | 1600      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.72e+03 |\n",
-      "|    exploration_rate | 0.684     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 104       |\n",
-      "|    fps              | 168       |\n",
-      "|    time_elapsed     | 9         |\n",
-      "|    total_timesteps  | 1664      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.73e+03 |\n",
-      "|    exploration_rate | 0.672     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 108       |\n",
-      "|    fps              | 169       |\n",
-      "|    time_elapsed     | 10        |\n",
-      "|    total_timesteps  | 1728      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.71e+03 |\n",
-      "|    exploration_rate | 0.66      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 112       |\n",
-      "|    fps              | 168       |\n",
-      "|    time_elapsed     | 10        |\n",
-      "|    total_timesteps  | 1792      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.71e+03 |\n",
-      "|    exploration_rate | 0.647     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 116       |\n",
-      "|    fps              | 168       |\n",
-      "|    time_elapsed     | 11        |\n",
-      "|    total_timesteps  | 1856      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.77e+03 |\n",
-      "|    exploration_rate | 0.635     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 120       |\n",
-      "|    fps              | 167       |\n",
-      "|    time_elapsed     | 11        |\n",
-      "|    total_timesteps  | 1920      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.77e+03 |\n",
-      "|    exploration_rate | 0.623     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 124       |\n",
-      "|    fps              | 167       |\n",
-      "|    time_elapsed     | 11        |\n",
-      "|    total_timesteps  | 1984      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.77e+03 |\n",
-      "|    exploration_rate | 0.611     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 128       |\n",
-      "|    fps              | 167       |\n",
-      "|    time_elapsed     | 12        |\n",
-      "|    total_timesteps  | 2048      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.76e+03 |\n",
-      "|    exploration_rate | 0.599     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 132       |\n",
-      "|    fps              | 167       |\n",
-      "|    time_elapsed     | 12        |\n",
-      "|    total_timesteps  | 2112      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.76e+03 |\n",
-      "|    exploration_rate | 0.587     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 136       |\n",
-      "|    fps              | 167       |\n",
-      "|    time_elapsed     | 12        |\n",
-      "|    total_timesteps  | 2176      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.76e+03 |\n",
-      "|    exploration_rate | 0.574     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 140       |\n",
-      "|    fps              | 168       |\n",
-      "|    time_elapsed     | 13        |\n",
-      "|    total_timesteps  | 2240      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.77e+03 |\n",
-      "|    exploration_rate | 0.562     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 144       |\n",
-      "|    fps              | 167       |\n",
-      "|    time_elapsed     | 13        |\n",
-      "|    total_timesteps  | 2304      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.79e+03 |\n",
-      "|    exploration_rate | 0.55      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 148       |\n",
-      "|    fps              | 167       |\n",
-      "|    time_elapsed     | 14        |\n",
-      "|    total_timesteps  | 2368      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.76e+03 |\n",
-      "|    exploration_rate | 0.538     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 152       |\n",
-      "|    fps              | 167       |\n",
-      "|    time_elapsed     | 14        |\n",
-      "|    total_timesteps  | 2432      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.78e+03 |\n",
-      "|    exploration_rate | 0.526     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 156       |\n",
-      "|    fps              | 165       |\n",
-      "|    time_elapsed     | 15        |\n",
-      "|    total_timesteps  | 2496      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.78e+03 |\n",
-      "|    exploration_rate | 0.514     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 160       |\n",
-      "|    fps              | 165       |\n",
-      "|    time_elapsed     | 15        |\n",
-      "|    total_timesteps  | 2560      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.78e+03 |\n",
-      "|    exploration_rate | 0.501     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 164       |\n",
-      "|    fps              | 165       |\n",
-      "|    time_elapsed     | 15        |\n",
-      "|    total_timesteps  | 2624      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.77e+03 |\n",
-      "|    exploration_rate | 0.489     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 168       |\n",
-      "|    fps              | 165       |\n",
-      "|    time_elapsed     | 16        |\n",
-      "|    total_timesteps  | 2688      |\n",
-      "-----------------------------------\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.77e+03 |\n",
-      "|    exploration_rate | 0.477     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 172       |\n",
-      "|    fps              | 165       |\n",
-      "|    time_elapsed     | 16        |\n",
-      "|    total_timesteps  | 2752      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.77e+03 |\n",
-      "|    exploration_rate | 0.465     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 176       |\n",
-      "|    fps              | 165       |\n",
-      "|    time_elapsed     | 17        |\n",
-      "|    total_timesteps  | 2816      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.78e+03 |\n",
-      "|    exploration_rate | 0.453     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 180       |\n",
-      "|    fps              | 165       |\n",
-      "|    time_elapsed     | 17        |\n",
-      "|    total_timesteps  | 2880      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.83e+03 |\n",
-      "|    exploration_rate | 0.441     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 184       |\n",
-      "|    fps              | 165       |\n",
-      "|    time_elapsed     | 17        |\n",
-      "|    total_timesteps  | 2944      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.75e+03 |\n",
-      "|    exploration_rate | 0.428     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 188       |\n",
-      "|    fps              | 165       |\n",
-      "|    time_elapsed     | 18        |\n",
-      "|    total_timesteps  | 3008      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.71e+03 |\n",
-      "|    exploration_rate | 0.416     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 192       |\n",
-      "|    fps              | 165       |\n",
-      "|    time_elapsed     | 18        |\n",
-      "|    total_timesteps  | 3072      |\n",
-      "-----------------------------------\n",
-      "----------------------------------\n",
-      "| rollout/            |          |\n",
-      "|    ep_len_mean      | 16       |\n",
-      "|    ep_rew_mean      | -2.7e+03 |\n",
-      "|    exploration_rate | 0.404    |\n",
-      "| time/               |          |\n",
-      "|    episodes         | 196      |\n",
-      "|    fps              | 165      |\n",
-      "|    time_elapsed     | 18       |\n",
-      "|    total_timesteps  | 3136     |\n",
-      "----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.68e+03 |\n",
-      "|    exploration_rate | 0.392     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 200       |\n",
-      "|    fps              | 166       |\n",
-      "|    time_elapsed     | 19        |\n",
-      "|    total_timesteps  | 3200      |\n",
-      "-----------------------------------\n",
-      "----------------------------------\n",
-      "| rollout/            |          |\n",
-      "|    ep_len_mean      | 16       |\n",
-      "|    ep_rew_mean      | -2.7e+03 |\n",
-      "|    exploration_rate | 0.38     |\n",
-      "| time/               |          |\n",
-      "|    episodes         | 204      |\n",
-      "|    fps              | 166      |\n",
-      "|    time_elapsed     | 19       |\n",
-      "|    total_timesteps  | 3264     |\n",
-      "----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.71e+03 |\n",
-      "|    exploration_rate | 0.368     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 208       |\n",
-      "|    fps              | 167       |\n",
-      "|    time_elapsed     | 19        |\n",
-      "|    total_timesteps  | 3328      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.77e+03 |\n",
-      "|    exploration_rate | 0.356     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 212       |\n",
-      "|    fps              | 167       |\n",
-      "|    time_elapsed     | 20        |\n",
-      "|    total_timesteps  | 3392      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.78e+03 |\n",
-      "|    exploration_rate | 0.343     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 216       |\n",
-      "|    fps              | 167       |\n",
-      "|    time_elapsed     | 20        |\n",
-      "|    total_timesteps  | 3456      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.73e+03 |\n",
-      "|    exploration_rate | 0.331     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 220       |\n",
-      "|    fps              | 167       |\n",
-      "|    time_elapsed     | 21        |\n",
-      "|    total_timesteps  | 3520      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.73e+03 |\n",
-      "|    exploration_rate | 0.319     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 224       |\n",
-      "|    fps              | 166       |\n",
-      "|    time_elapsed     | 21        |\n",
-      "|    total_timesteps  | 3584      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.75e+03 |\n",
-      "|    exploration_rate | 0.307     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 228       |\n",
-      "|    fps              | 166       |\n",
-      "|    time_elapsed     | 21        |\n",
-      "|    total_timesteps  | 3648      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.77e+03 |\n",
-      "|    exploration_rate | 0.295     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 232       |\n",
-      "|    fps              | 166       |\n",
-      "|    time_elapsed     | 22        |\n",
-      "|    total_timesteps  | 3712      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.72e+03 |\n",
-      "|    exploration_rate | 0.283     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 236       |\n",
-      "|    fps              | 166       |\n",
-      "|    time_elapsed     | 22        |\n",
-      "|    total_timesteps  | 3776      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.75e+03 |\n",
-      "|    exploration_rate | 0.27      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 240       |\n",
-      "|    fps              | 166       |\n",
-      "|    time_elapsed     | 23        |\n",
-      "|    total_timesteps  | 3840      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.75e+03 |\n",
-      "|    exploration_rate | 0.258     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 244       |\n",
-      "|    fps              | 166       |\n",
-      "|    time_elapsed     | 23        |\n",
-      "|    total_timesteps  | 3904      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.75e+03 |\n",
-      "|    exploration_rate | 0.246     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 248       |\n",
-      "|    fps              | 166       |\n",
-      "|    time_elapsed     | 23        |\n",
-      "|    total_timesteps  | 3968      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.75e+03 |\n",
-      "|    exploration_rate | 0.234     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 252       |\n",
-      "|    fps              | 166       |\n",
-      "|    time_elapsed     | 24        |\n",
-      "|    total_timesteps  | 4032      |\n",
-      "-----------------------------------\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.79e+03 |\n",
-      "|    exploration_rate | 0.222     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 256       |\n",
-      "|    fps              | 166       |\n",
-      "|    time_elapsed     | 24        |\n",
-      "|    total_timesteps  | 4096      |\n",
-      "-----------------------------------\n",
-      "----------------------------------\n",
-      "| rollout/            |          |\n",
-      "|    ep_len_mean      | 16       |\n",
-      "|    ep_rew_mean      | -2.8e+03 |\n",
-      "|    exploration_rate | 0.21     |\n",
-      "| time/               |          |\n",
-      "|    episodes         | 260      |\n",
-      "|    fps              | 165      |\n",
-      "|    time_elapsed     | 25       |\n",
-      "|    total_timesteps  | 4160     |\n",
-      "----------------------------------\n",
-      "----------------------------------\n",
-      "| rollout/            |          |\n",
-      "|    ep_len_mean      | 16       |\n",
-      "|    ep_rew_mean      | -2.8e+03 |\n",
-      "|    exploration_rate | 0.197    |\n",
-      "| time/               |          |\n",
-      "|    episodes         | 264      |\n",
-      "|    fps              | 165      |\n",
-      "|    time_elapsed     | 25       |\n",
-      "|    total_timesteps  | 4224     |\n",
-      "----------------------------------\n",
-      "----------------------------------\n",
-      "| rollout/            |          |\n",
-      "|    ep_len_mean      | 16       |\n",
-      "|    ep_rew_mean      | -2.8e+03 |\n",
-      "|    exploration_rate | 0.185    |\n",
-      "| time/               |          |\n",
-      "|    episodes         | 268      |\n",
-      "|    fps              | 165      |\n",
-      "|    time_elapsed     | 25       |\n",
-      "|    total_timesteps  | 4288     |\n",
-      "----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.79e+03 |\n",
-      "|    exploration_rate | 0.173     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 272       |\n",
-      "|    fps              | 165       |\n",
-      "|    time_elapsed     | 26        |\n",
-      "|    total_timesteps  | 4352      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.81e+03 |\n",
-      "|    exploration_rate | 0.161     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 276       |\n",
-      "|    fps              | 165       |\n",
-      "|    time_elapsed     | 26        |\n",
-      "|    total_timesteps  | 4416      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.81e+03 |\n",
-      "|    exploration_rate | 0.149     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 280       |\n",
-      "|    fps              | 165       |\n",
-      "|    time_elapsed     | 27        |\n",
-      "|    total_timesteps  | 4480      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.81e+03 |\n",
-      "|    exploration_rate | 0.137     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 284       |\n",
-      "|    fps              | 164       |\n",
-      "|    time_elapsed     | 27        |\n",
-      "|    total_timesteps  | 4544      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.85e+03 |\n",
-      "|    exploration_rate | 0.124     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 288       |\n",
-      "|    fps              | 164       |\n",
-      "|    time_elapsed     | 27        |\n",
-      "|    total_timesteps  | 4608      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.86e+03 |\n",
-      "|    exploration_rate | 0.112     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 292       |\n",
-      "|    fps              | 164       |\n",
-      "|    time_elapsed     | 28        |\n",
-      "|    total_timesteps  | 4672      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.86e+03 |\n",
-      "|    exploration_rate | 0.1       |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 296       |\n",
-      "|    fps              | 164       |\n",
-      "|    time_elapsed     | 28        |\n",
-      "|    total_timesteps  | 4736      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.89e+03 |\n",
-      "|    exploration_rate | 0.088     |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 300       |\n",
-      "|    fps              | 164       |\n",
-      "|    time_elapsed     | 29        |\n",
-      "|    total_timesteps  | 4800      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.91e+03 |\n",
-      "|    exploration_rate | 0.0758    |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 304       |\n",
-      "|    fps              | 164       |\n",
-      "|    time_elapsed     | 29        |\n",
-      "|    total_timesteps  | 4864      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.87e+03 |\n",
-      "|    exploration_rate | 0.0637    |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 308       |\n",
-      "|    fps              | 164       |\n",
-      "|    time_elapsed     | 29        |\n",
-      "|    total_timesteps  | 4928      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.88e+03 |\n",
-      "|    exploration_rate | 0.0515    |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 312       |\n",
-      "|    fps              | 164       |\n",
-      "|    time_elapsed     | 30        |\n",
-      "|    total_timesteps  | 4992      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.85e+03 |\n",
-      "|    exploration_rate | 0.05      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 316       |\n",
-      "|    fps              | 164       |\n",
-      "|    time_elapsed     | 30        |\n",
-      "|    total_timesteps  | 5056      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.84e+03 |\n",
-      "|    exploration_rate | 0.05      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 320       |\n",
-      "|    fps              | 164       |\n",
-      "|    time_elapsed     | 31        |\n",
-      "|    total_timesteps  | 5120      |\n",
-      "-----------------------------------\n",
-      "----------------------------------\n",
-      "| rollout/            |          |\n",
-      "|    ep_len_mean      | 16       |\n",
-      "|    ep_rew_mean      | -2.8e+03 |\n",
-      "|    exploration_rate | 0.05     |\n",
-      "| time/               |          |\n",
-      "|    episodes         | 324      |\n",
-      "|    fps              | 163      |\n",
-      "|    time_elapsed     | 31       |\n",
-      "|    total_timesteps  | 5184     |\n",
-      "----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.75e+03 |\n",
-      "|    exploration_rate | 0.05      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 328       |\n",
-      "|    fps              | 163       |\n",
-      "|    time_elapsed     | 32        |\n",
-      "|    total_timesteps  | 5248      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.74e+03 |\n",
-      "|    exploration_rate | 0.05      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 332       |\n",
-      "|    fps              | 163       |\n",
-      "|    time_elapsed     | 32        |\n",
-      "|    total_timesteps  | 5312      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.79e+03 |\n",
-      "|    exploration_rate | 0.05      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 336       |\n",
-      "|    fps              | 163       |\n",
-      "|    time_elapsed     | 32        |\n",
-      "|    total_timesteps  | 5376      |\n",
-      "-----------------------------------\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.77e+03 |\n",
-      "|    exploration_rate | 0.05      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 340       |\n",
-      "|    fps              | 163       |\n",
-      "|    time_elapsed     | 33        |\n",
-      "|    total_timesteps  | 5440      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.77e+03 |\n",
-      "|    exploration_rate | 0.05      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 344       |\n",
-      "|    fps              | 162       |\n",
-      "|    time_elapsed     | 33        |\n",
-      "|    total_timesteps  | 5504      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.76e+03 |\n",
-      "|    exploration_rate | 0.05      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 348       |\n",
-      "|    fps              | 163       |\n",
-      "|    time_elapsed     | 34        |\n",
-      "|    total_timesteps  | 5568      |\n",
-      "-----------------------------------\n",
-      "----------------------------------\n",
-      "| rollout/            |          |\n",
-      "|    ep_len_mean      | 16       |\n",
-      "|    ep_rew_mean      | -2.8e+03 |\n",
-      "|    exploration_rate | 0.05     |\n",
-      "| time/               |          |\n",
-      "|    episodes         | 352      |\n",
-      "|    fps              | 162      |\n",
-      "|    time_elapsed     | 34       |\n",
-      "|    total_timesteps  | 5632     |\n",
-      "----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.77e+03 |\n",
-      "|    exploration_rate | 0.05      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 356       |\n",
-      "|    fps              | 162       |\n",
-      "|    time_elapsed     | 34        |\n",
-      "|    total_timesteps  | 5696      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.76e+03 |\n",
-      "|    exploration_rate | 0.05      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 360       |\n",
-      "|    fps              | 162       |\n",
-      "|    time_elapsed     | 35        |\n",
-      "|    total_timesteps  | 5760      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.74e+03 |\n",
-      "|    exploration_rate | 0.05      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 364       |\n",
-      "|    fps              | 162       |\n",
-      "|    time_elapsed     | 35        |\n",
-      "|    total_timesteps  | 5824      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.75e+03 |\n",
-      "|    exploration_rate | 0.05      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 368       |\n",
-      "|    fps              | 162       |\n",
-      "|    time_elapsed     | 36        |\n",
-      "|    total_timesteps  | 5888      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.77e+03 |\n",
-      "|    exploration_rate | 0.05      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 372       |\n",
-      "|    fps              | 162       |\n",
-      "|    time_elapsed     | 36        |\n",
-      "|    total_timesteps  | 5952      |\n",
-      "-----------------------------------\n",
-      "-----------------------------------\n",
-      "| rollout/            |           |\n",
-      "|    ep_len_mean      | 16        |\n",
-      "|    ep_rew_mean      | -2.77e+03 |\n",
-      "|    exploration_rate | 0.05      |\n",
-      "| time/               |           |\n",
-      "|    episodes         | 376       |\n",
-      "|    fps              | 162       |\n",
-      "|    time_elapsed     | 37        |\n",
-      "|    total_timesteps  | 6016      |\n",
-      "-----------------------------------\n"
-     ]
-    },
-    {
-     "ename": "KeyboardInterrupt",
-     "evalue": "",
-     "output_type": "error",
-     "traceback": [
-      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
-      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
-      "Cell \u001b[0;32mIn [75], line 8\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[38;5;66;03m#policy_kwargs = dict(net_arch=dict(pi=[64, 64], qf=[64, 64]))\u001b[39;00m\n\u001b[1;32m      7\u001b[0m model \u001b[38;5;241m=\u001b[39m DQN(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mMlpPolicy\u001b[39m\u001b[38;5;124m\"\u001b[39m, env, verbose\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1\u001b[39m,)\n\u001b[0;32m----> 8\u001b[0m \u001b[43mmodel\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlearn\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m50000\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mprogress_bar\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/dqn/dqn.py:267\u001b[0m, in \u001b[0;36mDQN.learn\u001b[0;34m(self, total_timesteps, callback, log_interval, tb_log_name, reset_num_timesteps, progress_bar)\u001b[0m\n\u001b[1;32m    258\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mlearn\u001b[39m(\n\u001b[1;32m    259\u001b[0m     \u001b[38;5;28mself\u001b[39m: SelfDQN,\n\u001b[1;32m    260\u001b[0m     total_timesteps: \u001b[38;5;28mint\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    265\u001b[0m     progress_bar: \u001b[38;5;28mbool\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mFalse\u001b[39;00m,\n\u001b[1;32m    266\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m SelfDQN:\n\u001b[0;32m--> 267\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlearn\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    268\u001b[0m \u001b[43m        \u001b[49m\u001b[43mtotal_timesteps\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtotal_timesteps\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    269\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcallback\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcallback\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    270\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlog_interval\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlog_interval\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    271\u001b[0m \u001b[43m        \u001b[49m\u001b[43mtb_log_name\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtb_log_name\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    272\u001b[0m \u001b[43m        \u001b[49m\u001b[43mreset_num_timesteps\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mreset_num_timesteps\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    273\u001b[0m \u001b[43m        \u001b[49m\u001b[43mprogress_bar\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mprogress_bar\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    274\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/common/off_policy_algorithm.py:312\u001b[0m, in \u001b[0;36mOffPolicyAlgorithm.learn\u001b[0;34m(self, total_timesteps, callback, log_interval, tb_log_name, reset_num_timesteps, progress_bar)\u001b[0m\n\u001b[1;32m    309\u001b[0m callback\u001b[38;5;241m.\u001b[39mon_training_start(\u001b[38;5;28mlocals\u001b[39m(), \u001b[38;5;28mglobals\u001b[39m())\n\u001b[1;32m    311\u001b[0m \u001b[38;5;28;01mwhile\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnum_timesteps \u001b[38;5;241m<\u001b[39m total_timesteps:\n\u001b[0;32m--> 312\u001b[0m     rollout \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcollect_rollouts\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    313\u001b[0m \u001b[43m        \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43menv\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    314\u001b[0m \u001b[43m        \u001b[49m\u001b[43mtrain_freq\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mtrain_freq\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    315\u001b[0m \u001b[43m        \u001b[49m\u001b[43maction_noise\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43maction_noise\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    316\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcallback\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcallback\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    317\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlearning_starts\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlearning_starts\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    318\u001b[0m \u001b[43m        \u001b[49m\u001b[43mreplay_buffer\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mreplay_buffer\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    319\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlog_interval\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlog_interval\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    320\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    322\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m rollout\u001b[38;5;241m.\u001b[39mcontinue_training \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mFalse\u001b[39;00m:\n\u001b[1;32m    323\u001b[0m         \u001b[38;5;28;01mbreak\u001b[39;00m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/common/off_policy_algorithm.py:544\u001b[0m, in \u001b[0;36mOffPolicyAlgorithm.collect_rollouts\u001b[0;34m(self, env, callback, train_freq, replay_buffer, action_noise, learning_starts, log_interval)\u001b[0m\n\u001b[1;32m    541\u001b[0m actions, buffer_actions \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_sample_action(learning_starts, action_noise, env\u001b[38;5;241m.\u001b[39mnum_envs)\n\u001b[1;32m    543\u001b[0m \u001b[38;5;66;03m# Rescale and perform action\u001b[39;00m\n\u001b[0;32m--> 544\u001b[0m new_obs, rewards, dones, infos \u001b[38;5;241m=\u001b[39m \u001b[43menv\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mstep\u001b[49m\u001b[43m(\u001b[49m\u001b[43mactions\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    546\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnum_timesteps \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m env\u001b[38;5;241m.\u001b[39mnum_envs\n\u001b[1;32m    547\u001b[0m num_collected_steps \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1\u001b[39m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/common/vec_env/base_vec_env.py:197\u001b[0m, in \u001b[0;36mVecEnv.step\u001b[0;34m(self, actions)\u001b[0m\n\u001b[1;32m    190\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m    191\u001b[0m \u001b[38;5;124;03mStep the environments with the given action\u001b[39;00m\n\u001b[1;32m    192\u001b[0m \n\u001b[1;32m    193\u001b[0m \u001b[38;5;124;03m:param actions: the action\u001b[39;00m\n\u001b[1;32m    194\u001b[0m \u001b[38;5;124;03m:return: observation, reward, done, information\u001b[39;00m\n\u001b[1;32m    195\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m    196\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mstep_async(actions)\n\u001b[0;32m--> 197\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mstep_wait\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/common/vec_env/dummy_vec_env.py:70\u001b[0m, in \u001b[0;36mDummyVecEnv.step_wait\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m     67\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mbuf_dones[env_idx]:\n\u001b[1;32m     68\u001b[0m         \u001b[38;5;66;03m# save final observation where user can get it, then reset\u001b[39;00m\n\u001b[1;32m     69\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mbuf_infos[env_idx][\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mterminal_observation\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m obs\n\u001b[0;32m---> 70\u001b[0m         obs, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mreset_infos[env_idx] \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43menvs\u001b[49m\u001b[43m[\u001b[49m\u001b[43menv_idx\u001b[49m\u001b[43m]\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mreset\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     71\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_save_obs(env_idx, obs)\n\u001b[1;32m     72\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m (\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_obs_from_buf(), np\u001b[38;5;241m.\u001b[39mcopy(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mbuf_rews), np\u001b[38;5;241m.\u001b[39mcopy(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mbuf_dones), deepcopy(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mbuf_infos))\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/common/monitor.py:83\u001b[0m, in \u001b[0;36mMonitor.reset\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m     81\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mExpected you to pass keyword argument \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mkey\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m into reset\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m     82\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcurrent_reset_info[key] \u001b[38;5;241m=\u001b[39m value\n\u001b[0;32m---> 83\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43menv\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mreset\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
-      "Cell \u001b[0;32mIn [68], line 12\u001b[0m, in \u001b[0;36mTradingEnv.reset\u001b[0;34m(self, seed)\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mreset\u001b[39m(\u001b[38;5;28mself\u001b[39m,seed\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m):\n\u001b[1;32m     11\u001b[0m     \u001b[38;5;66;03m#self.db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\u001b[39;00m\n\u001b[0;32m---> 12\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdb\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mreset_period\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mrnd\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     13\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mtimestep \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m0\u001b[39m\n\u001b[1;32m     14\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mperiod \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1\u001b[39m\n",
-      "File \u001b[0;32m~/Desktop/AI_Double_Auctions/code/3_deep_reinforcement_learning/functions.py:159\u001b[0m, in \u001b[0;36mDatabase.reset_period\u001b[0;34m(self, rnd)\u001b[0m\n\u001b[1;32m    157\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mreset_period\u001b[39m(\u001b[38;5;28mself\u001b[39m, rnd):\n\u001b[1;32m    158\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mrange\u001b[39m(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnbuyers):\n\u001b[0;32m--> 159\u001b[0m         \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mbuyers\u001b[49m\u001b[43m[\u001b[49m\u001b[43mi\u001b[49m\u001b[43m]\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mreset\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrnd\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    160\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mrange\u001b[39m(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnsellers):\n\u001b[1;32m    161\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39msellers[i]\u001b[38;5;241m.\u001b[39mreset(\u001b[38;5;28mself\u001b[39m, rnd)\n",
-      "File \u001b[0;32m~/Desktop/AI_Double_Auctions/code/3_deep_reinforcement_learning/functions.py:181\u001b[0m, in \u001b[0;36mTrader.reset\u001b[0;34m(self, db, rnd)\u001b[0m\n\u001b[1;32m    180\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mreset\u001b[39m(\u001b[38;5;28mself\u001b[39m, db, rnd):\n\u001b[0;32m--> 181\u001b[0m     round_data \u001b[38;5;241m=\u001b[39m \u001b[43mdb\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_round\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrnd\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    182\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnum_tokens_traded \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m0\u001b[39m\n\u001b[1;32m    183\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mbuyer \u001b[38;5;241m==\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m:\n",
-      "File \u001b[0;32m~/Desktop/AI_Double_Auctions/code/3_deep_reinforcement_learning/functions.py:170\u001b[0m, in \u001b[0;36mDatabase.get_round\u001b[0;34m(self, rnd)\u001b[0m\n\u001b[1;32m    169\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mget_round\u001b[39m(\u001b[38;5;28mself\u001b[39m, rnd):\n\u001b[0;32m--> 170\u001b[0m     temp \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mround_data\u001b[49m\u001b[43m[\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mround_data\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mrnd\u001b[49m\u001b[38;5;241;43m==\u001b[39;49m\u001b[43mrnd\u001b[49m\u001b[43m)\u001b[49m\u001b[43m]\u001b[49m\n\u001b[1;32m    171\u001b[0m     temp \u001b[38;5;241m=\u001b[39m temp[[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mrnd\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mdemand_schedule\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124msupply_schedule\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mP_grid\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mredemption_values\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtoken_costs\u001b[39m\u001b[38;5;124m'\u001b[39m,\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mp_eqbm\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mq_eqbm\u001b[39m\u001b[38;5;124m'\u001b[39m]]\n\u001b[1;32m    172\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m temp\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/pandas/core/frame.py:3795\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3793\u001b[0m \u001b[38;5;66;03m# Do we have a (boolean) 1d indexer?\u001b[39;00m\n\u001b[1;32m   3794\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m com\u001b[38;5;241m.\u001b[39mis_bool_indexer(key):\n\u001b[0;32m-> 3795\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_getitem_bool_array\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   3797\u001b[0m \u001b[38;5;66;03m# We are left with two options: a single key, and a collection of keys,\u001b[39;00m\n\u001b[1;32m   3798\u001b[0m \u001b[38;5;66;03m# We interpret tuples as collections only for non-MultiIndex\u001b[39;00m\n\u001b[1;32m   3799\u001b[0m is_single_key \u001b[38;5;241m=\u001b[39m \u001b[38;5;28misinstance\u001b[39m(key, \u001b[38;5;28mtuple\u001b[39m) \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m is_list_like(key)\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/pandas/core/frame.py:3850\u001b[0m, in \u001b[0;36mDataFrame._getitem_bool_array\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3848\u001b[0m key \u001b[38;5;241m=\u001b[39m check_bool_indexer(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mindex, key)\n\u001b[1;32m   3849\u001b[0m indexer \u001b[38;5;241m=\u001b[39m key\u001b[38;5;241m.\u001b[39mnonzero()[\u001b[38;5;241m0\u001b[39m]\n\u001b[0;32m-> 3850\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_take_with_is_copy\u001b[49m\u001b[43m(\u001b[49m\u001b[43mindexer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m0\u001b[39;49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/pandas/core/generic.py:3904\u001b[0m, in \u001b[0;36mNDFrame._take_with_is_copy\u001b[0;34m(self, indices, axis)\u001b[0m\n\u001b[1;32m   3902\u001b[0m result \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_take(indices\u001b[38;5;241m=\u001b[39mindices, axis\u001b[38;5;241m=\u001b[39maxis)\n\u001b[1;32m   3903\u001b[0m \u001b[38;5;66;03m# Maybe set copy if we didn't actually change the index.\u001b[39;00m\n\u001b[0;32m-> 3904\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[43mresult\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_get_axis\u001b[49m\u001b[43m(\u001b[49m\u001b[43maxis\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mequals\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_get_axis\u001b[49m\u001b[43m(\u001b[49m\u001b[43maxis\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m:\n\u001b[1;32m   3905\u001b[0m     result\u001b[38;5;241m.\u001b[39m_set_is_copy(\u001b[38;5;28mself\u001b[39m)\n\u001b[1;32m   3906\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m result\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/pandas/core/indexes/base.py:5590\u001b[0m, in \u001b[0;36mIndex.equals\u001b[0;34m(self, other)\u001b[0m\n\u001b[1;32m   5586\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_extension_array_dtype(other\u001b[38;5;241m.\u001b[39mdtype):\n\u001b[1;32m   5587\u001b[0m     \u001b[38;5;66;03m# All EA-backed Index subclasses override equals\u001b[39;00m\n\u001b[1;32m   5588\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m other\u001b[38;5;241m.\u001b[39mequals(\u001b[38;5;28mself\u001b[39m)\n\u001b[0;32m-> 5590\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43marray_equivalent\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_values\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mother\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_values\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/pandas/core/dtypes/missing.py:549\u001b[0m, in \u001b[0;36marray_equivalent\u001b[0;34m(left, right, strict_nan, dtype_equal)\u001b[0m\n\u001b[1;32m    545\u001b[0m     right \u001b[38;5;241m=\u001b[39m right\u001b[38;5;241m.\u001b[39mview(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mi8\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m    547\u001b[0m \u001b[38;5;66;03m# if we have structured dtypes, compare first\u001b[39;00m\n\u001b[1;32m    548\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m (\n\u001b[0;32m--> 549\u001b[0m     left\u001b[38;5;241m.\u001b[39mdtype\u001b[38;5;241m.\u001b[39mtype \u001b[38;5;129;01mis\u001b[39;00m np\u001b[38;5;241m.\u001b[39mvoid \u001b[38;5;129;01mor\u001b[39;00m right\u001b[38;5;241m.\u001b[39mdtype\u001b[38;5;241m.\u001b[39mtype \u001b[38;5;129;01mis\u001b[39;00m np\u001b[38;5;241m.\u001b[39mvoid\n\u001b[1;32m    550\u001b[0m ) \u001b[38;5;129;01mand\u001b[39;00m left\u001b[38;5;241m.\u001b[39mdtype \u001b[38;5;241m!=\u001b[39m right\u001b[38;5;241m.\u001b[39mdtype:\n\u001b[1;32m    551\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[1;32m    553\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m np\u001b[38;5;241m.\u001b[39marray_equal(left, right)\n",
-      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
-     ]
-    }
-   ],
-   "source": [
-    "from stable_baselines3 import DQN\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "env = TradingEnv(db, nsteps)\n",
-    "env.action_space = spaces.Discrete(31)\n",
-    "#policy_kwargs = dict(net_arch=dict(pi=[64, 64], qf=[64, 64]))\n",
-    "model = DQN(\"MlpPolicy\", env, verbose=1,)\n",
-    "model.learn(50000, progress_bar = False)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 39,
-   "id": "7027bbc1",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>current_bid_idx</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "Empty DataFrame\n",
-       "Columns: []\n",
-       "Index: []"
-      ]
-     },
-     "execution_count": 39,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "db.step_data.head(100).groupby('current_bid_idx').sum()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 40,
-   "id": "5d5a210b",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>current_bid_idx</th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "Empty DataFrame\n",
-       "Columns: []\n",
-       "Index: []"
-      ]
-     },
-     "execution_count": 40,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "db.step_data.tail(100).groupby('current_bid_idx').sum()"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "6de98f33",
-   "metadata": {},
-   "source": [
-    "## ON POLICY"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "75639662",
-   "metadata": {},
-   "source": [
-    "### DDPG - Deterministic Deep Policy Gradient"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 76,
-   "id": "efbf2bdd",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "5d2daaf0a6764c3d85632b9ca4b00659",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "Output()"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Using cpu device\n",
-      "Wrapping the env with a `Monitor` wrapper\n",
-      "Wrapping the env in a DummyVecEnv.\n",
-      "---------------------------------\n",
-      "| rollout/           |          |\n",
-      "|    ep_len_mean     | 16       |\n",
-      "|    ep_rew_mean     | 153      |\n",
-      "| time/              |          |\n",
-      "|    episodes        | 4        |\n",
-      "|    fps             | 143      |\n",
-      "|    time_elapsed    | 0        |\n",
-      "|    total_timesteps | 64       |\n",
-      "---------------------------------\n"
-     ]
-    },
-    {
-     "ename": "RuntimeError",
-     "evalue": "element 0 of tensors does not require grad and does not have a grad_fn",
-     "output_type": "error",
-     "traceback": [
-      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
-      "\u001b[0;31mRuntimeError\u001b[0m                              Traceback (most recent call last)",
-      "Cell \u001b[0;32mIn [76], line 7\u001b[0m\n\u001b[1;32m      5\u001b[0m policy_kwargs \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mdict\u001b[39m(net_arch\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mdict\u001b[39m(pi\u001b[38;5;241m=\u001b[39m[\u001b[38;5;241m64\u001b[39m, \u001b[38;5;241m64\u001b[39m], qf\u001b[38;5;241m=\u001b[39m[\u001b[38;5;241m64\u001b[39m, \u001b[38;5;241m64\u001b[39m]))\n\u001b[1;32m      6\u001b[0m model \u001b[38;5;241m=\u001b[39m DDPG(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mMlpPolicy\u001b[39m\u001b[38;5;124m\"\u001b[39m, env, policy_kwargs\u001b[38;5;241m=\u001b[39mpolicy_kwargs, verbose\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1\u001b[39m,)\n\u001b[0;32m----> 7\u001b[0m \u001b[43mmodel\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlearn\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m50000\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mprogress_bar\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/ddpg/ddpg.py:123\u001b[0m, in \u001b[0;36mDDPG.learn\u001b[0;34m(self, total_timesteps, callback, log_interval, tb_log_name, reset_num_timesteps, progress_bar)\u001b[0m\n\u001b[1;32m    114\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mlearn\u001b[39m(\n\u001b[1;32m    115\u001b[0m     \u001b[38;5;28mself\u001b[39m: SelfDDPG,\n\u001b[1;32m    116\u001b[0m     total_timesteps: \u001b[38;5;28mint\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    121\u001b[0m     progress_bar: \u001b[38;5;28mbool\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mFalse\u001b[39;00m,\n\u001b[1;32m    122\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m SelfDDPG:\n\u001b[0;32m--> 123\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlearn\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    124\u001b[0m \u001b[43m        \u001b[49m\u001b[43mtotal_timesteps\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtotal_timesteps\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    125\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcallback\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcallback\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    126\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlog_interval\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlog_interval\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    127\u001b[0m \u001b[43m        \u001b[49m\u001b[43mtb_log_name\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtb_log_name\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    128\u001b[0m \u001b[43m        \u001b[49m\u001b[43mreset_num_timesteps\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mreset_num_timesteps\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    129\u001b[0m \u001b[43m        \u001b[49m\u001b[43mprogress_bar\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mprogress_bar\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    130\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/td3/td3.py:222\u001b[0m, in \u001b[0;36mTD3.learn\u001b[0;34m(self, total_timesteps, callback, log_interval, tb_log_name, reset_num_timesteps, progress_bar)\u001b[0m\n\u001b[1;32m    213\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mlearn\u001b[39m(\n\u001b[1;32m    214\u001b[0m     \u001b[38;5;28mself\u001b[39m: SelfTD3,\n\u001b[1;32m    215\u001b[0m     total_timesteps: \u001b[38;5;28mint\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    220\u001b[0m     progress_bar: \u001b[38;5;28mbool\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mFalse\u001b[39;00m,\n\u001b[1;32m    221\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m SelfTD3:\n\u001b[0;32m--> 222\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlearn\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    223\u001b[0m \u001b[43m        \u001b[49m\u001b[43mtotal_timesteps\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtotal_timesteps\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    224\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcallback\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcallback\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    225\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlog_interval\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlog_interval\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    226\u001b[0m \u001b[43m        \u001b[49m\u001b[43mtb_log_name\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtb_log_name\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    227\u001b[0m \u001b[43m        \u001b[49m\u001b[43mreset_num_timesteps\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mreset_num_timesteps\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    228\u001b[0m \u001b[43m        \u001b[49m\u001b[43mprogress_bar\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mprogress_bar\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    229\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/common/off_policy_algorithm.py:331\u001b[0m, in \u001b[0;36mOffPolicyAlgorithm.learn\u001b[0;34m(self, total_timesteps, callback, log_interval, tb_log_name, reset_num_timesteps, progress_bar)\u001b[0m\n\u001b[1;32m    329\u001b[0m         \u001b[38;5;66;03m# Special case when the user passes `gradient_steps=0`\u001b[39;00m\n\u001b[1;32m    330\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m gradient_steps \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m0\u001b[39m:\n\u001b[0;32m--> 331\u001b[0m             \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mtrain\u001b[49m\u001b[43m(\u001b[49m\u001b[43mbatch_size\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mbatch_size\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgradient_steps\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mgradient_steps\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    333\u001b[0m callback\u001b[38;5;241m.\u001b[39mon_training_end()\n\u001b[1;32m    335\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/td3/td3.py:188\u001b[0m, in \u001b[0;36mTD3.train\u001b[0;34m(self, gradient_steps, batch_size)\u001b[0m\n\u001b[1;32m    186\u001b[0m \u001b[38;5;66;03m# Optimize the critics\u001b[39;00m\n\u001b[1;32m    187\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcritic\u001b[38;5;241m.\u001b[39moptimizer\u001b[38;5;241m.\u001b[39mzero_grad()\n\u001b[0;32m--> 188\u001b[0m \u001b[43mcritic_loss\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mbackward\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    189\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcritic\u001b[38;5;241m.\u001b[39moptimizer\u001b[38;5;241m.\u001b[39mstep()\n\u001b[1;32m    191\u001b[0m \u001b[38;5;66;03m# Delayed policy updates\u001b[39;00m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/torch/_tensor.py:488\u001b[0m, in \u001b[0;36mTensor.backward\u001b[0;34m(self, gradient, retain_graph, create_graph, inputs)\u001b[0m\n\u001b[1;32m    478\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m has_torch_function_unary(\u001b[38;5;28mself\u001b[39m):\n\u001b[1;32m    479\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m handle_torch_function(\n\u001b[1;32m    480\u001b[0m         Tensor\u001b[38;5;241m.\u001b[39mbackward,\n\u001b[1;32m    481\u001b[0m         (\u001b[38;5;28mself\u001b[39m,),\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    486\u001b[0m         inputs\u001b[38;5;241m=\u001b[39minputs,\n\u001b[1;32m    487\u001b[0m     )\n\u001b[0;32m--> 488\u001b[0m \u001b[43mtorch\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mautograd\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mbackward\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    489\u001b[0m \u001b[43m    \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgradient\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mretain_graph\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcreate_graph\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43minputs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43minputs\u001b[49m\n\u001b[1;32m    490\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/torch/autograd/__init__.py:197\u001b[0m, in \u001b[0;36mbackward\u001b[0;34m(tensors, grad_tensors, retain_graph, create_graph, grad_variables, inputs)\u001b[0m\n\u001b[1;32m    192\u001b[0m     retain_graph \u001b[38;5;241m=\u001b[39m create_graph\n\u001b[1;32m    194\u001b[0m \u001b[38;5;66;03m# The reason we repeat same the comment below is that\u001b[39;00m\n\u001b[1;32m    195\u001b[0m \u001b[38;5;66;03m# some Python versions print out the first line of a multi-line function\u001b[39;00m\n\u001b[1;32m    196\u001b[0m \u001b[38;5;66;03m# calls in the traceback and some print out the last line\u001b[39;00m\n\u001b[0;32m--> 197\u001b[0m \u001b[43mVariable\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_execution_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mrun_backward\u001b[49m\u001b[43m(\u001b[49m\u001b[43m  \u001b[49m\u001b[38;5;66;43;03m# Calls into the C++ engine to run the backward pass\u001b[39;49;00m\n\u001b[1;32m    198\u001b[0m \u001b[43m    \u001b[49m\u001b[43mtensors\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgrad_tensors_\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mretain_graph\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcreate_graph\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43minputs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    199\u001b[0m \u001b[43m    \u001b[49m\u001b[43mallow_unreachable\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43maccumulate_grad\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m)\u001b[49m\n",
-      "\u001b[0;31mRuntimeError\u001b[0m: element 0 of tensors does not require grad and does not have a grad_fn"
-     ]
-    }
-   ],
-   "source": [
-    "from stable_baselines3 import DDPG\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "env = TradingEnv(db, nsteps)\n",
-    "policy_kwargs = dict(net_arch=dict(pi=[64, 64], qf=[64, 64]))\n",
-    "model = DDPG(\"MlpPolicy\", env, policy_kwargs=policy_kwargs, verbose=1,)\n",
-    "model.learn(50000, progress_bar = True)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 52,
-   "id": "9acec3e5",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>45</td>\n",
-       "      <td>94</td>\n",
-       "      <td>1208.78</td>\n",
-       "      <td>447.0</td>\n",
-       "      <td>43</td>\n",
-       "      <td>18</td>\n",
-       "      <td>18</td>\n",
-       "      <td>827.89</td>\n",
-       "      <td>18</td>\n",
-       "      <td>727.91</td>\n",
-       "      <td>380.89</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>77</td>\n",
-       "      <td>222</td>\n",
-       "      <td>1645.40</td>\n",
-       "      <td>819.4</td>\n",
-       "      <td>114</td>\n",
-       "      <td>19</td>\n",
-       "      <td>18</td>\n",
-       "      <td>871.90</td>\n",
-       "      <td>19</td>\n",
-       "      <td>667.90</td>\n",
-       "      <td>449.00</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>72</td>\n",
-       "      <td>166</td>\n",
-       "      <td>1544.90</td>\n",
-       "      <td>696.9</td>\n",
-       "      <td>96</td>\n",
-       "      <td>26</td>\n",
-       "      <td>25</td>\n",
-       "      <td>1122.30</td>\n",
-       "      <td>26</td>\n",
-       "      <td>736.10</td>\n",
-       "      <td>425.40</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>70</td>\n",
-       "      <td>244</td>\n",
-       "      <td>1157.20</td>\n",
-       "      <td>819.2</td>\n",
-       "      <td>92</td>\n",
-       "      <td>19</td>\n",
-       "      <td>18</td>\n",
-       "      <td>761.45</td>\n",
-       "      <td>19</td>\n",
-       "      <td>307.15</td>\n",
-       "      <td>194.35</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "                 rnd  period  step  current_bid  current_ask  current_ask_idx  \\\n",
-       "current_bid_idx                                                                 \n",
-       "0                  0      45    94      1208.78        447.0               43   \n",
-       "1                  0      77   222      1645.40        819.4              114   \n",
-       "2                  0      72   166      1544.90        696.9               96   \n",
-       "3                  0      70   244      1157.20        819.2               92   \n",
-       "\n",
-       "                 buy  sell    price  sale  bprofit  sprofit  \n",
-       "current_bid_idx                                              \n",
-       "0                 18    18   827.89    18   727.91   380.89  \n",
-       "1                 19    18   871.90    19   667.90   449.00  \n",
-       "2                 26    25  1122.30    26   736.10   425.40  \n",
-       "3                 19    18   761.45    19   307.15   194.35  "
-      ]
-     },
-     "execution_count": 52,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "db.step_data.head(100).groupby('current_bid_idx').sum()"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 53,
-   "id": "f8a34e5e",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<div>\n",
-       "<style scoped>\n",
-       "    .dataframe tbody tr th:only-of-type {\n",
-       "        vertical-align: middle;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe tbody tr th {\n",
-       "        vertical-align: top;\n",
-       "    }\n",
-       "\n",
-       "    .dataframe thead th {\n",
-       "        text-align: right;\n",
-       "    }\n",
-       "</style>\n",
-       "<table border=\"1\" class=\"dataframe\">\n",
-       "  <thead>\n",
-       "    <tr style=\"text-align: right;\">\n",
-       "      <th></th>\n",
-       "      <th>rnd</th>\n",
-       "      <th>period</th>\n",
-       "      <th>step</th>\n",
-       "      <th>current_bid</th>\n",
-       "      <th>current_ask</th>\n",
-       "      <th>current_ask_idx</th>\n",
-       "      <th>buy</th>\n",
-       "      <th>sell</th>\n",
-       "      <th>price</th>\n",
-       "      <th>sale</th>\n",
-       "      <th>bprofit</th>\n",
-       "      <th>sprofit</th>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>current_bid_idx</th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "      <th></th>\n",
-       "    </tr>\n",
-       "  </thead>\n",
-       "  <tbody>\n",
-       "    <tr>\n",
-       "      <th>0</th>\n",
-       "      <td>0</td>\n",
-       "      <td>10440</td>\n",
-       "      <td>114</td>\n",
-       "      <td>1423.45</td>\n",
-       "      <td>516.5</td>\n",
-       "      <td>61</td>\n",
-       "      <td>18</td>\n",
-       "      <td>18</td>\n",
-       "      <td>876.75</td>\n",
-       "      <td>18</td>\n",
-       "      <td>679.05</td>\n",
-       "      <td>468.55</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>1</th>\n",
-       "      <td>0</td>\n",
-       "      <td>11931</td>\n",
-       "      <td>163</td>\n",
-       "      <td>1321.00</td>\n",
-       "      <td>644.5</td>\n",
-       "      <td>92</td>\n",
-       "      <td>18</td>\n",
-       "      <td>16</td>\n",
-       "      <td>786.90</td>\n",
-       "      <td>18</td>\n",
-       "      <td>650.70</td>\n",
-       "      <td>358.70</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>2</th>\n",
-       "      <td>0</td>\n",
-       "      <td>13416</td>\n",
-       "      <td>166</td>\n",
-       "      <td>1654.50</td>\n",
-       "      <td>720.9</td>\n",
-       "      <td>73</td>\n",
-       "      <td>27</td>\n",
-       "      <td>27</td>\n",
-       "      <td>1187.70</td>\n",
-       "      <td>27</td>\n",
-       "      <td>730.50</td>\n",
-       "      <td>466.80</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>3</th>\n",
-       "      <td>0</td>\n",
-       "      <td>13901</td>\n",
-       "      <td>299</td>\n",
-       "      <td>1147.90</td>\n",
-       "      <td>927.3</td>\n",
-       "      <td>106</td>\n",
-       "      <td>19</td>\n",
-       "      <td>18</td>\n",
-       "      <td>747.10</td>\n",
-       "      <td>19</td>\n",
-       "      <td>321.50</td>\n",
-       "      <td>144.70</td>\n",
-       "    </tr>\n",
-       "  </tbody>\n",
-       "</table>\n",
-       "</div>"
-      ],
-      "text/plain": [
-       "                 rnd  period  step  current_bid  current_ask  current_ask_idx  \\\n",
-       "current_bid_idx                                                                 \n",
-       "0                  0   10440   114      1423.45        516.5               61   \n",
-       "1                  0   11931   163      1321.00        644.5               92   \n",
-       "2                  0   13416   166      1654.50        720.9               73   \n",
-       "3                  0   13901   299      1147.90        927.3              106   \n",
-       "\n",
-       "                 buy  sell    price  sale  bprofit  sprofit  \n",
-       "current_bid_idx                                              \n",
-       "0                 18    18   876.75    18   679.05   468.55  \n",
-       "1                 18    16   786.90    18   650.70   358.70  \n",
-       "2                 27    27  1187.70    27   730.50   466.80  \n",
-       "3                 19    18   747.10    19   321.50   144.70  "
-      ]
-     },
-     "execution_count": 53,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "db.step_data.tail(100).groupby('current_bid_idx').sum()"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "55dfc29c",
-   "metadata": {},
-   "source": [
-    "### PPO - Proximal Policy Optimization"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 78,
-   "id": "daa5db6d",
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Using cpu device\n",
-       "</pre>\n"
-      ],
-      "text/plain": [
-       "Using cpu device\n"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Wrapping the env with a `Monitor` wrapper\n",
-       "</pre>\n"
-      ],
-      "text/plain": [
-       "Wrapping the env with a `Monitor` wrapper\n"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Wrapping the env in a DummyVecEnv.\n",
-       "</pre>\n"
-      ],
-      "text/plain": [
-       "Wrapping the env in a DummyVecEnv.\n"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">---------------------------------\n",
-       "| rollout/           |          |\n",
-       "|    ep_len_mean     | 16       |\n",
-       "|    ep_rew_mean     | 198      |\n",
-       "| time/              |          |\n",
-       "|    fps             | 142      |\n",
-       "|    iterations      | 1        |\n",
-       "|    time_elapsed    | 14       |\n",
-       "|    total_timesteps | 2048     |\n",
-       "---------------------------------\n",
-       "</pre>\n"
-      ],
-      "text/plain": [
-       "---------------------------------\n",
-       "| rollout/           |          |\n",
-       "|    ep_len_mean     | 16       |\n",
-       "|    ep_rew_mean     | 198      |\n",
-       "| time/              |          |\n",
-       "|    fps             | 142      |\n",
-       "|    iterations      | 1        |\n",
-       "|    time_elapsed    | 14       |\n",
-       "|    total_timesteps | 2048     |\n",
-       "---------------------------------\n"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "ename": "RuntimeError",
-     "evalue": "element 0 of tensors does not require grad and does not have a grad_fn",
-     "output_type": "error",
-     "traceback": [
-      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
-      "\u001b[0;31mRuntimeError\u001b[0m                              Traceback (most recent call last)",
-      "Cell \u001b[0;32mIn [78], line 7\u001b[0m\n\u001b[1;32m      5\u001b[0m policy_kwargs \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mdict\u001b[39m(net_arch\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mdict\u001b[39m(pi\u001b[38;5;241m=\u001b[39m[\u001b[38;5;241m64\u001b[39m, \u001b[38;5;241m64\u001b[39m], qf\u001b[38;5;241m=\u001b[39m[\u001b[38;5;241m64\u001b[39m, \u001b[38;5;241m64\u001b[39m]))\n\u001b[1;32m      6\u001b[0m model \u001b[38;5;241m=\u001b[39m PPO(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mMlpPolicy\u001b[39m\u001b[38;5;124m\"\u001b[39m, env, policy_kwargs\u001b[38;5;241m=\u001b[39mpolicy_kwargs, verbose\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1\u001b[39m)\n\u001b[0;32m----> 7\u001b[0m \u001b[43mmodel\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlearn\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m50000\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mprogress_bar\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/ppo/ppo.py:308\u001b[0m, in \u001b[0;36mPPO.learn\u001b[0;34m(self, total_timesteps, callback, log_interval, tb_log_name, reset_num_timesteps, progress_bar)\u001b[0m\n\u001b[1;32m    299\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mlearn\u001b[39m(\n\u001b[1;32m    300\u001b[0m     \u001b[38;5;28mself\u001b[39m: SelfPPO,\n\u001b[1;32m    301\u001b[0m     total_timesteps: \u001b[38;5;28mint\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    306\u001b[0m     progress_bar: \u001b[38;5;28mbool\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mFalse\u001b[39;00m,\n\u001b[1;32m    307\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m SelfPPO:\n\u001b[0;32m--> 308\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlearn\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    309\u001b[0m \u001b[43m        \u001b[49m\u001b[43mtotal_timesteps\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtotal_timesteps\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    310\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcallback\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcallback\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    311\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlog_interval\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlog_interval\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    312\u001b[0m \u001b[43m        \u001b[49m\u001b[43mtb_log_name\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtb_log_name\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    313\u001b[0m \u001b[43m        \u001b[49m\u001b[43mreset_num_timesteps\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mreset_num_timesteps\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    314\u001b[0m \u001b[43m        \u001b[49m\u001b[43mprogress_bar\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mprogress_bar\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    315\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/common/on_policy_algorithm.py:281\u001b[0m, in \u001b[0;36mOnPolicyAlgorithm.learn\u001b[0;34m(self, total_timesteps, callback, log_interval, tb_log_name, reset_num_timesteps, progress_bar)\u001b[0m\n\u001b[1;32m    278\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlogger\u001b[38;5;241m.\u001b[39mrecord(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mtime/total_timesteps\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnum_timesteps, exclude\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mtensorboard\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m    279\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlogger\u001b[38;5;241m.\u001b[39mdump(step\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnum_timesteps)\n\u001b[0;32m--> 281\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mtrain\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    283\u001b[0m callback\u001b[38;5;241m.\u001b[39mon_training_end()\n\u001b[1;32m    285\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/stable_baselines3/ppo/ppo.py:272\u001b[0m, in \u001b[0;36mPPO.train\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    270\u001b[0m \u001b[38;5;66;03m# Optimization step\u001b[39;00m\n\u001b[1;32m    271\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mpolicy\u001b[38;5;241m.\u001b[39moptimizer\u001b[38;5;241m.\u001b[39mzero_grad()\n\u001b[0;32m--> 272\u001b[0m \u001b[43mloss\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mbackward\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    273\u001b[0m \u001b[38;5;66;03m# Clip grad norm\u001b[39;00m\n\u001b[1;32m    274\u001b[0m th\u001b[38;5;241m.\u001b[39mnn\u001b[38;5;241m.\u001b[39mutils\u001b[38;5;241m.\u001b[39mclip_grad_norm_(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mpolicy\u001b[38;5;241m.\u001b[39mparameters(), \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mmax_grad_norm)\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/torch/_tensor.py:488\u001b[0m, in \u001b[0;36mTensor.backward\u001b[0;34m(self, gradient, retain_graph, create_graph, inputs)\u001b[0m\n\u001b[1;32m    478\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m has_torch_function_unary(\u001b[38;5;28mself\u001b[39m):\n\u001b[1;32m    479\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m handle_torch_function(\n\u001b[1;32m    480\u001b[0m         Tensor\u001b[38;5;241m.\u001b[39mbackward,\n\u001b[1;32m    481\u001b[0m         (\u001b[38;5;28mself\u001b[39m,),\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    486\u001b[0m         inputs\u001b[38;5;241m=\u001b[39minputs,\n\u001b[1;32m    487\u001b[0m     )\n\u001b[0;32m--> 488\u001b[0m \u001b[43mtorch\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mautograd\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mbackward\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    489\u001b[0m \u001b[43m    \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgradient\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mretain_graph\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcreate_graph\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43minputs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43minputs\u001b[49m\n\u001b[1;32m    490\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m/usr/local/lib/python3.10/site-packages/torch/autograd/__init__.py:197\u001b[0m, in \u001b[0;36mbackward\u001b[0;34m(tensors, grad_tensors, retain_graph, create_graph, grad_variables, inputs)\u001b[0m\n\u001b[1;32m    192\u001b[0m     retain_graph \u001b[38;5;241m=\u001b[39m create_graph\n\u001b[1;32m    194\u001b[0m \u001b[38;5;66;03m# The reason we repeat same the comment below is that\u001b[39;00m\n\u001b[1;32m    195\u001b[0m \u001b[38;5;66;03m# some Python versions print out the first line of a multi-line function\u001b[39;00m\n\u001b[1;32m    196\u001b[0m \u001b[38;5;66;03m# calls in the traceback and some print out the last line\u001b[39;00m\n\u001b[0;32m--> 197\u001b[0m \u001b[43mVariable\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_execution_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mrun_backward\u001b[49m\u001b[43m(\u001b[49m\u001b[43m  \u001b[49m\u001b[38;5;66;43;03m# Calls into the C++ engine to run the backward pass\u001b[39;49;00m\n\u001b[1;32m    198\u001b[0m \u001b[43m    \u001b[49m\u001b[43mtensors\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgrad_tensors_\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mretain_graph\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcreate_graph\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43minputs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    199\u001b[0m \u001b[43m    \u001b[49m\u001b[43mallow_unreachable\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43maccumulate_grad\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m)\u001b[49m\n",
-      "\u001b[0;31mRuntimeError\u001b[0m: element 0 of tensors does not require grad and does not have a grad_fn"
-     ]
-    }
-   ],
-   "source": [
-    "from stable_baselines3 import PPO\n",
-    "db = Database(game_metadata, buyer_strategies, seller_strategies)\n",
-    "db.reset_round(rnd, ntokens, nbuyers, nsellers, R1, R2, R3, R4)\n",
-    "env = TradingEnv(db, nsteps)\n",
-    "policy_kwargs = dict(net_arch=dict(pi=[64, 64], qf=[64, 64]))\n",
-    "model = PPO(\"MlpPolicy\", env, policy_kwargs=policy_kwargs, verbose=1)\n",
-    "model.learn(50000, progress_bar = False)"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "id": "86dbafb0",
-   "metadata": {},
-   "source": [
-    "### A2C - Advantage Actor-Critic"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "8cc92acb",
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "# Create A2C model\n",
-    "from stable_baselines3.ppo.policies import MlpPolicy\n",
-    "a2c_model = A2C(MlpPolicy, env, verbose=0)\n",
-    "\n",
-    "# Train the A2C agent for 10000 steps\n",
-    "a2c_model.learn(total_timesteps=training_step, progress_bar = True)\n",
-    "\n",
-    "# Evaluate the trained A2C agent\n",
-    "mean_reward_a2c, std_reward_a2c = evaluate_policy(a2c_model, env, n_eval_episodes=eval_steps)\n",
-    "print(f\"A2C mean_reward: {mean_reward_a2c:.2f} +/- {std_reward_a2c:.2f}\")"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "03e53392",
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3 (ipykernel)",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 3
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.10.13"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 5
-}